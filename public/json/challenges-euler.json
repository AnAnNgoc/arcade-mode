{
  "name": "ArcadeMode Interview Questions",
  "order": "",
  "time": "",
  "helpRoom": "",
  "challenges": [
    {
      "title": "Problem 1: Multiples of 3 and 5",
      "type": "project-euler",
      "categories": "math",
      "difficulty": "1",
      "benchmark": "//replaceWithActualFunctionHere;",
      "description": [
        "<div class=\"euler\"><p class=\"euler__paragraph\">If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.</p>",
        "<p class=\"euler__paragraph\">Find the sum of all the multiples of 3 or 5 below 1000.</p></div>"
      ],
      "challengeSeed": [
        "function euler1() {",
        "  // Good luck!",
        "  return true;",
        "}",
        "",
        "euler1();"
      ],
      "solutions": [
        "function euler1() {\n  let sum = 0;\n  for (let i = 1; i < 1000; i++) {\n    if (i % 3 === 0 || i % 5 === 0) {\n      sum += i;\n    }\n  }\n  return sum;\n}\n"
      ],
      "tail": "// not used",
      "tests": [
        "assert(typeof euler1 === 'function', 'message: <code>euler1()</code> is a function.');",
        "assert.strictEqual(euler1(), 233168, 'message: <code>euler1()</code> should return 233168.');"
      ],
      "id": "5900f36e1000cf542c50fe80"
    },
    {
      "title": "Problem 2: Even Fibonacci numbers",
      "type": "project-euler",
      "categories": "math",
      "difficulty": "2",
      "benchmark": "//replaceWithActualFunctionHere;",
      "description": [
        "<div class=\"euler\"><p class=\"euler__paragraph\">Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>",
        "<p class=\"euler__paragraph\">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>",
        "<p class=\"euler__paragraph\">By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p></div>"
      ],
      "challengeSeed": [
        "function euler2() {",
        "  // Good luck!",
        "  return true;",
        "}",
        "",
        "euler2();"
      ],
      "solutions": [
        "function euler2() {\n  let fib1 = 1;\n  let fib2 = 1;\n  let result = 0;\n  let sum = 0;\n\n  while (result < 4000000) {\n    if (result % 2 === 0) {\n      sum += result;\n    }\n\n    result = fib1 + fib2;\n    fib1 = fib2;\n    fib2 = result;\n  }\n\n  return sum;\n}\n"
      ],
      "tail": "const replaceThis = 3;",
      "tests": [
        "assert(typeof euler2 === 'function', 'message: <code>euler2()</code> is a function.');",
        "assert.strictEqual(euler2(), 4613732, 'message: <code>euler2()</code> should return 4613732.');"
      ],
      "id": "5900f36e1000cf542c50fe81"
    }
  ]
}