
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Jaro distance
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
///  
/// <br>
/// The Jaro distance is a measure of similarity between two strings. 
/// <br>
/// The higher the Jaro distance for two strings is, the more similar the strings are. 
/// <br>
/// The score is normalized such that &nbsp; <span class="rosetta__text--bold">0</span> &nbsp; equates to no similarity and &nbsp; <span class="rosetta__text--bold">1</span> &nbsp; is an exact match.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">;Definition</dt></dl>
/// <br>
/// The Jaro distance &nbsp; $d_j$ &nbsp; of two given strings &nbsp; $s_1$ &nbsp; and &nbsp; $s_2$ &nbsp; is
/// <br>
/// <span class="rosetta__text--indented"> $d_j = \left\{</span>
/// <br>
/// \begin{array}{l l}
///   0 & \text{if }m = 0\\
///   \frac{1}{3}\left(\frac{m}{|s_1|} + \frac{m}{|s_2|} + \frac{m-t}{m}\right) & \text{otherwise} \end{array} \right.$
/// <br>
/// Where:
/// <br>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered">$m$ &nbsp; is the number of <span class="rosetta__text--italic">matching characters</span>;</li>
/// <li class="rosetta__list-item--unordered">$t$ &nbsp; is half the number of <span class="rosetta__text--italic">transpositions</span>.</li>
/// <br>
/// </ul>
/// <br>
/// Two characters from &nbsp; $s_1$ &nbsp; and &nbsp; $s_2$ &nbsp; respectively, are considered <span class="rosetta__text--italic">matching</span> only if they are the same and not farther than &nbsp; $\left\lfloor\frac{\max(|s_1|,|s_2|)}{2}\right\rfloor-1$.
/// <br>
/// Each character of &nbsp; $s_1$ &nbsp; is compared with all its matching
/// characters in &nbsp; $s_2$. 
/// <br>
/// The number of matching (but different sequence order) characters
/// divided by 2 defines the number of <span class="rosetta__text--italic">transpositions</span>.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">;Example</dt></dl>
/// <br>
/// Given the strings &nbsp; $s_1$ &nbsp; <span class="rosetta__text--italic">DWAYNE</span> &nbsp; and &nbsp; $s_2$ &nbsp; <span class="rosetta__text--italic">DUANE</span> &nbsp; we find:
/// <br>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered">$m = 4$</li>
/// <li class="rosetta__list-item--unordered">$|s_1| = 6$</li>
/// <li class="rosetta__list-item--unordered">$|s_2| = 5$</li>
/// <li class="rosetta__list-item--unordered">$t = 0$</li>
/// <br>
/// </ul>
/// <br>
/// We find a Jaro score of:
/// <br>
/// <span class="rosetta__text--indented"> $d_j = \frac{1}{3}\left(\frac{4}{6} + \frac{4}{5} + \frac{4-0}{4}\right) = 0.822$</span>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task</dt></dl>
/// <br>
/// Implement the Jaro-distance algorithm and show the distances for each of the following pairs:
/// <br>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered">("MARTHA", "MARHTA")</li>
/// <li class="rosetta__list-item--unordered">("DIXON", "DICKSONX")</li>
/// <li class="rosetta__list-item--unordered">("JELLYFISH", "SMELLYFISH")</li>
/// <br>
/// </ul>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title"> See also</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Jaro-Winkler_distance" title="wp: Jaro-Winkler_distance">Jaroâ€“Winkler distance</a> on Wikipedia.</li>
/// <br>
/// </ul><br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
