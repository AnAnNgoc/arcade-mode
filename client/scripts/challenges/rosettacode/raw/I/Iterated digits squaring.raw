
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Iterated digits squaring
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <p class="rosetta__paragraph">If you add the square of the digits of a Natural number (an integer bigger than zero), you always end with either 1 or 89:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">15 -> 26 -> 40 -> 16 -> 37 -> 58 -> 89
/// 7 -> 49 -> 97 -> 130 -> 10 -> 1</pre></div>
/// <p class="rosetta__paragraph">An example in Python:</p><br/><p class="rosetta__paragraph"><lang python>>>> step = lambda x: sum(int(d) ** 2 for d in str(x))</p>
/// <p class="rosetta__paragraph">>>> iterate = lambda x: x if x in [1, 89] else iterate(step(x))</p>
/// <p class="rosetta__paragraph">>>> [iterate(x) for x in xrange(1, 20)]</p>
/// <p class="rosetta__paragraph">[1, 89, 89, 89, 89, 89, 1, 89, 89, 1, 89, 89, 1, 89, 89, 89, 89, 89, 1]</lang></p><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented"> Count how many number chains for integers 1 <= n < 100_000_000 end with a value 89.</span></p>
/// <p class="rosetta__paragraph">Or, for much less credit - (showing that your algorithm and/or language is slow):</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented"> Count how many number chains for integers 1 <= n < 1_000_000 end with a value 89.</span></p><br/><p class="rosetta__paragraph">This problem derives from the <a class="rosetta__link--wiki" href="https://projecteuler.net/problem=92" title="link: https://projecteuler.net/problem=92">Project Euler problem 92</a>.</p><br/><p class="rosetta__paragraph">For a quick algorithm for this task see <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Talk:Iterated_digits_squaring" title="Talk:Iterated_digits_squaring">the talk page</a></p><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Cf:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Combinations with repetitions" title="Combinations with repetitions">Combinations with repetitions</a></li>
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Digital root" title="Digital root">Digital root</a></li>
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Digital root/Multiplicative digital root" title="Digital root/Multiplicative digital root">Digital root/Multiplicative digital root</a></li></ul><br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
