
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Environment variables
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
///  
/// [[Category:Environment variables]] 
/// [[Category:Initialization]] 
/// [[Category:Simple]]
/// <br>
///   <!-- Does not have an environment other than regular global variables. -->
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Show how to get one of your process's <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Environment variable" title="wp: Environment variable">environment variables</a>. 
/// <br>
/// The available variables vary by system; &nbsp; some of the common ones available on Unix include:
/// <span class="rosetta__text--indented">::* &nbsp; PATH</span>
/// <span class="rosetta__text--indented">::* &nbsp; HOME</span>
/// <span class="rosetta__text--indented">::* &nbsp; USER</span>
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var shell = new ActiveXObject("WScript.Shell");
var env = shell.Environment("PROCESS");
WScript.echo('SYSTEMROOT=' + env.item('SYSTEMROOT'));

/// rawSolutions:
=={{header|JavaScript}}==
The JavaScript language has no facilities to access the computer: it relies on the host environment to provide it.
{{works with|JScript}}
<lang javascript>var shell = new ActiveXObject("WScript.Shell");
var env = shell.Environment("PROCESS");
WScript.echo('SYSTEMROOT=' + env.item('SYSTEMROOT'));</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
