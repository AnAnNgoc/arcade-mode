
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Enforced immutability
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Demonstrate any means your language has to prevent the modification of values, or to create objects that cannot be modified after they have been created.
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
const pi = 3.1415;
const msg = "Hello World";

/// rawSolutions:
=={{header|JavaScript}}==
You can create constants with the [https://developer.mozilla.org/en/JavaScript/Reference/Statements/const Mozilla-specific extension const]. This is not supported by IE and it only works on simple scalars and not on arrays, objects, or parameters.

'''Update''': const is now a standard part of ES6 JavaScript, and works with all data types, including arrays, objects, and parameters. It is not, however, included in the ES5 standard.
<lang javascript>const pi = 3.1415;
const msg = "Hello World";</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
