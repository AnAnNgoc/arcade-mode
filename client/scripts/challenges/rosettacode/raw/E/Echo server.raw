
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Echo server
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// Create a network service that sits on TCP port <tt>12321</tt>, which accepts connections on that port, and which echoes complete lines (using a carriage-return/line-feed sequence as line separator) back to clients. No error handling is required. For the purposes of testing, it is only necessary to support connections from localhost (<tt>127.0.0.1</tt> or perhaps <tt>::1</tt>). Logging of connection information to standard output is recommended.
/// <br>
/// The implementation must be able to handle simultaneous connections from multiple clients. A multi-threaded or multi-process solution may be used. Each connection must be able to echo more than a single line.
/// <br>
/// The implementation must not stop responding to other clients if one client sends a partial line or stops reading responses.
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var net = require('net');

var server = net.createServer(function(conn) {
  console.log("Connection from " + conn.remoteAddress + " on port " + conn.remotePort);
  conn.setEncoding("utf8");
  var buffer = "";

  conn.on("data", function(data) {
    for(var i = 0; i <= data.length; i++) {
      var char = data.charAt(i);
      buffer += char;
      if(char == "\n") {
        conn.write(buffer);
        buffer = "";
      }
    }
  });
});

server.listen(12321, "localhost");

/// rawSolutions:
=={{header|JavaScript}}==
{{works with|Node.js}}
<lang javascript>var net = require('net');

var server = net.createServer(function(conn) {
  console.log("Connection from " + conn.remoteAddress + " on port " + conn.remotePort);
  conn.setEncoding("utf8");
  var buffer = "";

  conn.on("data", function(data) {
    for(var i = 0; i <= data.length; i++) {
      var char = data.charAt(i);
      buffer += char;
      if(char == "\n") {
        conn.write(buffer);
        buffer = "";
      }
    }
  });
});

server.listen(12321, "localhost");</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
