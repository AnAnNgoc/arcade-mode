Doubly-linked list/Traversal

{{task|Data Structures}}<a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Category:Iteration]]
Traverse from the beginning of a [[Doubly-linked list/Definition" title="Category:Iteration]]
Traverse from the beginning of a [[Doubly-linked list/Definition">doubly-linked list</a> to the end, and from the end to the beginning.

{{Template:See also lists}}

=={{header|JavaScript}}==
See [[Doubly-Linked List (element)#JavaScript]]. The <code>traverse()</code> and <code>print()</code> functions have been inherited from [[Singly-Linked List (traversal)#JavaScript]].
<lang javascript>DoublyLinkedList.prototype.getTail = function() {
    var tail;
    this.traverse(function(node){tail = node;});
    return tail;
} 
DoublyLinkedList.prototype.traverseBackward = function(func) {
    func(this);
    if (this.prev() != null)
        this.prev().traverseBackward(func);
}
DoublyLinkedList.prototype.printBackward = function() {
    this.traverseBackward( function(node) {print(node.value())} );
}

var head = createDoublyLinkedListFromArray([10,20,30,40]);
head.print();
head.getTail().printBackward();</lang>

outputs:
<pre>10
20
30
40
40
30
20
10</pre>
Uses the <code>print()</code> function from [[Rhino]] or [[SpiderMonkey]].

