
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Unicode strings
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// As the world gets smaller each day, internationalization becomes more and more important. &nbsp; For handling multiple languages, [[Unicode]] is your best friend. 
/// <br>
/// It is a very capable tool, but also quite complex compared to older single- and double-byte character encodings. 
/// <br>
/// How well prepared is your programming language for Unicode? 
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Discuss and demonstrate its unicode awareness and capabilities. 
/// <br>
/// <br>
/// Some suggested topics:
/// <span class="rosetta__text--indented">* &nbsp; How easy is it to present Unicode strings in source code? </span>
/// <span class="rosetta__text--indented">* &nbsp; Can Unicode literals be written directly, or be part of identifiers/keywords/etc?</span>
/// <span class="rosetta__text--indented">* &nbsp; How well can the language communicate with the rest of the world? </span>
/// <span class="rosetta__text--indented">* &nbsp; Is it good at input/output with Unicode?</span>
/// <span class="rosetta__text--indented">* &nbsp; Is it convenient to manipulate Unicode strings in the language?</span>
/// <span class="rosetta__text--indented">* &nbsp; How broad/deep does the language support Unicode? </span>
/// <span class="rosetta__text--indented">* &nbsp; What encodings (e.g. UTF-8, UTF-16, etc) can be used? </span>
/// <span class="rosetta__text--indented">* &nbsp; Does it support normalization?</span>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Note:</dt></dl>
/// This task is a bit unusual in that it encourages general discussion rather than clever coding.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">See also:</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item">&nbsp; [[Unicode variable names]]</li>
/// <li class="rosetta__list-item">&nbsp; [[Terminal control/Display an extended character]]</li>
/// <br>
/// </ul><br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
