
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Unix/ls
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Write a program that will list everything in the current folder, &nbsp; similar to:
/// <span class="rosetta__text--indented">::* &nbsp; the Unix utility &nbsp; “<tt>ls</tt>” &nbsp; [http://man7.org/linux/man-pages/man1/ls.1.html] &nbsp; &nbsp; &nbsp; or </span>
/// <span class="rosetta__text--indented">::* &nbsp; the Windows terminal command &nbsp; “<tt>DIR</tt>” </span>
/// <br>
/// <br>
/// The output must be sorted, but printing extended details and producing multi-column output is not required.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Example output</dt></dl>
/// For the list of paths:
/// <pre>
/// /foo/bar
/// /foo/bar/1
/// /foo/bar/2
/// /foo/bar/a
/// /foo/bar/b
/// </pre>
/// <br>
/// <br>
/// When the program is executed in &nbsp; `/foo`, &nbsp; it should print:
/// <pre>
/// bar
/// </pre>
/// and when the program is executed in &nbsp; `/foo/bar`, &nbsp; it should print:
/// <pre>
/// 1
/// 2
/// a
/// b
/// </pre>
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
