
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Barnsley fern
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><p class="rosetta__paragraph">A <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Barnsley_fern" title="wp: Barnsley_fern">Barnsley fern</a> is a fractal named after British mathematician Michael Barnsley and can be created using an iterated function system (IFS).</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Create this fractal fern, using the following transformations:</p>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">ƒ1  (chosen 1% of the time)</li></ul>         xn + 1 = 0
/// <p class="rosetta__paragraph">yn + 1 = 0.16 yn</p><br/><ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">ƒ2  (chosen 85% of the time)</li></ul>         xn + 1 = 0.85 xn + 0.04 yn
/// <p class="rosetta__paragraph">yn + 1 = −0.04 xn + 0.85 yn + 1.6</p><br/><ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">ƒ3  (chosen 7% of the time)</li></ul>         xn + 1 = 0.2 xn − 0.26 yn
/// <p class="rosetta__paragraph">yn + 1 = 0.23 xn + 0.22 yn + 1.6</p><br/><ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">ƒ4  (chosen 7% of the time)</li></ul>         xn + 1 = −0.15 xn + 0.28 yn
/// <p class="rosetta__paragraph">yn + 1 = 0.26 xn + 0.24 yn + 0.44.</p><br/><p class="rosetta__paragraph">Starting position: x = 0, y = 0</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:

// Barnsley fern fractal
//6/17/16 aev
function pBarnsleyFern(canvasId,lim) {
  // DCLs
  var canvas = document.getElementById(canvasId);
  var ctx = canvas.getContext("2d");
  var w = canvas.width;
  var h = canvas.height;
  var x=0.,y=0.,xw=0.,yw=0.,r;
  // Like in PARI/GP: return random number 0..max-1
  function randgp(max) {return Math.floor(Math.random()*max)}
  // Clean canvas
  ctx.fillStyle="white"; ctx.fillRect(0,0,w,h);
  // MAIN LOOP
  for(var i=0; i<lim; i++) {
    r=randgp(100);
    if (r<=1) {xw=0;yw=0.16*y;}
    else if (r<=8) {xw=0.2*x-0.26*y;yw=0.23*x+0.22*y+1.6;}
    else if (r<=15) {xw=-0.15*x+0.28*y;yw=0.26*x+0.24*y+0.44;}
    else {xw=0.85*x+0.04*y;yw=-0.04*x+0.85*y+1.6;}
    x=xw;y=yw; ctx.fillStyle="green"; ctx.fillRect(x*50+260,-y*50+540,1,1);
  }//fend i
}


/// rawSolutions:
=={{header|JavaScript}}==
{{trans|PARI/GP}}
[[File:BarnsleyFernjs.png|right|thumb|Output BarnsleyFernjs.png]]

<lang javascript>
// Barnsley fern fractal
//6/17/16 aev
function pBarnsleyFern(canvasId,lim) {
  // DCLs
  var canvas = document.getElementById(canvasId);
  var ctx = canvas.getContext("2d");
  var w = canvas.width;
  var h = canvas.height;
  var x=0.,y=0.,xw=0.,yw=0.,r;
  // Like in PARI/GP: return random number 0..max-1
  function randgp(max) {return Math.floor(Math.random()*max)}
  // Clean canvas
  ctx.fillStyle="white"; ctx.fillRect(0,0,w,h);
  // MAIN LOOP
  for(var i=0; i<lim; i++) {
    r=randgp(100);
    if (r<=1) {xw=0;yw=0.16*y;}
    else if (r<=8) {xw=0.2*x-0.26*y;yw=0.23*x+0.22*y+1.6;}
    else if (r<=15) {xw=-0.15*x+0.28*y;yw=0.26*x+0.24*y+0.44;}
    else {xw=0.85*x+0.04*y;yw=-0.04*x+0.85*y+1.6;}
    x=xw;y=yw; ctx.fillStyle="green"; ctx.fillRect(x*50+260,-y*50+540,1,1);
  }//fend i
}
</lang> 
'''Executing:'''
<lang html>
<html>
 <head><script src="BarnsleyFern.js"></script></head>
 <body onload="pBarnsleyFern('canvas', 100000)">
   <br /> <h3>Barnsley fern fractal</h3>
   <canvas id="canvas" width="540" height="540" style="border: 2px inset;"></canvas>
 </body>
</html>
</lang> 
{{Output}}
<pre>
Page with BarnsleyFernjs.png
</pre>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
