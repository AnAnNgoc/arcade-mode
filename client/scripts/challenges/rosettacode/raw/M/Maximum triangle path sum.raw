
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Maximum triangle path sum
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><p class="rosetta__paragraph">Starting from the top of a pyramid of numbers like this, you can walk down going one step on the right or on the left, until you reach the bottom row:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
///                           55
///                         94 48
///                        95 30 96
///                      77 71 26 67
/// </pre></div><br/><p class="rosetta__paragraph">One of such walks is 55 - 94 - 30 - 26.</p>
/// <p class="rosetta__paragraph">You can compute the total of the numbers you have seen in such walk,</p>
/// <p class="rosetta__paragraph">in this case it's 205.</p><br/><p class="rosetta__paragraph">Your problem is to find the maximum total among all possible paths from the top to the bottom row of the triangle. In the little example above it's 321.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Find the maximum total in the triangle below:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
///                           55
///                         94 48
///                        95 30 96
///                      77 71 26 67
///                     97 13 76 38 45
///                   07 36 79 16 37 68
///                  48 07 09 18 70 26 06
///                18 72 79 46 59 79 29 90
///               20 76 87 11 32 07 07 49 18
///             27 83 58 35 71 11 25 57 29 85
///            14 64 36 96 27 11 58 56 92 18 55
///          02 90 03 60 48 49 41 46 33 36 47 23
///         92 50 48 02 36 59 42 79 72 20 82 77 42
///       56 78 38 80 39 75 02 71 66 66 01 03 55 72
///      44 25 67 84 71 67 11 61 40 57 58 89 40 56 36
///    85 32 25 85 57 48 84 35 47 62 17 01 01 99 89 52
///   06 71 28 75 94 48 37 10 23 51 06 48 53 18 74 98 15
/// 27 02 92 23 08 71 76 84 15 52 92 63 81 10 44 10 69 93
/// </pre></div><br/><p class="rosetta__paragraph">Such numbers can be included in the solution code, or read from a "triangle.txt" file.</p><br/><p class="rosetta__paragraph">This task is derived from the <a class="rosetta__link--wiki" href="http://projecteuler.net/problem=18" title="link: http://projecteuler.net/problem=18">Euler Problem #18</a>.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
