
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Maze solving
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
///  <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Category:Recursion]] [[Category:Puzzles]]
/// <br>
/// For a maze generated by [[Maze generation" title="Category:Recursion]] [[Category:Puzzles]]
/// <br>
/// For a maze generated by [[Maze generation">this task</a>, write a function 
/// that finds (and displays) the shortest path between two cells. 
/// Note that because these mazes are generated by the <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Maze_generation_algorithm#Depth-first_search" title="wp: Maze_generation_algorithm#Depth-first_search">Depth-first search</a> algorithm, they contain no circular paths, 
/// and a simple depth-first tree search can be used.
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
