
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Hello world/Line printer
/// type: rosetta-code

/// categories:
/// Hardware
/// Printer

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
///  
///  
/// <br>
/// <br>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Cause a line printer attached to the computer to print a line containing the message: &nbsp; <big><code> Hello World! </code></big>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Note:</dt></dl>
/// A line printer is not the same as standard output. 
/// <br>
/// A &nbsp; <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/line printer" title="wp: line printer">line printer</a> &nbsp; was an older-style printer which prints one line at a time to a continuous ream of paper. 
/// <br>
/// With some systems, a line printer can be any device attached to an appropriate port (such as a parallel port).
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
// This example runs on Node.js
var fs = require('fs');
// Assuming lp is at /dev/lp0
var lp = fs.openSync('/dev/lp0', 'w');
fs.writeSync(lp, 'Hello, world!\n');
fs.close(lp);

/// rawSolutions:
=={{header|JavaScript}}==
{{works with|Node.js}}
<lang javascript>// This example runs on Node.js
var fs = require('fs');
// Assuming lp is at /dev/lp0
var lp = fs.openSync('/dev/lp0', 'w');
fs.writeSync(lp, 'Hello, world!\n');
fs.close(lp);</lang>
{{works with|Firefox}}
{{works with|Chromium}}
<lang javascript>
document.write("Hello World!");
print(); //Opens a dialog.
</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
