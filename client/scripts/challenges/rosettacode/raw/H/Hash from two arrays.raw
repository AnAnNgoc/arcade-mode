
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Hash from two arrays
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
///  
/// [[Category:Data Structures]]
///  <!-- Does not have hash tables or other map structures. -->
///  
///  
///  
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Using two Arrays of equal length, create a Hash object 
/// where the elements from one array (the keys) are linked 
/// to the elements of the other (the values)
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Related task:</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item">&nbsp; [[Associative arrays/Creation]]</li>
/// <br>
/// </ul><br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:

var keys = ['a', 'b', 'c'];
var values = [1, 2, 3];
var map = {};
for(var i = 0; i < keys.length; i += 1) {
  map[ keys[i] ] = values[i];
}


/// rawSolutions:
=={{header|JavaScript}}==

===Iterative===
<lang javascript>
var keys = ['a', 'b', 'c'];
var values = [1, 2, 3];
var map = {};
for(var i = 0; i < keys.length; i += 1) {
  map[ keys[i] ] = values[i];
}
</lang>

===Iterative Using Foreach===
<lang javascript>
function arrToObj(keys, vals) {
  var map = {};
  keys.forEach(function (key, index) {
    map[key] = val[index];
  });
  return map;
}
</lang>

===Using Reduce===
<lang javascript>
function arrToObj(keys, vals) {
  return keys.reduce(function(map, key, index) {
    map[key] = vals[index];
    return map;
  }, {});
}
</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
