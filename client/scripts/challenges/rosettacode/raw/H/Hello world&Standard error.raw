
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Hello world/Standard error
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
///  
/// <br>
/// [[Category:Streams]]
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// A common practice in computing is to send error messages 
/// to a different output stream than <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/User Output - text" title="User Output - text">normal text console messages</a>. 
/// <br>
/// The normal messages print to what is called "standard output" or "standard out". 
/// <br>
/// The error messages print to "standard error". 
/// <br>
/// This separation can be used to redirect error messages to a different place than normal messages.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Show how to print a message to standard error by printing &nbsp; &nbsp; <span class="rosetta__text--bold">Goodbye, World!</span> &nbsp; &nbsp; on that stream.
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
WScript.StdErr.WriteLine("Goodbye, World!");

/// rawSolutions:
=={{header|JavaScript}}==
{{works with|JScript}} and only with <code>cscript.exe</code>
<lang javascript>WScript.StdErr.WriteLine("Goodbye, World!");</lang>

{{works with|Node.js}}
<lang javascript>console.warn("Goodbye, World!")</lang>

{{works with|Firefox}}
<lang javascript>console.error("Goodbye, World!")//only works if console object exists</lang>
OR
<lang javascript>throw new Error("Goodbye, World!")//Should work in any browser</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
