
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Nonogram solver
/// type: rosetta-code

/// categories:
/// Puzzles

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
///  
/// A <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Nonogram" title="wp: Nonogram">nonogram</a> is a puzzle that provides 
/// numeric clues used to fill in a grid of cells, 
/// establishing for each cell whether it is filled or not. 
/// The puzzle solution is typically a picture of some kind.
/// <br>
/// Each row and column of a rectangular grid is annotated with the lengths 
/// of its distinct runs of occupied cells. 
/// Using only these lengths you should find one valid configuration 
/// of empty and occupied cells, or show a failure message.
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Example</dt></dl>
/// <pre>Problem:                 Solution:
/// <br>
/// . . . . . . . .  3       . # # # . . . .  3
/// . . . . . . . .  2 1     # # . # . . . .  2 1
/// . . . . . . . .  3 2     . # # # . . # #  3 2
/// . . . . . . . .  2 2     . . # # . . # #  2 2
/// . . . . . . . .  6       . . # # # # # #  6
/// . . . . . . . .  1 5     # . # # # # # .  1 5
/// . . . . . . . .  6       # # # # # # . .  6
/// . . . . . . . .  1       . . . . # . . .  1
/// . . . . . . . .  2       . . . # # . . .  2
/// 1 3 1 7 5 3 4 3          1 3 1 7 5 3 4 3
/// 2 1 5 1                  2 1 5 1</pre>   
/// The problem above could be represented by two lists of lists:
/// <pre>x = <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/3], [2,1], [3,2], [2,2], [6], [1,5], [6], [1], [2" title="3], [2,1], [3,2], [2,2], [6], [1,5], [6], [1], [2">3], [2,1], [3,2], [2,2], [6], [1,5], [6], [1], [2</a>
/// y = <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/1,2], [3,1], [1,5], [7,1], [5], [3], [4], [3" title="1,2], [3,1], [1,5], [7,1], [5], [3], [4], [3">1,2], [3,1], [1,5], [7,1], [5], [3], [4], [3</a></pre>
/// A more compact representation of the same problem uses strings, 
/// where the letters represent the numbers, A=1, B=2, etc:
/// <pre>x = "C BA CB BB F AE F A B"
/// y = "AB CA AE GA E C D C"</pre>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task</dt></dl>
/// For this task, try to solve the 4 problems below, read from a “<tt>nonogram_problems.txt</tt>” file that has this content 
/// (the blank lines are separators):
/// <pre>C BA CB BB F AE F A B
/// AB CA AE GA E C D C
/// <br>
/// F CAC ACAC CN AAA AABB EBB EAA ECCC HCCC
/// D D AE CD AE A DA BBB CC AAB BAA AAB DA AAB AAA BAB AAA CD BBA DA
/// <br>
/// CA BDA ACC BD CCAC CBBAC BBBBB BAABAA ABAD AABB BBH BBBD ABBAAA CCEA AACAAB BCACC ACBH DCH ADBE ADBB DBE ECE DAA DB CC
/// BC CAC CBAB BDD CDBDE BEBDF ADCDFA DCCFB DBCFC ABDBA BBF AAF BADB DBF AAAAD BDG CEF CBDB BBB FC
/// <br>
/// E BCB BEA BH BEK AABAF ABAC BAA BFB OD JH BADCF Q Q R AN AAN EI H G
/// E CB BAB AAA AAA AC BB ACC ACCA AGB AIA AJ AJ ACE AH BAF CAG DAG FAH FJ GJ ADK ABK BL CM</pre>
/// <br>
/// <span class="rosetta__text--bold">Extra credit</span>: generate nonograms with unique solutions, of desired height and width.
/// <br><br>
/// This task is the problem n.98 of the "[https://sites.google.com/site/prologsite/prolog-problems 99 Prolog Problems]" by Werner Hett (also thanks to Paul Singleton for the idea and the examples).
/// <br><br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title"> Related tasks</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Nonoblock" title="Nonoblock">Nonoblock</a>.</li></ul><br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">See also</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"><a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/AC-3_algorithm" title="wp: AC-3_algorithm">Arc Consistency Algorithm</a></li>
/// <li class="rosetta__list-item--unordered">http://www.haskell.org/haskellwiki/99_questions/Solutions/98 (Haskell)</li>
/// <li class="rosetta__list-item--unordered">http://twanvl.nl/blog/haskell/Nonograms (Haskell)</li>
/// <li class="rosetta__list-item--unordered">http://picolisp.com/5000/!wiki?99p98 (PicoLisp)</li></ul><br><br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
