
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Primorial numbers
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// Primorial numbers are those formed by multiplying successive prime numbers. <br>
/// <br>
/// <br>
/// The primorial number series is:
/// <br>
/// <span class="rosetta__text--indented">:* &nbsp; primorial(0) = &nbsp; &nbsp; &nbsp; &nbsp; 1 &nbsp; &nbsp; &nbsp; (by definition)</span>
/// <span class="rosetta__text--indented">:* &nbsp; primorial(1) = &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; (2)</span>
/// <span class="rosetta__text--indented">:* &nbsp; primorial(2) = &nbsp; &nbsp; &nbsp; &nbsp; 6 &nbsp; &nbsp; &nbsp; (2*3)</span>
/// <span class="rosetta__text--indented">:* &nbsp; primorial(3) = &nbsp; &nbsp; &nbsp;       30 &nbsp; &nbsp; &nbsp; (2*3*5)</span>
/// <span class="rosetta__text--indented">:* &nbsp; primorial(4) = &nbsp; &nbsp;             210 &nbsp; &nbsp; &nbsp; (2*3*5*7)</span>
/// <span class="rosetta__text--indented">:* &nbsp; primorial(5) = &nbsp;                   2310 &nbsp; &nbsp; &nbsp; (2*3*5*7*11)</span>
/// <span class="rosetta__text--indented">:* &nbsp; primorial(6) =                         30030 &nbsp; &nbsp; &nbsp; (2*3*5*7*11*13)</span>
/// <span class="rosetta__text--indented">;* &nbsp; &nbsp; &nbsp; &nbsp; <big><b>∙ ∙ ∙</b></big></span>
/// <br>
/// To express this mathematically, &nbsp; <span class="rosetta__text--bold">primorial<sub><big><span class="rosetta__text--italic">n</span></big></sub></span> &nbsp; is &nbsp;
/// the product of the first &nbsp; <big><span class="rosetta__text--italic">n</span></big> &nbsp; (successive) primes: <br>
/// <big><big><big>
/// <span class="rosetta__text--indented"> &nbsp; $primorial_n = \prod_{k=1}^n prime_k$</span>
/// </big></big>
/// <span class="rosetta__text--indented">::::: ─── where &nbsp; <big><big>$prime_k$</big></big> &nbsp; is the &nbsp; <big><big><span class="rosetta__text--italic">k</span><sup><span class="rosetta__text--italic">th</span></sup>''</big></big> &nbsp; prime number.</span>
/// </big>
/// <br>
/// <br>
/// In some sense, generating primorial numbers is similar to factorials. 
/// <br>
/// As with factorials, primorial numbers get large quickly.
/// <br>
/// <br>
/// <span class="rosetta__text--bold">task requirements:</span>
/// <br>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered">&nbsp; Show the first ten primorial numbers &nbsp; (0 ──► 9, &nbsp; inclusive).</li>
/// <li class="rosetta__list-item--unordered">&nbsp; Show the length of primorial numbers whose index is: &nbsp; 10 &nbsp; 100 &nbsp; 1,000 &nbsp; 10,000 &nbsp; and &nbsp; 100,000.</li>
/// <li class="rosetta__list-item--unordered">&nbsp; Show the length of the one millionth primorial number &nbsp; (optional). </li>
/// <li class="rosetta__list-item--unordered">&nbsp; Use exact integers, not approximations.  </li>
/// <br>
/// </ul> 
/// <br>
/// By &nbsp; <span class="rosetta__text--italic">length</span> &nbsp; (above), it is meant the number of decimal digits in the numbers. <br>
///  
/// <br>
/// <span class="rosetta__text--bold">links:</span>
/// <br>
/// See the MathWorld webpage: &nbsp; [http://mathworld.wolfram.com/Primorial.html primorial]
/// <br>
/// See the Wikipedia &nbsp; webpage: &nbsp; [http://en.wikipedia.org/wiki/Primorial primorial].
/// <br>
/// See the &nbsp; &nbsp; OEIS &nbsp; &nbsp; webpage: &nbsp; [http://oeis.org/A002110 A2110].
/// <br>
/// <br>
/// <span class="rosetta__text--bold">Related tasks:</span>
/// *<a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Factorial" title="Factorial"></a>
/// *<a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Sequence of primorial primes" title="Sequence of primorial primes"></a>
/// <br>
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
