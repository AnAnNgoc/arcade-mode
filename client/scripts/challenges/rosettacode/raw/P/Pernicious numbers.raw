
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Pernicious numbers
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// A <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Pernicious number" title="wp: Pernicious number">pernicious number]] is a positive integer whose [[population count</a> is a prime. The population count is the number of ones in the binary representation of a non-negative integer. 
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Example</dt></dl>
/// 22 (which is 10110 in binary) has a population count of 3, which is prime, and therefore 22 is a pernicious number.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered">display the first 25 pernicious numbers.</li>
/// <li class="rosetta__list-item--unordered">display all pernicious numbers between 888,888,877 and 888,888,888 (inclusive).</li>
/// <li class="rosetta__list-item--unordered">display each list of integers on one line (which may or may not include a title).</li>
/// <br>
/// </ul>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">See also</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered">Sequence &nbsp; <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/oeis:A052294" title="oeis:A052294">A052294 pernicious numbers</a> on The On-Line Encyclopedia of Integer Sequences.</li>
/// <li class="rosetta__list-item--unordered">Rosetta Code entry &nbsp; <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Population_count" title="Population_count">population count, evil numbers, odious numbers</a>.</li>
/// <br>
/// </ul><br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
