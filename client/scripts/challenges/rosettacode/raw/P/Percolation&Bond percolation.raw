
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Percolation/Bond percolation
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// Given an $M \times N$ rectangular array of cells numbered $\mathrm{cell}[0..M-1, 0..N-1]$, assume $M$ is horizontal and $N$ is downwards. Each $\mathrm{cell}[m, n]$ is bounded by (horizontal) walls $\mathrm{hwall}[m, n]$ and $\mathrm{hwall}[m+1, n]$; (vertical) walls $\mathrm{vwall}[m, n]$ and $\mathrm{vwall}[m, n+1]$
/// <br>
/// Assume that the probability of any wall being present is a constant $p$ where
/// <span class="rosetta__text--indented"> $0.0 \le p \le 1.0$</span>
/// Except for the outer horizontal walls at $m = 0$ and $m = M$ which are always present.
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">The task:</dt></dl>
/// Simulate pouring a fluid onto the top surface ($n = 0$) where the fluid will enter any empty cell it is adjacent to if there is no wall between where it currently is and the cell on the other side of the (missing) wall.  
/// <br>
/// The fluid does not move beyond the horizontal constraints of the grid.
/// <br>
/// The fluid may move “up” within the confines of the grid of cells. If the fluid reaches a bottom cell that has a missing bottom wall then the fluid can be said to 'drip' out the bottom at that point.
/// <br>
/// Given $p$ repeat the percolation $t$ times to estimate the proportion of times that the fluid can percolate to the bottom for any given $p$.
/// <br>
/// Show how the probability of percolating through the random grid changes with $p$ going from $0.0$ to $1.0$ in $0.1$ increments and with the number of repetitions to estimate the fraction at any given $p$ as $t = 100$.
/// <br>
/// Use an $M=10, N=10$ grid of cells for all cases.
/// <br>
/// Optionally depict fluid successfully percolating through a grid graphically.
/// <br>
/// Show all output on this page.
/// <br><br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
