
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Population count
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// [[Category:Mathematics]]
/// The <span class="rosetta__text--italic"><a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Hamming weight" title="wp: Hamming weight">population count</a></span> &nbsp; is the number of &nbsp; <big><span class="rosetta__text--bold">1</span></big>s &nbsp; (ones) &nbsp; in the binary representation of a non-negative integer.
/// <br>
/// <span class="rosetta__text--italic">Population count</span> is also known as &nbsp; <span class="rosetta__text--italic">pop count</span>, &nbsp; <span class="rosetta__text--italic">popcount</span>, &nbsp; <span class="rosetta__text--italic">sideways sum</span>, &nbsp; and &nbsp; <span class="rosetta__text--italic">Hamming weight</span>. 
/// <br>
/// <span class="rosetta__text--indented"> For example, &nbsp; <big><span class="rosetta__text--bold">5</span></big> &nbsp; (which is &nbsp; <big><span class="rosetta__text--bold">101</span></big> &nbsp; in binary) &nbsp; has a population count of &nbsp; <big><span class="rosetta__text--bold">2</span></big>.</span>
/// <br>
/// <br>
/// <span class="rosetta__text--italic">[http://mathworld.wolfram.com/EvilNumber.html Evil numbers]</span> &nbsp; are non-negative integers  that have an &nbsp; <span class="rosetta__text--italic">even</span> &nbsp; population count.
/// <br>
/// <span class="rosetta__text--italic">[http://mathworld.wolfram.com/OdiousNumber.html Odious numbers]</span> &nbsp; are positive integers that have an &nbsp; <span class="rosetta__text--italic">odd</span> &nbsp; population count.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item">write a function (or routine) to return the population count of a non-negative integer.</li>
/// <li class="rosetta__list-item">all computation of the lists below should start with &nbsp; <big><span class="rosetta__text--bold">0</span></big> &nbsp; (zero indexed).</li>
/// <br>
/// </ul><span class="rosetta__text--indented">* display the &nbsp; <span class="rosetta__text--italic">pop count</span> &nbsp; of the &nbsp; 1<sup>st</sup> &nbsp; thirty powers of &nbsp; <big><span class="rosetta__text--bold">3</span></big> &nbsp; &nbsp; &nbsp; (<big><span class="rosetta__text--bold">3<sup>0</sup></span>, &nbsp; <span class="rosetta__text--bold">3<sup>1</sup></span>, &nbsp; <span class="rosetta__text--bold">3<sup>2</sup></span>, &nbsp; <span class="rosetta__text--bold">3<sup>3</sup></span>, &nbsp; <span class="rosetta__text--bold">3<sup>4</sup></span>, &nbsp; <b>∙∙∙</b> &nbsp; <span class="rosetta__text--bold">3<sup>29</sup></span></big>).</span>
/// <span class="rosetta__text--indented">* display the &nbsp; 1<sup>st</sup> &nbsp; thirty &nbsp; &nbsp; <span class="rosetta__text--italic">evil</span>    &nbsp; &nbsp; numbers.</span>
/// <span class="rosetta__text--indented">* display the &nbsp; 1<sup>st</sup> &nbsp; thirty &nbsp;        <span class="rosetta__text--italic">odious</span>  &nbsp;        numbers.</span>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item">display each list of integers on one line &nbsp; (which may or may not include a title), &nbsp; each set of integers being shown should be properly identified.</li>
/// <br>
/// </ul>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">See also</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item">The On-Line Encyclopedia of Integer Sequences: &nbsp; [http://oeis.org/A000069 A000069 odious numbers].</li>
/// <li class="rosetta__list-item">The On-Line Encyclopedia of Integer Sequences: &nbsp; [http://oeis.org/A001969 A001969 evil numbers].</li>
/// <br>
/// </ul><br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
