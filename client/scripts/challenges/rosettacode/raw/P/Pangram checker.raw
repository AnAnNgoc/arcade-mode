
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Pangram checker
/// type: rosetta-code

/// categories:
/// String manipulation

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/><p class="rosetta__paragraph">A pangram is a sentence that contains all the letters of the English alphabet at least once.</p><br/><p class="rosetta__paragraph">For example:  <span class="rosetta__text--italic">The quick brown fox jumps over the lazy dog</span>.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Write a function or method to check a sentence to see if it is a  <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Pangram" title="wp: Pangram">pangram</a>  (or not)  and show its use.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
function isPangram(s) {
    var letters = "zqxjkvbpygfwmucldrhsnioate"
    // sorted by frequency ascending (http://en.wikipedia.org/wiki/Letter_frequency)
    s = s.toLowerCase().replace(/[^a-z]/g,'')
    for (var i = 0; i < 26; i++)
        if (s.indexOf(letters[i]) < 0) return false
    return true
}

console.log(isPangram("is this a pangram"))  // false
console.log(isPangram("The quick brown fox jumps over the lazy dog"))  // true

/// rawSolutions:
=={{header|JavaScript}}==
===ES5===
====Iterative====

<lang javascript>function isPangram(s) {
    var letters = "zqxjkvbpygfwmucldrhsnioate"
    // sorted by frequency ascending (http://en.wikipedia.org/wiki/Letter_frequency)
    s = s.toLowerCase().replace(/[^a-z]/g,'')
    for (var i = 0; i < 26; i++)
        if (s.indexOf(letters[i]) < 0) return false
    return true
}

console.log(isPangram("is this a pangram"))  // false
console.log(isPangram("The quick brown fox jumps over the lazy dog"))  // true</lang>

===ES6===
====Functional====

<lang JavaScript>(() => {
    'use strict';

    // isPangram :: String -> Bool
    let isPangram = s => {
        let lc = s.toLowerCase();

        return 'abcdefghijklmnopqrstuvwxyz'
            .split('')
            .filter(c => lc.indexOf(c) === -1)
            .length === 0;
    };

    // TEST
    return [
        'is this a pangram',
        'The quick brown fox jumps over the lazy dog'
    ].map(isPangram);

})();</lang>

{{Out}}
<pre>[false, true]</pre>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
