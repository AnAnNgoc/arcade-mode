Largest int from concatenated ints

{{task}}

;Task: 
Given a set of positive integers, write a function to order the integers in such a way that the concatenation of the numbers forms the largest possible integer and return this integer.

Use the following two sets of integers as tests &nbsp; and &nbsp; show your program output here.

:::::* &nbsp; {1, 34, 3, 98, 9, 76, 45, 4}
:::::* &nbsp; {54, 546, 548, 60}

<br>
;Possible algorithms:
# A solution could be found by trying all combinations and return the best. 
# Another way to solve this is to note that in the best arrangement, for any two adjacent original integers <span class="rosetta__text--bold">X</span> and <span class="rosetta__text--bold">Y</span>, the concatenation <span class="rosetta__text--bold">X</span> followed by <span class="rosetta__text--bold">Y</span> will be numerically greater than or equal to the concatenation <span class="rosetta__text--bold">Y</span> followed by '''X.
# Yet another way to solve this is to pad the integers to the same size by repeating the digits then sort using these repeated integers as a sort key.


;See also:
* &nbsp; [http://www.quora.com/Algorithms/What-is-the-most-efficient-way-to-arrange-the-given-numbers-to-form-the-biggest-number Algorithms: What is the most efficient way to arrange the given numbers to form the biggest number?]
* &nbsp; [http://stackoverflow.com/questions/14532105/constructing-the-largest-number-possible-by-rearranging-a-list/14539943#14539943 Constructing the largest number possible by rearranging a list]
<br><br>


=={{header|JavaScript}}==

===ES5===

<lang JavaScript> (function () {
     'use strict';

     // maxCombine :: [Int] -> Int
     function maxCombine(xs) {
         return parseInt(
             xs.sort(
                 function (x, y) {
                     var a = x.toString(),
                         b = y.toString(),
                         ab = parseInt(a + b),
                         ba = parseInt(b + a);

                     return ab > ba ? -1 : (ab < ba ? 1 : 0);
                 }
             )
             .join(''), 10
         );
     }

     return [
        [1, 34, 3, 98, 9, 76, 45, 4],
        [54, 546, 548, 60]
     ].map(maxCombine);

 })();
</lang>

{{Out}}

<pre>[998764543431, 6054854654]</pre>



===ES6===
<lang JavaScript>var maxCombine = (a) => +(a.sort((x, y) => +("" + y + x) - +("" + x + y)).join(''));

// test & output
console.log([
  [1, 34, 3, 98, 9, 76, 45, 4],
  [54, 546, 548, 60]
].map(maxCombine));</lang>

