
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Left factorials
/// type: rosetta-code

/// categories:
/// Mathematics

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <span class="rosetta__text--bold">Left factorials</span>, &nbsp; <big><big>!n</big></big>, &nbsp; may refer to either &nbsp; <span class="rosetta__text--italic">subfactorials</span> &nbsp; or to &nbsp; <span class="rosetta__text--italic">factorial sums</span>; 
/// <br>the same notation can be confusingly seen used for the two different definitions.
/// <br>
/// Sometimes, &nbsp; <span class="rosetta__text--italic">subfactorials</span> &nbsp; (also known as <span class="rosetta__text--italic">derangements</span>) &nbsp; may use any of the notations: 
/// <span class="rosetta__text--indented">::::::* &nbsp; <big><big> <span style="font-family:serif">!<span class="rosetta__text--italic">n</span>`</span> </big></big> </span>
/// <span class="rosetta__text--indented">::::::* &nbsp; <big><big> <span style="font-family:serif">!<span class="rosetta__text--italic">n</span></span>  </big></big></span>
/// <span class="rosetta__text--indented">::::::* &nbsp; <big><big> <span style="font-family:serif"><span class="rosetta__text--italic">n</span>ยก</span>  </big></big></span>
/// <br>
/// (It may not be visually obvious, but the last example uses an upside-down exclamation mark.)
/// <br>
/// <br>
/// <br>This Rosetta Code task will be using this formula for <span class="rosetta__text--bold">left factorial</span>:
/// <big><big>
/// <span class="rosetta__text--indented">:: &nbsp; $ !n = \sum_{k=0}^{n-1} k! $</span>
/// </big></big>
/// where
/// <big><big>
/// <span class="rosetta__text--indented">:: &nbsp; $!0 = 0$</span>
/// </big></big>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task</dt></dl>
/// Display the left factorials for:
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">zero through ten (inclusive)</li>
/// <li class="rosetta__list-item--unordered">20 through 110 (inclusive) by tens</li></ul>
/// <br>
/// Display the length (in decimal digits) of the left factorials for:
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">1,000, &nbsp; 2,000 &nbsp; through &nbsp; 10,000 &nbsp; (inclusive), by thousands.</li></ul>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Also see</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">&nbsp; The OEIS entry: [http://oeis.org/A003422 A003422 left factorials]</li>
/// <li class="rosetta__list-item--unordered">&nbsp; The MathWorld entry: [http://mathworld.wolfram.com/LeftFactorial.html left factorial]</li>
/// <li class="rosetta__list-item--unordered">&nbsp; The MathWorld entry: [http://mathworld.wolfram.com/FactorialSums.html factorial sums]</li>
/// <li class="rosetta__list-item--unordered">&nbsp; The MathWorld entry: [http://mathworld.wolfram.com/Subfactorial.html subfactorial]</li></ul>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Related task:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">&nbsp; [http://rosettacode.org/wiki/Permutations/Derangements permutations/derangements (subfactorials)]</li></ul><br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
