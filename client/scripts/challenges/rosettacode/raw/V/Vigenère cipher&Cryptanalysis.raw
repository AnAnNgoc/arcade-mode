
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Vigenère cipher/Cryptanalysis
/// type: rosetta-code

/// categories:
/// Encryption

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// Given some text you suspect has been encrypted with a Vigenère cipher, extract the key and plaintext. There are several methods for doing this. See <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Vigenère_cipher#Cryptanalysis" title="wp: Vigenère_cipher#Cryptanalysis">the Wikipedia entry</a> for more information. Use the following encrypted text:
/// <pre>
/// MOMUD EKAPV TQEFM OEVHP AJMII CDCTI FGYAG JSPXY ALUYM NSMYH
/// VUXJE LEPXJ FXGCM JHKDZ RYICU HYPUS PGIGM OIYHF WHTCQ KMLRD
/// ITLXZ LJFVQ GHOLW CUHLO MDSOE KTALU VYLNZ RFGBX PHVGA LWQIS
/// FGRPH JOOFW GUBYI LAPLA LCAFA AMKLG CETDW VOELJ IKGJB XPHVG
/// ALWQC SNWBU BYHCU HKOCE XJEYK BQKVY KIIEH GRLGH XEOLW AWFOJ
/// ILOVV RHPKD WIHKN ATUHN VRYAQ DIVHX FHRZV QWMWV LGSHN NLVZS
/// JLAKI FHXUF XJLXM TBLQV RXXHR FZXGV LRAJI EXPRV OSMNP KEPDT
/// LPRWM JAZPK LQUZA ALGZX GVLKL GJTUI ITDSU REZXJ ERXZS HMPST
/// MTEOE PAPJH SMFNB YVQUZ AALGA YDNMP AQOWT UHDBV TSMUE UIMVH
/// QGVRW AEFSP EMPVE PKXZY WLKJA GWALT VYYOB YIXOK IHPDS EVLEV
/// RVSGB JOGYW FHKBL GLXYA MVKIS KIEHY IMAPX UOISK PVAGN MZHPW
/// TTZPV XFCCD TUHJH WLAPF YULTB UXJLN SIJVV YOVDJ SOLXG TGRVO
/// SFRII CTMKO JFCQF KTINQ BWVHG TENLH HOGCS PSFPV GJOKM SIFPR
/// ZPAAS ATPTZ FTPPD PORRF TAXZP KALQA WMIUD BWNCT LEFKO ZQDLX
/// BUXJL ASIMR PNMBF ZCYLV WAPVF QRHZV ZGZEF KBYIO OFXYE VOWGB
/// BXVCB XBAWG LQKCM ICRRX MACUO IKHQU AJEGL OIJHH XPVZW JEWBA
/// FWAML ZZRXJ EKAHV FASMU LVVUT TGK
/// </pre>
/// <br>
/// Letter frequencies for English can be found <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Letter_frequency" title="wp: Letter_frequency">here</a>.
/// <br>
/// Specifics for this task:
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">Take only the ciphertext as input. You can assume it's all capitalized and has no punctuation, but it might have whitespace.</li>
/// <li class="rosetta__list-item--unordered">Assume the plaintext is written in English.</li>
/// <li class="rosetta__list-item--unordered">Find and output the key.</li>
/// <li class="rosetta__list-item--unordered">Use that key to decrypt and output the original plaintext. Maintaining the whitespace from the ciphertext is optional.</li>
/// <li class="rosetta__list-item--unordered">The algorithm doesn't have to be perfect (which may not be possible) but it should work when given enough ciphertext. The example above is fairly long, and should be plenty for any algorithm.</li></ul>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
