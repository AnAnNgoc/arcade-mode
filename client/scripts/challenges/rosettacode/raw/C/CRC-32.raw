
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: CRC-32
/// type: rosetta-code

/// categories:
/// Checksums

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/>
/// <br/>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Demonstrate a method of deriving the <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Computation of cyclic redundancy checks" title="wp: Computation of cyclic redundancy checks">Cyclic Redundancy Check</a> from within the language.</p>
/// <br/><p class="rosetta__paragraph">The result should be in accordance with ISO 3309, <a class="rosetta__link--wiki" href="http://www.itu.int/rec/T-REC-V.42-200203-I/en" title="link: http://www.itu.int/rec/T-REC-V.42-200203-I/en">ITU-T V.42</a>, <a class="rosetta__link--wiki" href="http://tools.ietf.org/html/rfc1952" title="link: http://tools.ietf.org/html/rfc1952">Gzip</a> and <a class="rosetta__link--wiki" href="http://www.w3.org/TR/2003/REC-PNG-20031110/" title="link: http://www.w3.org/TR/2003/REC-PNG-20031110/">PNG</a>.</p><br/><p class="rosetta__paragraph">Algorithms are described on <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Cyclic redundancy check" title="wp: Cyclic redundancy check">Computation of CRC</a> in Wikipedia.</p>
/// <p class="rosetta__paragraph">This variant of CRC-32 uses LSB-first order, sets the initial CRC to FFFFFFFF<sub>16</sub>, and complements the final CRC.</p><br/><p class="rosetta__paragraph">For the purpose of this task, generate a CRC-32 checksum for the ASCII encoded string:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">: <big><big><code>The quick brown fox jumps over the lazy dog</code></big></big></span></p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
