
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Calendar - for "REAL" programmers
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Provide an algorithm as per the <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Calendar" title="Calendar"></a> task, except the entire code for the algorithm must be presented &nbsp; <span class="rosetta__text--italic">entirely without lowercase</span>. 
/// <br>
/// Also - as per many 1969 era <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/line printer#Paper (forms) handling" title="wp: line printer#Paper (forms) handling">line printer</a>s - format the calendar to nicely fill a page that is 132 characters wide.
/// <br>
/// (Hint: manually convert the code from the <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Calendar" title="Calendar"></a> task to all UPPERCASE)
/// <br>
/// This task also is inspired by [http://www.ee.ryerson.ca/~elf/hack/realmen.html Real Programmers Don't Use PASCAL] by Ed Post, Datamation, volume 29 number 7, July 1983.
///  THE REAL PROGRAMMER'S NATURAL HABITAT
///  "Taped to the wall is a line-printer Snoopy calender for the year 1969."
/// <br>
/// Moreover this task is further inspired by the <span class="rosetta__text--italic">long lost</span> corollary article titled:
///  "Real programmers think in UPPERCASE"!
/// <br>
/// Note: Whereas today we <span class="rosetta__text--italic">only</span> need to worry about <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/ASCII" title="wp: ASCII">ASCII]], [[wp:UTF-8|UTF-8]], [[wp:UTF-16/UCS-2|UTF-16]], [[wp:UTF-32/UCS-4|UTF-32]], [[wp:UTF-7|UTF-7]] and [[wp:UTF-EBCDIC|UTF-EBCDIC]] encodings, in the 1960s having code in UPPERCASE was often mandatory as characters were often stuffed into [[wp:36-bit|36-bit]] words as 6 lots of [[wp:6-bit|6-bit]] characters. More extreme words sizes include [[wp:60-bit|60-bit]] words of the [[wp:CDC 6000 series|CDC 6000 series</a> computers.   The Soviets even had a national character set that was inclusive of all
/// <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/GOST_10859#4-bit code: Binary coded decimal" title="wp: GOST_10859#4-bit code: Binary coded decimal">4-bit</a>,
/// <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/GOST_10859#5-bit code: with BCD & mathematical operators" title="wp: GOST_10859#5-bit code: with BCD & mathematical operators">5-bit</a>,
/// <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/GOST_10859#6-bit code: with only Cyrillic upper case letters" title="wp: GOST_10859#6-bit code: with only Cyrillic upper case letters">6-bit</a> &
/// <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/GOST_10859#7-bit code: Cyrillic & Latin upper case letters" title="wp: GOST_10859#7-bit code: Cyrillic & Latin upper case letters">7-bit</a> depending on how the file was opened... <span class="rosetta__text--bold">And</span> one rogue Soviet university went further and built a [http://www.computer-museum.ru/english/setun.htm 1.5-bit] based computer.
/// <br>
/// Of course... as us <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Baby-Boom Generation" title="wp: Baby-Boom Generation">Boomers]] have turned into [[wp:Geezer|Geezer]]s we have become [[wp:All_caps#Computing|HARD OF HEARING</a>, 
/// and suffer from chronic <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Presbyopia" title="wp: Presbyopia">Presbyopia</a>, hence programming in UPPERCASE 
/// is less to do with computer architecture and more to do with practically. :-)
/// <br>
/// For economy of size, do not actually include Snoopy generation 
/// in either the code or the output, instead just output a place-holder.  
/// <br>
/// FYI: a nice ASCII art file of Snoopy can be found at [http://www.textfiles.com/artscene/asciiart/cursepic.art textfiles.com].  Save with a .txt extension.
/// <br>
/// <span class="rosetta__text--bold">Trivia:</span> The terms uppercase and lowercase date back to the early days of the mechanical printing press.  Individual metal alloy casts of each needed letter, or punctuation symbol, were meticulously added to a press block, by hand, before rolling out copies of a page. These metal casts were stored and organized in wooden cases. The more often needed <span class="rosetta__text--italic">miniscule</span> letters were placed closer to hand, in the lower cases of the work bench.  The less often needed, capitalized, <span class="rosetta__text--italic">majiscule</span> letters, ended up in the harder to reach upper cases.
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
