
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Command-line arguments
/// type: rosetta-code

/// categories:
/// Basic language learning
/// Programming environment operations
/// Initialization

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><p class="rosetta__paragraph">Retrieve the list of command-line arguments given to the program. For programs that only print the arguments when run directly, see <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Scripted main" title="Scripted main">Scripted main</a>.</p><br/><p class="rosetta__paragraph">See also <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Program name" title="Program name">Program name</a>.</p><br/><p class="rosetta__paragraph">For parsing command line arguments intelligently, see <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Parsing command-line arguments" title="Parsing command-line arguments">Parsing command-line arguments</a>.</p><br/><p class="rosetta__paragraph">Example command line:</p><br/><p class="rosetta__paragraph">myprogram -c "alpha beta" -h "gamma"</p><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var objArgs = WScript.Arguments;
for (var i = 0; i < objArgs.length; i++)
   WScript.Echo(objArgs.Item(i));

/// rawSolutions:
=={{header|JavaScript}}==
{{works with|JScript}}
<lang javascript>var objArgs = WScript.Arguments;
for (var i = 0; i < objArgs.length; i++)
   WScript.Echo(objArgs.Item(i));</lang>
{{works with|JScript.NET (compiled with jsc.exe)}}
<lang javascript>import System;
var argv:String[] = Environment.GetCommandLineArgs();
for (var i in argv)
  print(argv[i]);</lang>
{{works with|Rhino}}
{{works with|SpiderMonkey}}
<lang javascript>for (var i = 0; i < arguments.length; i++)
    print(arguments[i]);</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
