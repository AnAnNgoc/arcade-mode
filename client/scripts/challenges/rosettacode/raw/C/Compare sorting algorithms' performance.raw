
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Compare sorting algorithms' performance
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// Measure a relative performance of sorting algorithms implementations.
/// <br>
/// Plot <span class="rosetta__text--bold">execution time vs. input sequence length</span> dependencies for various implementation of sorting algorithm and different input sequence types (<a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/#Figures: log2( time in microseconds ) vs. log2( sequence length )" title="#Figures: log2( time in microseconds ) vs. log2( sequence length )">example figures</a>). 
/// <br>
/// Consider three type of input sequences:
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered">ones: sequence of all <span class="rosetta__text--italic">1</span>'s. Example: {1, 1, 1, 1, 1}</li>
/// <li class="rosetta__list-item--unordered">range: ascending sequence, i.e. already sorted. Example: {1, 2, 3, 10, 15}</li>
/// <li class="rosetta__list-item--unordered">shuffled range: sequence with elements randomly distributed. Example: {5, 3, 9, 6, 8}</li>
/// <br>
/// </ul>
/// Consider at least two different sorting functions (different algorithms or/and different implementation of the same algorithm).
/// For example, consider <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Bubble Sort" title="Bubble Sort"></a>, <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Insertion sort" title="Insertion sort"></a>, <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Quicksort" title="Quicksort"></a> or/and implementations of Quicksort with different pivot selection mechanisms. Where possible, use existing implementations.
/// <br>
/// Preliminary subtask:
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Bubble Sort" title="Bubble Sort"></a>, <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Insertion sort" title="Insertion sort"></a>, <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Quicksort" title="Quicksort"></a>, <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Radix sort" title="Radix sort"></a>, <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Shell sort" title="Shell sort"></a></li>
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Query Performance" title="Query Performance"></a></li>
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Write float arrays to a text file" title="Write float arrays to a text file"></a></li>
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Plot x, y arrays" title="Plot x, y arrays"></a></li>
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Polynomial Fitting" title="Polynomial Fitting"></a></li>
/// <br>
/// </ul>
/// General steps:
/// <ol class="rosetta__ordered-list">
/// <li class="rosetta__list-item--ordered">Define sorting routines to be considered.</li>
/// <li class="rosetta__list-item--ordered">Define appropriate sequence generators and write timings.</li>
/// <li class="rosetta__list-item--ordered">Plot timings.</li>
/// <li class="rosetta__list-item--ordered">What conclusions about relative performance of the sorting routines could be made based on the plots?</li>
/// <br>
/// </ol>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
