Count in factors

{{task|Prime Numbers}}

;Task:
Write a program which counts up from &nbsp; <span class="rosetta__text--bold">1</span>, &nbsp; displaying each number as the multiplication of its prime factors. 

For the purpose of this task, &nbsp; <span class="rosetta__text--bold">1</span> &nbsp; (unity) &nbsp; may be shown as itself.


;Example:
&nbsp; &nbsp; &nbsp; <span class="rosetta__text--bold">2</span> &nbsp; is prime, &nbsp; so it would be shown as itself. 
<br>&nbsp; &nbsp; &nbsp; <span class="rosetta__text--bold">6</span> &nbsp; is not prime; &nbsp; it would be shown as &nbsp; <span class="rosetta__text--bold">$2\times3$.</span> 
<br><span class="rosetta__text--bold">2144</span> &nbsp; is not prime; &nbsp; it would be shown as &nbsp; <span class="rosetta__text--bold">$2\times2\times2\times2\times2\times67$.</span>


;Related tasks:
* &nbsp; [[prime decomposition]]
* &nbsp; [[factors of an integer]]
* &nbsp; [[Sieve of Eratosthenes]]
* &nbsp; [[primality by trial division]]
* &nbsp; [[factors of a Mersenne number]]
* &nbsp; [[trial factoring of a Mersenne number]]
* &nbsp; [[partition an integer X into N primes]]
<br><br>


=={{header|JavaScript}}==
<lang javascript>for(i = 1; i <= 10; i++)
    console.log(i + " : " + factor(i).join(" x "));

function factor(n) {
    var factors = [];
    if (n == 1) return [1];
    for(p = 2; p <= n; ) {
	if((n % p) == 0) {
	    factors[factors.length] = p;
	    n /= p;
	}
	else p++;
    }
    return factors;
}</lang>
{{out}}
<pre>
1 : 1
2 : 2
3 : 3
4 : 2 x 2
5 : 5
6 : 2 x 3
7 : 7
8 : 2 x 2 x 2
9 : 3 x 3
10 : 2 x 5
</pre>

