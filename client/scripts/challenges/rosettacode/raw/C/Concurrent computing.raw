
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Concurrent computing
/// type: rosetta-code

/// categories:
/// Basic language learning

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Using either native language concurrency syntax or freely available libraries, write a program to display the strings "Enjoy" "Rosetta" "Code", one string per line, in random order. 
/// <br>
/// Concurrency syntax must use <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/thread" title="thread">threads</a>, tasks, co-routines, or whatever concurrency is called in your language.
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
self.addEventListener('message', function (event) {
  self.postMessage(event.data);
  self.close();
}, false);

/// rawSolutions:
=={{header|JavaScript}}==

JavaScript now enjoys access to a concurrency library thanks to [http://en.wikipedia.org/wiki/Web_worker Web Workers]. The Web Workers specification defines an API for spawning background scripts. This first code is the background script and should be in the concurrent_worker.js file.
<lang javascript>self.addEventListener('message', function (event) {
  self.postMessage(event.data);
  self.close();
}, false);</lang>
This second block creates the workers, sends them a message and creates an event listener to handle the response.
<lang javascript>var words = ["Enjoy", "Rosetta", "Code"];
var workers = [];

for (var i = 0; i < words.length; i++) {
  workers[i] = new Worker("concurrent_worker.js");
  workers[i].addEventListener('message', function (event) {
    console.log(event.data);
  }, false);
  workers[i].postMessage(words[i]);
}</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
