
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Count occurrences of a substring
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Create a function, &nbsp; or show a built-in function, &nbsp; to count the number of non-overlapping occurrences of a substring inside a string.
/// <br>
/// The function should take two arguments: 
/// <span class="rosetta__text--indented">::* &nbsp; the first argument being the string to search, &nbsp; and </span>
/// <span class="rosetta__text--indented">::* &nbsp; the second a substring to be searched for. </span>
/// <br>
/// <br>
/// It should return an integer count.
/// <lang pseudocode>print countSubstring("the three truths","th")
/// 3
/// <br>
/// // do not count substrings that overlap with previously-counted substrings:
/// print countSubstring("ababababab","abab")
/// 2</lang>
/// <br>
/// The matching should yield the highest number of non-overlapping matches. 
/// <br>
/// In general, this essentially means matching from left-to-right or right-to-left &nbsp; (see proof on talk page).
/// <br>
/// <br>
/// <br>
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
function countSubstring(str, subStr) {
    var matches = str.match(new RegExp(subStr, "g"));
    return matches ? matches.length : 0;
}

/// rawSolutions:
=={{header|JavaScript}}==
Using regexes:
<lang javascript>function countSubstring(str, subStr) {
    var matches = str.match(new RegExp(subStr, "g"));
    return matches ? matches.length : 0;
}</lang>

Using 'split' and ES6 notation:
<lang javascript>const countSubString = (str, subStr) => str.split(subStr).length - 1;
</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
