
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Commatizing numbers
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// <span class="rosetta__text--italic">Commatizing</span> &nbsp; numbers (as used here, a handy expedient made-up word) is the act of adding commas to a number (or string), or the numeric part of a larger string.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Write a function that takes a string as an argument with optional arguments or parameters (the format of parameters/options is left to the programmer) that in general, adds commas (or some
/// other characters, including blanks or tabs) to the first numeric part of a string (if it's suitable for commatizing as per the rules below), and returns that newly commatized string. 
/// <br>
/// Some of the commatizing rules (specified below) are arbitrary, but they'll be a part of this task requirements, if only to make the results consistent amongst national preferences and other disciplines.
/// <br>
/// The number may be part of a larger (non-numeric) string such as:
/// <span class="rosetta__text--indented">:::* &nbsp; «US$1744 millions» &nbsp; &nbsp; &nbsp; ──or──</span>
/// <span class="rosetta__text--indented">:::* &nbsp; ±25000 motes.</span>
/// <br>
/// <br>
/// The string may possibly <span class="rosetta__text--italic">not</span> have a number suitable for commatizing, so it should be untouched and <span class="rosetta__text--italic">no error generated</span>.
/// <br>
/// If any argument (option) is invalid, nothing is changed and no error <span class="rosetta__text--italic">need be</span> generated (quiet execution, no fail execution). &nbsp; Error message generation is optional.
/// <br>
/// The exponent part of a number is never commatized. &nbsp; The following string isn't suitable for commatizing: &nbsp; 9.7e+12000
/// <br>
/// Leading zeroes are never commatized. &nbsp; The string &nbsp; 0000000005714.882 &nbsp; after commatization is: &nbsp; 0000000005,714.882
/// <br>
/// Any &nbsp; <span class="rosetta__text--italic">period</span> &nbsp; (<big><b>.</b></big>) &nbsp; in a number is assumed to be a &nbsp; <span class="rosetta__text--italic">decimal point</span>.
/// <br>
/// The original string is never changed &nbsp; <span class="rosetta__text--italic">except</span> &nbsp; by the addition of commas &nbsp; [or whatever character(s) is/are used for insertion], if at all.
/// <br>
/// To wit, the following should be preserved:
/// <br>
/// <span class="rosetta__text--indented">:* &nbsp; leading signs (<span class="rosetta__text--bold">+</span>, <span class="rosetta__text--bold">-</span>) &nbsp; &nbsp; &nbsp; ── even superfluous signs</span>
/// <span class="rosetta__text--indented">:* &nbsp; leading/trailing/embedded blanks, tabs, and other whitespace </span>
/// <span class="rosetta__text--indented">:* &nbsp; the case (upper/lower) of the exponent indicator, e.g.: &nbsp; 4.8903d-002</span>
/// <br>
/// <br>
/// Any exponent character(s) should be supported:
/// <span class="rosetta__text--indented">:::::* &nbsp; 1247e12</span>
/// <span class="rosetta__text--indented">:::::* &nbsp; 57256.1D-4</span>
/// <span class="rosetta__text--indented">:::::* &nbsp; 4444^60</span>
/// <span class="rosetta__text--indented">:::::* &nbsp; 7500<b>∙</b>10**35</span>
/// <span class="rosetta__text--indented">:::::* &nbsp; 8500x10**35</span>
/// <span class="rosetta__text--indented">:::::* &nbsp; +55000↑3</span>
/// <span class="rosetta__text--indented">:::::* &nbsp; 1000**100</span>
/// <span class="rosetta__text--indented">:::::* &nbsp; 2048²</span>
/// <span class="rosetta__text--indented">:::::* &nbsp; 4096<sup>32</sup></span>
/// <span class="rosetta__text--indented">:::::* &nbsp; 10000pow(pi)</span>
/// <br>
/// <br>Numbers may be terminated with any non-digit character, including subscripts and/or superscript: &nbsp; 4142135624<sup>3</sup> &nbsp; or &nbsp; 7320509076<sub>(base 24)</sub>.
/// <br>
/// The character(s) to be used for the comma can be specified, and may contain blanks, tabs, and other whitespace characters, as well as multiple characters. &nbsp; The default is the comma (<big><span class="rosetta__text--bold">,</span></big>) character.
/// <br>
/// The &nbsp; <span class="rosetta__text--italic">period length</span> &nbsp; can be specified &nbsp; (sometimes referred to as "thousands" or "thousands separators"). &nbsp; The &nbsp; <span class="rosetta__text--italic">period length</span> &nbsp; can be defined as the length (or number) of the decimal digits between commas. &nbsp; The default period length is &nbsp; <big>3</big>.
/// <br>
/// <span class="rosetta__text--indented">:: E.G.: &nbsp; in this example, the &nbsp; <span class="rosetta__text--italic">period length</span> &nbsp; is five: &nbsp; 56789,12340,14148</span>
/// <br>
/// The location of where to start the scanning for the target field (the numeric part) should be able to be specified. &nbsp; The default is &nbsp; <big>1</big>.
/// <br>
/// The character strings below may be placed in a file (and read) or stored as simple strings within the program.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Strings to be used as a minimum:</dt></dl>
/// The value of &nbsp; pi &nbsp; (expressed in base 10) &nbsp; should be separated with blanks every &nbsp; <span class="rosetta__text--bold">5</span> &nbsp; places past the decimal point,
/// <br>the Zimbabwe dollar amount should use a decimal point for the "comma" separator:
/// <br>
/// <span class="rosetta__text--indented">* &nbsp; pi=3.14159265358979323846264338327950288419716939937510582097494459231</span>
/// <span class="rosetta__text--indented">* &nbsp; The author has two Z$100000000000000 Zimbabwe notes (100 trillion).</span>
/// <span class="rosetta__text--indented">* &nbsp; "-in Aus$+1411.8millions"</span>
/// <span class="rosetta__text--indented">* &nbsp; ===US$0017440 millions=== (in 2000 dollars)</span>
/// <span class="rosetta__text--indented">* &nbsp; 123.e8000 is pretty big.</span>
/// <span class="rosetta__text--indented">* &nbsp; The land area of the earth is  57268900(29% of the surface) square miles.</span>
/// <span class="rosetta__text--indented">* &nbsp; Ain't no numbers in this here words, nohow, no way, Jose.</span>
/// <span class="rosetta__text--indented">* &nbsp; James was never known as  0000000007</span>
/// <span class="rosetta__text--indented">* &nbsp; Arthur Eddington wrote: I believe there are 15747724136275002577605653961181555468044717914527116709366231425076185631031296 protons in the universe.</span>
/// <span class="rosetta__text--indented">* &nbsp; ␢␢␢$-140000±100  millions.</span>
/// <span class="rosetta__text--indented">* &nbsp; 6/9/1946 was a good year for some.</span>
/// <br>where the penultimate string has three leading blanks &nbsp; (real blanks are to be used).
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Also see:</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered">The Wiki entry: &nbsp; [http://en.wikipedia.org/wiki/Eddington_number Arthur Eddington's number of protons in the universe]. <br><br></li>
/// <br>
/// </ul>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
