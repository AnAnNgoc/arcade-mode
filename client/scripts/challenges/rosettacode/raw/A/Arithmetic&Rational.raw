
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Arithmetic/Rational
/// type: rosetta-code

/// categories:
/// Arithmetic

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Create a reasonably complete implementation of rational arithmetic in the particular language using the idioms of the language.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Example:</dt></dl>
/// <p class="rosetta__paragraph">Define a new type called <span class="rosetta__text--bold">frac</span> with binary operator "//" of two integers that returns a <span class="rosetta__text--bold">structure</span> made up of the numerator and the denominator (as per a rational number).</p><br/><p class="rosetta__paragraph">Further define the appropriate rational unary <span class="rosetta__text--bold">operators</span> <span class="rosetta__text--bold">abs</span> and '-', with the binary <span class="rosetta__text--bold">operators</span> for addition '+', subtraction '-', multiplication '&times;', division '/', integer division '&divide;', modulo division, the comparison operators (e.g. '<', '&le;', '>', & '&ge;') and equality operators (e.g. '=' & '&ne;').</p><br/><p class="rosetta__paragraph">Define standard coercion <span class="rosetta__text--bold">operators</span> for casting <span class="rosetta__text--bold">int</span> to <span class="rosetta__text--bold">frac</span> etc.</p><br/><p class="rosetta__paragraph">If space allows, define standard increment and decrement <span class="rosetta__text--bold">operators</span> (e.g. '+:=' & '-:=' etc.).</p><br/><p class="rosetta__paragraph">Finally test the operators:</p>
/// <p class="rosetta__paragraph">Use the new type <span class="rosetta__text--bold">frac</span> to find all <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Perfect Numbers" title="Perfect Numbers">perfect numbers</a> less than 2<sup>19</sup> by summing the reciprocal of the factors.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Related task:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"> <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Perfect Numbers" title="Perfect Numbers">Perfect Numbers</a></li></ul><br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
null

/// rawSolutions:
=={{header|JavaScript}}==
<div style="text-align:right;font-size:7pt">''<nowiki>[</nowiki>This section is included from [[Arithmetic/Rational/JavaScript|a subpage]] and should be edited there, not here.<nowiki>]</nowiki>''</div>
{{:Arithmetic/Rational/JavaScript}}



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
