
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Averages/Mean angle
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// When calculating the <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Mean of circular quantities" title="wp: Mean of circular quantities">average or mean of an angle</a> one has to take into account how angles wrap around so that any angle in degrees plus any integer multiple of 360 degrees is a measure of the same angle.
/// <br>
/// If one wanted an average direction of the wind over two readings where the first reading was of 350 degrees and the second was of 10 degrees then the average of the numbers is 180 degrees, whereas if you can note that 350 degrees is equivalent to -10 degrees and so you have two readings at 10 degrees either side of zero degrees leading to a more fitting mean angle of zero degrees.
/// <br>
/// To calculate the mean angle of several angles:
/// <ol class="rosetta__ordered-list">
/// <li class="rosetta__list-item--ordered">Assume all angles are on the unit circle and convert them to complex numbers expressed in real and imaginary form.</li>
/// <li class="rosetta__list-item--ordered">Compute the mean of the complex numbers.</li>
/// <li class="rosetta__list-item--ordered">Convert the complex mean to polar coordinates whereupon the phase of the complex mean is the required angular mean.</li>
/// <br>
/// </ol>
/// <br>
/// (Note that, since the mean is the sum divided by the number of numbers, and division by a positive real number does not affect the angle, you can also simply compute the sum for step 2.)
/// <br>
/// You can alternatively use this formula:
/// <br>
/// <span class="rosetta__text--indented"> Given the angles $\alpha_1,\dots,\alpha_n$ the mean is computed by</span>
/// <br>
/// <span class="rosetta__text--indented">:$\bar{\alpha} = \operatorname{atan2}\left(\frac{1}{n}\cdot\sum_{j=1}^n \sin\alpha_j, \frac{1}{n}\cdot\sum_{j=1}^n \cos\alpha_j\right) $</span>
/// <br>
/// <br>
/// <br>
/// <ol class="rosetta__ordered-list">
/// <li class="rosetta__list-item--ordered">write a function/method/subroutine/... that given a list of angles in degrees returns their mean angle. <br> (You should use a built-in function if you have one that does this for degrees or radians). </li>
/// <li class="rosetta__list-item--ordered">Use the function to compute the means of these lists of angles (in degrees): </li>
/// <br>
/// </ol>#* &nbsp; [350, 10]  
/// #* &nbsp; [90, 180, 270, 360] 
/// #* &nbsp; [10, 20, 30]
/// <ol class="rosetta__ordered-list">
/// <li class="rosetta__list-item--ordered">Show your output here.</li>
/// <br>
/// </ol>
/// <br>
/// <br>
/// <br>
/// <br>
/// <br><hr>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
function sum(a) {
    s = 0;
    for (var i in a) s += a[i];
    return s;
} 

function degToRad(a) {
    return Math.PI/180*a;
}

function meanAngleDeg(a) {
    return 180/Math.PI*Math.atan2(sum(a.map(degToRad).map(Math.sin))/a.length,sum(a.map(degToRad).map(Math.cos))/a.length);
}

var a = [350, 10], b = [90, 180, 270, 360],  c =[10, 20, 30];
console.log(meanAngleDeg(a));
console.log(meanAngleDeg(b));
console.log(meanAngleDeg(c));

/// rawSolutions:
=={{header|JavaScript}}==
===atan2===
<lang javascript>function sum(a) {
    s = 0;
    for (var i in a) s += a[i];
    return s;
} 

function degToRad(a) {
    return Math.PI/180*a;
}

function meanAngleDeg(a) {
    return 180/Math.PI*Math.atan2(sum(a.map(degToRad).map(Math.sin))/a.length,sum(a.map(degToRad).map(Math.cos))/a.length);
}

var a = [350, 10], b = [90, 180, 270, 360],  c =[10, 20, 30];
console.log(meanAngleDeg(a));
console.log(meanAngleDeg(b));
console.log(meanAngleDeg(c));</lang>
{{out}}
<pre>-1.614809932057922e-15
-90
19.999999999999996</pre>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
