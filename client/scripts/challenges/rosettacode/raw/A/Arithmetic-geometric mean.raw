Arithmetic-geometric mean

{{task}}{{wikipedia|Arithmetic-geometric mean}}


;task:

Write a function to compute the <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Arithmetic-geometric mean" title="wp: Arithmetic-geometric mean">arithmetic-geometric mean</a> of two numbers.
[http://mathworld.wolfram.com/Arithmetic-GeometricMean.html]
The arithmetic-geometric mean of two numbers can be (usefully) denoted as $\mathrm{agm}(a,g)$, and is equal to the limit of the sequence:
: $a_0 = a; \qquad g_0 = g$
: $a_{n+1} = \tfrac{1}{2}(a_n + g_n); \quad g_{n+1} = \sqrt{a_n g_n}.$
Since the limit of $a_n-g_n$ tends (rapidly) to zero with iterations, this is an efficient method.

Demonstrate the function by calculating:
:$\mathrm{agm}(1,1/\sqrt{2})$
 

;Also see:
* &nbsp; [http://mathworld.wolfram.com/Arithmetic-GeometricMean.html mathworld.wolfram.com/Arithmetic-Geometric Mean]
<br><br>


=={{header|JavaScript}}==

===ES5===
<lang JavaScript>function agm(a0, g0) {
    var an = (a0 + g0) / 2,
        gn = Math.sqrt(a0 * g0);
    while (Math.abs(an - gn) > tolerance) {
        an = (an + gn) / 2, gn = Math.sqrt(an * gn)
    }
    return an;
}

agm(1, 1 / Math.sqrt(2));</lang>

===ES6===
<lang JavaScript>(() => {
    'use strict';

    // ARITHMETIC-GEOMETRIC MEAN

    // agm :: Num a => a -> a -> a
    let agm = (a, g) => {
            let abs = Math.abs,
                sqrt = Math.sqrt;

            return until(
                    m => abs(m.an - m.gn) < tolerance,
                    m => {
                        return {
                            an: (m.an + m.gn) / 2,
                            gn: sqrt(m.an * m.gn)
                        };
                    }, {
                        an: (a + g) / 2,
                        gn: sqrt(a * g)
                    }
                )
                .an;
        },

        // GENERIC

        // until :: (a -> Bool) -> (a -> a) -> a -> a
        until = (p, f, x) => {
            let v = x;
            while (!p(v)) v = f(v);
            return v;
        };


    // TEST

    let tolerance = 0.000001;


    return agm(1, 1 / Math.sqrt(2));

})();</lang>

{{Out}}
<lang JavaScript>0.8472130848351929</lang>

