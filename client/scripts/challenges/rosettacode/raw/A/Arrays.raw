
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Arrays
/// type: rosetta-code

/// categories:
/// Simple

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
///  
/// <br>
/// This task is about arrays.
///  
/// For hashes or associative arrays, please see <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Creating an Associative Array" title="Creating an Associative Array"></a>. 
/// <br>
/// For a definition and in-depth discussion of what an array is, see <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Array" title="Array"></a>.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Show basic array syntax in your language. 
/// <br>
/// Basically, create an array, assign a value to it, and retrieve an element &nbsp; (if available, show both fixed-length arrays and
/// dynamic arrays, pushing a value into it).
/// <br>
/// Please discuss at Village Pump: &nbsp; .  
/// <br>
/// Please merge code in from these obsolete tasks:
/// <span class="rosetta__text--indented">::* &nbsp; <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Creating an Array" title="Creating an Array"></a></span>
/// <span class="rosetta__text--indented">::* &nbsp; <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Assigning Values to an Array" title="Assigning Values to an Array"></a></span>
/// <span class="rosetta__text--indented">::* &nbsp; <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Retrieving an Element of an Array" title="Retrieving an Element of an Array"></a></span>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Related tasks:</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered">&nbsp; <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Collections" title="Collections"></a></li>
/// <li class="rosetta__list-item--unordered">&nbsp; <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Creating an Associative Array" title="Creating an Associative Array"></a></li>
/// <li class="rosetta__list-item--unordered">&nbsp; <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Two-dimensional array (runtime)" title="Two-dimensional array (runtime)"></a></li>
/// <br>
/// </ul><br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
// Create a new array with length 0
var myArray = new Array();

// Create a new array with length 5
var myArray1 = new Array(5);

// Create an array with 2 members (length is 2) 
var myArray2 = new Array("Item1","Item2");

// Create an array with 2 members using an array literal
var myArray3 = ["Item1", "Item2"];

// Assign a value to member [2] (length is now 3)
myArray3[2] = 5;

var x = myArray[2] + myArray.length;   // 8

// You can also add a member to an array with the push function (length is now 4)
myArray3.push('Test');

// Elisions are supported, but are buggy in some implementations
var y = [0,1,,];  // length 3, or 4 in buggy implementations 


/// rawSolutions:
=={{header|JavaScript}}==
JavaScript arrays are Objects that inherit from Array prototype and have a special length property that is always one higher than the highest nonâ€“negative integer index. Methods inherited from Array.prototype are mostly generic and can be applied to other objects with a suitable length property and numeric property names.
Note that if the Array constructor is provided with one argument, it is treated as specifying the length of the new array, if more than one argument is supplied, they are treated as members of the new array.
<lang javascript>// Create a new array with length 0
var myArray = new Array();

// Create a new array with length 5
var myArray1 = new Array(5);

// Create an array with 2 members (length is 2) 
var myArray2 = new Array("Item1","Item2");

// Create an array with 2 members using an array literal
var myArray3 = ["Item1", "Item2"];

// Assign a value to member [2] (length is now 3)
myArray3[2] = 5;

var x = myArray[2] + myArray.length;   // 8

// You can also add a member to an array with the push function (length is now 4)
myArray3.push('Test');

// Elisions are supported, but are buggy in some implementations
var y = [0,1,,];  // length 3, or 4 in buggy implementations 
</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
