
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Arbitrary-precision integers (included)
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// Using the in-built capabilities of your language, calculate the integer value of:
/// <br>
///          <big><big>$5^{4^{3^2}}$</big></big>
/// <br>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered"> Confirm that the first and last twenty digits of the answer are:      </li>
/// <br>
/// </ul>      62060698786608744707...92256259918212890625
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered"> Find and show the number of decimal digits in the answer.</li>
/// <br>
/// </ul>
/// <br>
/// <small>Note: <ul><li>Do not submit an <span class="rosetta__text--italic">implementation</span> of <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/arbitrary precision arithmetic" title="wp: arbitrary precision arithmetic">arbitrary precision arithmetic]]. The intention is to show the capabilities of the language as supplied. If a language has a <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Talk:Arbitrary-precision integers (included)#Use of external libraries" title="Talk:Arbitrary-precision integers (included)#Use of external libraries">single, overwhelming, library]] of varied modules that is endorsed by its home site – such as [[CPAN</a> for Perl or [[Boost</a> for C++ – then that <span class="rosetta__text--italic">may</span> be used instead.
/// </li><li>Strictly speaking, this should not be solved by fixed-precision numeric libraries where the precision has to be manually set to a large value; although if this is the <span class="rosetta__text--bold">only</span> recourse then it may be used with a note explaining that the precision must be set manually to a large enough value.</li></ul></small>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">See also:</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Long multiplication" title="Long multiplication"></a></li>
/// <li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Exponentiation order" title="Exponentiation order"></a></li>
/// <br>
/// </ul><br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
