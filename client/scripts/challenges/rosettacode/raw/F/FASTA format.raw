
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: FASTA format
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// In <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/bioinformatics" title="wp: bioinformatics">bioinformatics]], long character strings are often encoded in a format called [[wp:FASTA format|FASTA</a>.  
/// <br>
/// A FASTA file can contain several strings, each identified by a name marked by a <big><big><code>&gt;</code></big></big> (greater than) character at the beginning of the line.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Write a program that reads a FASTA file such as:
/// <pre>
/// >Rosetta_Example_1
/// THERECANBENOSPACE
/// >Rosetta_Example_2
/// THERECANBESEVERAL
/// LINESBUTTHEYALLMUST
/// BECONCATENATED
/// </pre>
/// <br>
/// <pre>
/// Rosetta_Example_1: THERECANBENOSPACE
/// Rosetta_Example_2: THERECANBESEVERALLINESBUTTHEYALLMUSTBECONCATENATED
/// </pre>
/// Note that a high-quality implementation will not hold the entire file in memory at once; real FASTA files can be multiple gigabytes in size.
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
