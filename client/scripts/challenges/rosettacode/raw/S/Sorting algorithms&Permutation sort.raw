
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Sorting algorithms/Permutation sort
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Implement a permutation sort, which proceeds by generating the possible permutations</p>
/// <p class="rosetta__paragraph">of the input array/list until discovering the sorted one.</p><br/><p class="rosetta__paragraph">Pseudocode:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--bold">while not</span> InOrder(list) <span class="rosetta__text--bold">do</span></p>
/// <p class="rosetta__paragraph">nextPermutation(list)</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--bold">done</span></p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
