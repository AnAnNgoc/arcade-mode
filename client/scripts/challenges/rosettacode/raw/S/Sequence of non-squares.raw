Sequence of non-squares

{{task|Arithmetic operations}}

;Task:
Show that the following remarkable formula gives the [http://www.research.att.com/~njas/sequences/A000037 sequence] of non-square [[wp:Natural_number|natural numbers]]:
  n + floor(1/2 + sqrt(n))
* Print out the values for &nbsp; <big> n </big> &nbsp; in the range &nbsp; '''1''' &nbsp; to &nbsp; '''22'''
* Show that no squares occur for &nbsp; <big> n </big> &nbsp; less than one million


This sequence is also known as &nbsp; [http://oeis.org/A000037 A000037] &nbsp; in the '''OEIS''' database. 
<br><br>


=={{header|JavaScript}}==

===ES5===

Iterative

<lang javascript>var a = [];
for (var i = 1; i < 23; i++) a[i] = i + Math.floor(1/2 + Math.sqrt(i));
console.log(a);

for (i = 1; i < 1000000; i++) if (Number.isInteger(i + Math.floor(1/2 + Math.sqrt(i))) === false) {
    console.log("The ",i,"th element of the sequence is a square");
}</lang>

===ES6===


By functional composition

<lang JavaScript>(() => {

    // nonSquare :: Int -> Int
    let nonSquare = n =>
        n + floor(1 / 2 + sqrt(n));



    // floor :: Num -> Int
    let floor = Math.floor,

        // sqrt :: Num -> Num
        sqrt = Math.sqrt,

        // isSquare :: Int -> Bool
        isSquare = n => {
            let root = sqrt(n);

            return root === floor(root);
        };


    // TEST
    return {
        first22: Array.from({
            length: 22
        }, (_, i) => nonSquare(i + 1)),

        firstMillionNotSquare: Array.from({
                length: 10E6
            }, (_, i) => nonSquare(i + 1))
            .filter(isSquare)
            .length === 0
    };

})();</lang>

{{Out}}
<lang JavaScript>{
    "first22":[2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15,
               17, 18, 19, 20, 21, 22, 23, 24, 26, 27], 
    "firstMillionNotSquare":true
}</lang>

