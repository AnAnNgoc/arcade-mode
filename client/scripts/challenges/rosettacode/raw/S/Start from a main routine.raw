
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Start from a main routine
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// <br>
/// Some languages (like Gambas and Visual Basic) support two startup modes. &nbsp; Applications written in these languages start with an open window that waits for events, and it is necessary to do some trickery to cause a main procedure to run instead. &nbsp; Data driven or event driven languages may also require similar trickery to force a startup procedure to run.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Demonstrate the steps involved in causing the application to run a main procedure, rather than an event driven window at startup.
/// <br>
/// Languages that always run from main() can be omitted from this task.
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
