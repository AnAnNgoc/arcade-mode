
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Sorting algorithms/Stooge sort
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Show the &nbsp; <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Stooge sort" title="wp: Stooge sort">Stooge Sort</a> &nbsp; for an array of integers. 
/// <br>
/// <br>
/// The Stooge Sort algorithm is as follows:
///  <b>algorithm</b> stoogesort(<b>array</b> L, i = 0, j = <b>length</b>(L)-1)
///       <b>if</b> L[j] < L[i] <b>then</b>
///           L[i] <b>â†”</b> L[j]
///       <b>if</b> j - i > 1 <b>then</b>
///           t <b>:=</b> (j - i + 1)/3
///           stoogesort(L, i  , j-t)
///           stoogesort(L, i+t, j  )
///           stoogesort(L, i  , j-t)
///       <b>return</b> L
/// <br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
function stoogeSort (array, i, j) {
    if (j === undefined) {
        j = array.length - 1;
    }

    if (i === undefined) {
        i = 0;
    }

    if (array[j] < array[i]) {
        var aux = array[i];
        array[i] = array[j];
        array[j] = aux;
    }

    if (j - i > 1) {
        var t = Math.floor((j - i + 1) / 3);
        stoogeSort(array, i, j-t);
        stoogeSort(array, i+t, j);
        stoogeSort(array, i, j-t);
    }
};

/// rawSolutions:
=={{header|JavaScript}}==
<lang javascript>function stoogeSort (array, i, j) {
    if (j === undefined) {
        j = array.length - 1;
    }

    if (i === undefined) {
        i = 0;
    }

    if (array[j] < array[i]) {
        var aux = array[i];
        array[i] = array[j];
        array[j] = aux;
    }

    if (j - i > 1) {
        var t = Math.floor((j - i + 1) / 3);
        stoogeSort(array, i, j-t);
        stoogeSort(array, i+t, j);
        stoogeSort(array, i, j-t);
    }
};</lang>
Example:
<lang javascript>arr = [9,1,3,10,13,4,2];
stoogeSort(arr);
console.log(arr);</lang>
{{out}}
<pre>[1, 2, 3, 4, 9, 10, 13]</pre>


/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
