
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Speech synthesis
/// type: rosetta-code

/// categories:
/// Speech synthesis
/// Temporal media

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <p class="rosetta__paragraph"><!-- this task to be in "Temporal media" category once ready. --></p>
/// <br/>
/// <p class="rosetta__paragraph">Render the text    <span class="rosetta__text--bold">This is an example of speech synthesis</span>   as speech.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var voice = new ActiveXObject("SAPI.SpVoice");
voice.speak("This is an example of speech synthesis.");

/// rawSolutions:
=={{header|JavaScript}}==
{{works with|JScript}}
<lang javascript>var voice = new ActiveXObject("SAPI.SpVoice");
voice.speak("This is an example of speech synthesis.");</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
