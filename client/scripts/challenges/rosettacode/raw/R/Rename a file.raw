
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Rename a file
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Rename:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::*  a file called   <span class="rosetta__text--bold">input.txt</span>   into   <span class="rosetta__text--bold">output.txt</span>   and </span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::*  a directory called   <span class="rosetta__text--bold">docs</span>   into   <span class="rosetta__text--bold">mydocs</span>.</span></p>
/// <br/><p class="rosetta__paragraph">This should be done twice:</p>
/// <p class="rosetta__paragraph">once "here", i.e. in the current working directory and once in the filesystem root.</p><br/><p class="rosetta__paragraph">It can be assumed that the user has the rights to do so.</p><br/><p class="rosetta__paragraph">(In unix-type systems, only the user root would have</p>
/// <p class="rosetta__paragraph">sufficient permissions in the filesystem root.)</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var fso = new ActiveXObject("Scripting.FileSystemObject");
fso.MoveFile('input.txt', 'output.txt');
fso.MoveFile('c:/input.txt', 'c:/output.txt');
fso.MoveFolder('docs', 'mydocs');
fso.MoveFolder('c:/docs', 'c:/mydocs');

/// rawSolutions:
=={{header|JavaScript}}==
{{works with|JScript}}
Throws an error if the destination file/folder exists.
<lang javascript>var fso = new ActiveXObject("Scripting.FileSystemObject");
fso.MoveFile('input.txt', 'output.txt');
fso.MoveFile('c:/input.txt', 'c:/output.txt');
fso.MoveFolder('docs', 'mydocs');
fso.MoveFolder('c:/docs', 'c:/mydocs');</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
