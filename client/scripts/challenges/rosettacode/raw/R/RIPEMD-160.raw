
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: RIPEMD-160
/// type: rosetta-code

/// categories:
/// Checksums

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
///  
/// <br>
/// <br>
/// <br>
/// <br>
/// <br>
/// <span class="rosetta__text--bold">RIPEMD-160</span> is another hash function; it computes a 160-bit message digest.
/// <br>
/// There is a [http://homes.esat.kuleuven.be/~bosselae/ripemd160.html RIPEMD-160 home page], with test vectors and [http://www.esat.kuleuven.be/~bosselae/ripemd/rmd160.txt pseudocode for RIPEMD-160]. 
/// For padding the message, RIPEMD-160 acts like <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/MD4" title="MD4"></a> (RFC 1320).
/// <br>
/// Find the RIPEMD-160 message digest of a string of <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/octet" title="octet"></a>s. 
/// Use the ASCII encoded string “<tt>Rosetta Code</tt>”. 
/// You may either call an RIPEMD-160 library, or implement RIPEMD-160 in your language.
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
