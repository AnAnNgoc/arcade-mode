Ordered words

{{task|text processing}}

An &nbsp; ''ordered word'' &nbsp; is a word in which the letters appear in alphabetic order. 

Examples include &nbsp; '''abbey''' &nbsp; and &nbsp; '''dirt'''. 

{{task heading}}

Find ''and display'' all the ordered words in the dictionary &nbsp; [http://www.puzzlers.org/pub/wordlists/unixdict.txt unixdict.txt] &nbsp; that have the longest word length. 

(Examples that access the dictionary file locally assume that you have downloaded this file yourself.)  

The display needs to be shown on this page.

{{task heading|Related tasks}}

{{Related tasks/Word plays}}

<hr>


=={{header|JavaScript}}==
Using [http://nodejs.org/ node.js]:

<lang javascript>var fs = require('fs'), print = require('sys').print;
fs.readFile('./unixdict.txt', 'ascii', function (err, data) {
    var is_ordered = function(word){return word.split('').sort().join('') === word;},
        ordered_words = data.split('\n').filter(is_ordered).sort(function(a, b){return a.length - b.length}).reverse(),
        longest = [], curr = len = ordered_words[0].length, lcv = 0;
    while (curr === len){
        longest.push(ordered_words[lcv]);
        curr = ordered_words[++lcv].length;
    };
    print(longest.sort().join(', ') + '\n');
});</lang>

Output:
<pre>abbott, accent, accept, access, accost, almost, bellow, billow, biopsy, chilly, choosy, choppy, effort, floppy, glossy, knotty</pre>

Alternative version (also using Node.js):

<lang javascript>var http = require('http');

http.get({
  host: 'www.puzzlers.org',
  path: '/pub/wordlists/unixdict.txt'
}, function(res) {
  var data = '';
  res.on('data', function(chunk) {
    data += chunk;
  });
  res.on('end', function() {
    var words = data.split('\n');
    var max = 0;
    var ordered = [];
    words.forEach(function(word) {
      if (word.split('').sort().join('') != word) return;
      if (word.length == max) {
        ordered.push(word);
      } else if (word.length > max) {
        ordered = [word];
        max = word.length;
      }
    });
    console.log(ordered.join(', '));
  });
});</lang>
