
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Knapsack problem/Continuous
/// type: rosetta-code

/// categories:
/// ?

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <br>
/// <br>
/// <!-- a thief  (or burglar)  steals,  a robber robs  (confronts a person while stealing).      Not exactly a perfect definition,  but close enough.  -- Gerard Schildberger. -->
/// <br>
/// A thief burgles a butcher's shop, where he can select from some items.
/// <br>
/// The thief knows the weights and prices of each items. &nbsp; Because he has a knapsack with 15 kg maximal capacity, he wants to select the items such that he would have his profit maximized. &nbsp; He may cut the items; &nbsp; the item has a reduced price after cutting that is proportional to the original price by the ratio of masses. &nbsp; That means: &nbsp; half of an item has half the price of the original.
/// <br>
/// <br>
/// This is the item list in the butcher's shop:
/// <br>
/// {| style="text-align: left; width: 50%;" border="4" cellpadding="2" cellspacing="2"
/// |+ Table of potential knapsack items
/// |- style="background-color: rgb(255, 204, 255);"
/// ! Item !! Weight (kg) !! Price (Value)
/// |-
/// | beef || 3.8 || 36
/// |-
/// | pork || 5.4 || 43
/// |-
/// | ham || 3.6 || 90
/// |-
/// | greaves || 2.4 || 45
/// |-
/// | flitch || 4.0 || 30
/// |-
/// | brawn || 2.5 || 56
/// |-
/// | welt || 3.7 || 67
/// |-
/// | salami || 3.0 || 95
/// |-
/// | sausage || 5.9 || 98
/// |- style="background-color: rgb(255, 204, 255);"
/// | Knapsack || &lt;=15 kg || ? 
/// |}
/// <br>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// Show which items the thief carries in his knapsack so that their total weight does not exceed 15 kg, and their total value is maximized.
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Related tasks:</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item">&nbsp; [[Knapsack problem/Bounded]]</li>
/// <li class="rosetta__list-item">&nbsp; [[Knapsack problem/Unbounded]]</li>
/// <li class="rosetta__list-item">&nbsp; [[Knapsack problem/0-1]]</li>
/// <br>
/// </ul><br><br>
/// <br>
/// <br>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">See also:</dt></dl>
/// <ul class="rosetta__unordered-list">
/// <li class="rosetta__list-item">&nbsp; Wikipedia article: &nbsp; <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Continuous_knapsack_problem" title="wp: Continuous_knapsack_problem">continuous knapsack</a>.</li>
/// <br>
/// </ul><br><br>
/// <br>
/// <br>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
