
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-undef: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Keyboard input/Obtain a Y or N response
/// type: rosetta-code

/// categories:
/// Simple

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><p class="rosetta__paragraph"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/user input::task" title="user input::task"> </a></p><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Obtain a valid  <span class="rosetta__text--bold">Y</span>  or  <span class="rosetta__text--bold">N</span>  response from the <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/input device::keyboard" title="input device::keyboard">input device::keyboard</a>.</p><br/><p class="rosetta__paragraph">The keyboard should be flushed, so that any outstanding key-presses are removed, preventing any existing  <span class="rosetta__text--bold">Y</span>  or  <span class="rosetta__text--bold">N</span>  key-press from being evaluated.</p><br/><p class="rosetta__paragraph">The response should be obtained as soon as  <span class="rosetta__text--bold">Y</span>  or  <span class="rosetta__text--bold">N</span>  are pressed, and there should be no need to press an  enter  key.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var keypress = require('keypress');

keypress(process.stdin);

process.stdin.on('keypress', function (ch, key) {
    if (key && (key.name === 'y' || key.name === 'n')) {
       console.log('Reply:' + key.name);
    }
});

process.stdin.setRawMode(true);
process.stdin.resume();

/// rawSolutions:
=={{header|JavaScript}}==

Here's how you can asynchronously read a single character in Node.js, using the <code>keypress</code> package.
This does not seem to be possible to do synchronously in Node.js or at all in the SpiderMonkey shell.

<lang javascript>var keypress = require('keypress');

keypress(process.stdin);

process.stdin.on('keypress', function (ch, key) {
    if (key && (key.name === 'y' || key.name === 'n')) {
       console.log('Reply:' + key.name);
    }
});

process.stdin.setRawMode(true);
process.stdin.resume();</lang>

Using DOM events.

<lang javascript>document.body.addEventListener('keyup', function (e) {
  var key = String.fromCharCode(e.keyCode).toLowerCase();
  if (key === 'y' || key === 'n') {
    console.log('response is: ' + key);
  }
}, false);</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
