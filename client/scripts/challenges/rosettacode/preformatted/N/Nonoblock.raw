
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Nonoblock
/// type: rosetta-code

/// categories:
/// Puzzles

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <p class="rosetta__paragraph">Nonoblock is a chip off the old <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Nonogram solver" title="Nonogram solver">Nonogram</a> puzzle.</p><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Given:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">The number of cells in a row.</li>
/// <li class="rosetta__list-item--unordered">The size of each, (space separated), connected block of cells to fit in the row, in left-to right order.</li></ul>
/// <p class="rosetta__paragraph"><span class="rosetta__text--bold">The task</span> is to</p>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">show all possible positions </li>
/// <li class="rosetta__list-item--unordered">and the number of positions </li></ul>of the blocks for the following cases
/// <p class="rosetta__paragraph">within the row. On this page. Using a "neat" diagram of the block positions.</p><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Enumerate the following configurations:</dt></dl>
/// <ol class="rosetta__ordered-list"><li class="rosetta__list-item--ordered">5 cells and [2, 1] blocks</li>
/// <li class="rosetta__list-item--ordered">5 cells and [] blocks (no blocks)</li>
/// <li class="rosetta__list-item--ordered">10 cells and [8] blocks</li>
/// <li class="rosetta__list-item--ordered">15 cells and [2, 3, 2, 3] blocks</li>
/// <li class="rosetta__list-item--ordered">5 cells and [2, 3] blocks (Should give some indication of this not being possible).</li></ol>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Example:</dt></dl>
/// <p class="rosetta__paragraph">Given a row of five cells and a block of two cells followed</p>
/// <p class="rosetta__paragraph">by a block of 1 cell - in that order, the example could be shown as:</p><br/><p class="rosetta__paragraph">|_|_|_|_|_| # 5 cells and [2, 1] blocks</p><br/><p class="rosetta__paragraph">And would expand to the following 3 possible rows of block positions:</p><br/><p class="rosetta__paragraph">|A|A|_|B|_|</p>
/// <p class="rosetta__paragraph">|A|A|_|_|B|</p>
/// <p class="rosetta__paragraph">|_|A|A|_|B|</p>
/// <br/><p class="rosetta__paragraph">Note how the sets of blocks are always separated by a space.</p><br/><p class="rosetta__paragraph">Note also that it is not necessary for each block to have a separate letter.</p>
/// <p class="rosetta__paragraph">Output approximating</p><br/><p class="rosetta__paragraph">This:</p><br/><p class="rosetta__paragraph">|#|#|_|#|_|</p>
/// <p class="rosetta__paragraph">|#|#|_|_|#|</p>
/// <p class="rosetta__paragraph">|_|#|#|_|#|</p><br/><p class="rosetta__paragraph">Or even this:</p><br/><p class="rosetta__paragraph">##.#.</p>
/// <p class="rosetta__paragraph">##..#</p>
/// <p class="rosetta__paragraph">.##.#</p><br/><p class="rosetta__paragraph">Would also work.</p><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">An algorithm:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">Find the minimum space to the right that is needed to legally hold all but the leftmost block of cells (with a space between blocks remember).</li>
/// <li class="rosetta__list-item--unordered">The leftmost cell can legitimately be placed in all positions from the LHS up to a RH position that allows enough room for the rest of the blocks.</li>
/// <li class="rosetta__list-item--unordered">for each position of the LH block recursively compute the position of the rest of the blocks in the <span class="rosetta__text--italic">remaining</span> space to the right of the current placement of the LH block.</li></ul>(This is the algorithm used in the <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Nonoblock#Python" title="Nonoblock#Python">Nonoblock#Python</a> solution).    <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Reference:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">The blog post <a class="rosetta__link--wiki" href="http://paddy3118.blogspot.co.uk/2014/03/nonogram-puzzle-solver-part-1.html" title="link: http://paddy3118.blogspot.co.uk/2014/03/nonogram-puzzle-solver-part-1.html">Nonogram puzzle solver (part 1)</a> Inspired this task and donated its <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Nonoblock#Python" title="Nonoblock#Python">Nonoblock#Python</a> solution.</li></ul>
/// </div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
/// id: 5a23c84252665b21eecc7f39
