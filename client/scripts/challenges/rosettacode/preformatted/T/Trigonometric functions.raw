
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Trigonometric functions
/// type: rosetta-code

/// categories:
/// Mathematics

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">If your language has a library or built-in functions for trigonometry, show examples of:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:*  sine</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:*  cosine</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:*  tangent</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:*  inverses  (of the above)</span></p>
/// <br>using the same angle in radians and degrees. <br/><p class="rosetta__paragraph">For the non-inverse functions,  each radian/degree pair should use arguments that evaluate to the same angle  (that is, it's not necessary to use the same angle for all three regular functions as long as the two sine calls use the same angle).</p><br/><p class="rosetta__paragraph">For the inverse functions,  use the same number and convert its answer to radians and degrees.</p><br/><p class="rosetta__paragraph">If your language does not have trigonometric functions available or only has some available,  write functions to calculate the functions based on any  <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/List of trigonometric identities" title="wp: List of trigonometric identities">known approximation or identity</a>.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var
 radians = Math.PI / 4, // Pi / 4 is 45 degrees. All answers should be the same.
 degrees = 45.0,
 sine = Math.sin(radians),
 cosine = Math.cos(radians),
 tangent = Math.tan(radians),
 arcsin = Math.asin(sine),
 arccos = Math.acos(cosine),
 arctan = Math.atan(tangent);

// sine
window.alert(sine + " " + Math.sin(degrees * Math.PI / 180));
// cosine
window.alert(cosine + " " + Math.cos(degrees * Math.PI / 180));
// tangent
window.alert(tangent + " " + Math.tan(degrees * Math.PI / 180));
// arcsine
window.alert(arcsin + " " + (arcsin * 180 / Math.PI));
// arccosine
window.alert(arccos + " " + (arccos * 180 / Math.PI));
// arctangent
window.alert(arctan + " " + (arctan * 180 / Math.PI));

/// rawSolutions:
=={{header|JavaScript}}==

JavaScript's <tt>Math</tt> class contains all six functions and is automatically included as part of the language. The functions all accept radians only, so conversion is necessary when dealing with degrees. The <tt>Math</tt> class also has a <tt>PI</tt> constant for easy conversion. 

<lang javascript>var
 radians = Math.PI / 4, // Pi / 4 is 45 degrees. All answers should be the same.
 degrees = 45.0,
 sine = Math.sin(radians),
 cosine = Math.cos(radians),
 tangent = Math.tan(radians),
 arcsin = Math.asin(sine),
 arccos = Math.acos(cosine),
 arctan = Math.atan(tangent);

// sine
window.alert(sine + " " + Math.sin(degrees * Math.PI / 180));
// cosine
window.alert(cosine + " " + Math.cos(degrees * Math.PI / 180));
// tangent
window.alert(tangent + " " + Math.tan(degrees * Math.PI / 180));
// arcsine
window.alert(arcsin + " " + (arcsin * 180 / Math.PI));
// arccosine
window.alert(arccos + " " + (arccos * 180 / Math.PI));
// arctangent
window.alert(arctan + " " + (arctan * 180 / Math.PI));</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
