
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Arithmetic/Integer
/// type: rosetta-code

/// categories:
/// Arithmetic operations
/// Arithmetic
/// Simple

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Get two integers from the user,   and then (for those two integers), display their:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:::*  sum </span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:::*  difference </span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:::*  product </span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:::*  integer quotient</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:::*  remainder </span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:::*  exponentiation  (if the operator exists) </span></p><br/><br>
/// <p class="rosetta__paragraph">Don't include error handling.</p><br/><p class="rosetta__paragraph">For quotient, indicate how it rounds  (e.g. towards zero, towards negative infinity, etc.).</p><br/><p class="rosetta__paragraph">For remainder, indicate whether its sign matches the sign of the first operand or of the second operand, if they are different.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var a = parseInt(get_input("Enter an integer"), 10);
var b = parseInt(get_input("Enter an integer"), 10);

WScript.Echo("a = " + a);
WScript.Echo("b = " + b);
WScript.Echo("sum: a + b = "        + (a + b));
WScript.Echo("difference: a - b = " + (a - b));
WScript.Echo("product: a * b = "    + (a * b));
WScript.Echo("quotient: a / b = "   + (a / b | 0)); // "| 0" casts it to an integer
WScript.Echo("remainder: a % b = "  + (a % b));

function get_input(prompt) {
    output(prompt);
    try {
        return WScript.StdIn.readLine();
    } catch(e) {
        return readline();
    }
}
function output(prompt) {
    try {
        WScript.Echo(prompt);
    } catch(e) {
        print(prompt);
    }
}

/// rawSolutions:
=={{header|JavaScript}}==
{{works with|JScript}}
{{works with|SpiderMonkey}}
Note that the operators work the same in all versions of JavaScript; the requirement for specific implementations is in order to get user input.
<lang javascript>var a = parseInt(get_input("Enter an integer"), 10);
var b = parseInt(get_input("Enter an integer"), 10);

WScript.Echo("a = " + a);
WScript.Echo("b = " + b);
WScript.Echo("sum: a + b = "        + (a + b));
WScript.Echo("difference: a - b = " + (a - b));
WScript.Echo("product: a * b = "    + (a * b));
WScript.Echo("quotient: a / b = "   + (a / b | 0)); // "| 0" casts it to an integer
WScript.Echo("remainder: a % b = "  + (a % b));

function get_input(prompt) {
    output(prompt);
    try {
        return WScript.StdIn.readLine();
    } catch(e) {
        return readline();
    }
}
function output(prompt) {
    try {
        WScript.Echo(prompt);
    } catch(e) {
        print(prompt);
    }
}</lang>
{{out}}
<pre>Enter an integer
-147
Enter an integer
63
a = -147
b = 63
sum: a + b = -84
difference: a - b = -210
product: a * b = -9261
quotient: a / b = -2
remainder: a % b = -21</pre>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
/// id: 5a23c84252665b21eecc7d85
