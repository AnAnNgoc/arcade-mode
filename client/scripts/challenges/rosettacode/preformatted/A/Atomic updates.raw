
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Atomic updates
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Define a data type consisting of a fixed number of 'buckets', each containing a nonnegative integer value, which supports operations to:</p>
/// <ol class="rosetta__ordered-list"><li class="rosetta__list-item--ordered">get the current value of any bucket</li>
/// <li class="rosetta__list-item--ordered">remove a specified amount from one specified bucket and add it to another, preserving the total of all bucket values, and <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Clamping (graphics)" title="wp: Clamping (graphics)">clamping</a> the transferred amount to ensure the values remain non-negative</li></ol>
/// <p class="rosetta__paragraph">----</p><br/><p class="rosetta__paragraph">In order to exercise this data type, create one set of buckets, and start three concurrent tasks:</p>
/// <ol class="rosetta__ordered-list"><li class="rosetta__list-item--ordered">As often as possible, pick two buckets and make their values closer to equal.</li>
/// <li class="rosetta__list-item--ordered">As often as possible, pick two buckets and arbitrarily redistribute their values.</li>
/// <li class="rosetta__list-item--ordered">At whatever rate is convenient, display (by any means) the total value and, optionally, the individual values of each bucket.</li></ol>
/// <br>
/// <p class="rosetta__paragraph">The display task need not be explicit; use of e.g. a debugger or trace tool is acceptable provided it is simple to set up to provide the display.</p><br/><p class="rosetta__paragraph">----</p><br/><p class="rosetta__paragraph">This task is intended as an exercise in <span class="rosetta__text--italic">atomic</span> operations.  The sum of the bucket values must be preserved even if the two tasks attempt to perform transfers simultaneously, and a straightforward solution is to ensure that at any time, only one transfer is actually occurring â€” that the transfer operation is <span class="rosetta__text--italic">atomic</span>.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
