
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Literals/Integer
/// type: rosetta-code

/// categories:
/// Simple

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/><p class="rosetta__paragraph">Some programming languages have ways of expressing integer literals in bases other than the normal base ten.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Show how integer literals can be expressed in as many bases as your language allows.</p>
/// <br/><p class="rosetta__paragraph">Note:  this should <span class="rosetta__text--bold">not</span> involve the calling of any functions/methods, but should be interpreted by the compiler or interpreter as an integer written to a given base.</p><br/><p class="rosetta__paragraph">Also show any other ways of expressing literals, e.g. for different types of integers.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Related task:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"> <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Literals/Floating point" title="Literals/Floating point">Literals/Floating point</a></li></ul><br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
if ( 727 == 0x2d7 && 
     727 == 01327 )
    window.alert("true");

/// rawSolutions:
=={{header|JavaScript}}==

<lang javascript>if ( 727 == 0x2d7 && 
     727 == 01327 )
    window.alert("true");</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
