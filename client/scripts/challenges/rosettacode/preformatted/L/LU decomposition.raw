
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: LU decomposition
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <p class="rosetta__paragraph">Every square matrix $A$ can be decomposed into a product of a lower triangular matrix $L$ and a upper triangular matrix $U$,</p>
/// <p class="rosetta__paragraph">as described in <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/LU decomposition" title="wp: LU decomposition">LU decomposition</a>.</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$A = LU$</span></p><br/><p class="rosetta__paragraph">It is a modified form of Gaussian elimination.</p>
/// <p class="rosetta__paragraph">While the <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Cholesky decomposition" title="Cholesky decomposition">Cholesky decomposition</a> only works for symmetric,</p>
/// <p class="rosetta__paragraph">positive definite matrices, the more general LU decomposition</p>
/// <p class="rosetta__paragraph">works for any square matrix.</p><br/><p class="rosetta__paragraph">There are several algorithms for calculating L and U.</p>
/// <p class="rosetta__paragraph">To derive <span class="rosetta__text--italic">Crout's algorithm</span> for a 3x3 example,</p>
/// <p class="rosetta__paragraph">we have to solve the following system:</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$</span></p>
/// <p class="rosetta__paragraph">A =</p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">a_{11} & a_{12} & a_{13}\\</p>
/// <p class="rosetta__paragraph">a_{21} & a_{22} & a_{23}\\</p>
/// <p class="rosetta__paragraph">a_{31} & a_{32} & a_{33}\\</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">=</p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">l_{11} & 0 & 0 \\</p>
/// <p class="rosetta__paragraph">l_{21} & l_{22} & 0 \\</p>
/// <p class="rosetta__paragraph">l_{31} & l_{32} & l_{33}\\</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">u_{11} & u_{12} & u_{13} \\</p>
/// <p class="rosetta__paragraph">0 & u_{22} & u_{23} \\</p>
/// <p class="rosetta__paragraph">0 & 0 & u_{33}</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">= LU</p>
/// <p class="rosetta__paragraph">$</p><br/><p class="rosetta__paragraph">We now would have to solve 9 equations with 12 unknowns. To make the system uniquely solvable, usually the diagonal elements of $L$ are set to 1</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$l_{11}=1$</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">$l_{22}=1$</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">$l_{33}=1$</span></p><br/><p class="rosetta__paragraph">so we get a solvable system of 9 unknowns and 9 equations.</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$</span></p>
/// <p class="rosetta__paragraph">A =</p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">a_{11} & a_{12} & a_{13}\\</p>
/// <p class="rosetta__paragraph">a_{21} & a_{22} & a_{23}\\</p>
/// <p class="rosetta__paragraph">a_{31} & a_{32} & a_{33}\\</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">=</p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">1      & 0      & 0 \\</p>
/// <p class="rosetta__paragraph">l_{21} & 1      & 0 \\</p>
/// <p class="rosetta__paragraph">l_{31} & l_{32} & 1\\</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">u_{11} & u_{12} & u_{13} \\</p>
/// <p class="rosetta__paragraph">0 & u_{22} & u_{23} \\</p>
/// <p class="rosetta__paragraph">0 & 0 & u_{33}</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">=</p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">u_{11}        & u_{12}                    & u_{13}              \\</p>
/// <p class="rosetta__paragraph">u_{11}l_{21}  & u_{12}l_{21}+u_{22}       & u_{13}l_{21}+u_{23} \\</p>
/// <p class="rosetta__paragraph">u_{11}l_{31}  & u_{12}l_{31}+u_{22}l_{32} & u_{13}l_{31} + u_{23}l_{32}+u_{33}</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">= LU</p>
/// <p class="rosetta__paragraph">$</p><br/><p class="rosetta__paragraph">Solving for the other $l$ and $u$, we get the following equations:</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$u_{11}=a_{11}$</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">$u_{12}=a_{12}$</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">$u_{13}=a_{13}$</span></p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$u_{22}=a_{22} - u_{12}l_{21}$</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">$u_{23}=a_{23} - u_{13}l_{21}$</span></p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$u_{33}=a_{33} - (u_{13}l_{31} + u_{23}l_{32})$</span></p><br/><p class="rosetta__paragraph">and for $l$:</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$l_{21}=\frac{1}{u_{11}} a_{21}$</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">$l_{31}=\frac{1}{u_{11}} a_{31}$</span></p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$l_{32}=\frac{1}{u_{22}} (a_{32} - u_{12}l_{31})$</span></p><br/><p class="rosetta__paragraph">We see that there is a calculation pattern, which can be expressed as the following formulas, first for $U$</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$u_{ij} = a_{ij} - \sum_{k=1}^{i-1} u_{kj}l_{ik}$</span></p><br/><p class="rosetta__paragraph">and then for $L$</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$l_{ij} = \frac{1}{u_{jj}} (a_{ij} - \sum_{k=1}^{j-1} u_{kj}l_{ik})$</span></p><br/><p class="rosetta__paragraph">We see in the second formula that to get the $l_{ij}$ below the diagonal, we have to divide by the diagonal element (pivot) $u_{jj}$, so we get problems when $u_{jj}$ is either 0 or very small, which leads to numerical instability.</p><br/><p class="rosetta__paragraph">The solution to this problem is <span class="rosetta__text--italic">pivoting</span> $A$, which means rearranging the rows of $A$, prior to the $LU$ decomposition, in a way that the largest element of each column gets onto the diagonal of $A$. Rearranging the rows means to multiply $A$ by a permutation matrix $P$:</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$PA \Rightarrow A'$</span></p><br/><p class="rosetta__paragraph">Example:</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$</span></p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">0 & 1 \\</p>
/// <p class="rosetta__paragraph">1 & 0</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">1 & 4 \\</p>
/// <p class="rosetta__paragraph">2 & 3</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">\Rightarrow</p>
/// <p class="rosetta__paragraph">\begin{pmatrix}</p>
/// <p class="rosetta__paragraph">2 & 3 \\</p>
/// <p class="rosetta__paragraph">1 & 4</p>
/// <p class="rosetta__paragraph">\end{pmatrix}</p>
/// <p class="rosetta__paragraph">$</p><br/><p class="rosetta__paragraph">The decomposition algorithm is then applied on the rearranged matrix so that</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--indented">$PA = LU$</span></p>
/// <br/><p class="rosetta__paragraph"><span class="rosetta__text--bold">Task description</span></p><br/><p class="rosetta__paragraph">The task is to implement a routine which will take a square nxn matrix $A$ and return a lower triangular matrix $L$, a upper triangular matrix $U$ and a permutation matrix $P$,</p>
/// <p class="rosetta__paragraph">so that the above equation is fullfilled.</p>
/// <p class="rosetta__paragraph">You should then test it on the following two examples and include your output.</p><br/><p class="rosetta__paragraph">Example 1:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
/// A<br/>1   3   5
/// 2   4   7
/// 1   1   0<br/>L<br/>1.00000   0.00000   0.00000
/// 0.50000   1.00000   0.00000
/// 0.50000  -1.00000   1.00000<br/>U<br/>2.00000   4.00000   7.00000
/// 0.00000   1.00000   1.50000
/// 0.00000   0.00000  -2.00000<br/>P<br/>0   1   0
/// 1   0   0
/// 0   0   1
/// </pre></div><br/><p class="rosetta__paragraph">Example 2:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
/// A<br/>11    9   24    2
///  1    5    2    6
///  3   17   18    1
///  2    5    7    1<br/>L<br/>1.00000   0.00000   0.00000   0.00000
/// 0.27273   1.00000   0.00000   0.00000
/// 0.09091   0.28750   1.00000   0.00000
/// 0.18182   0.23125   0.00360   1.00000<br/>U<br/>11.00000    9.00000   24.00000    2.00000
///  0.00000   14.54545   11.45455    0.45455
///  0.00000    0.00000   -3.47500    5.68750
///  0.00000    0.00000    0.00000    0.51079<br/>P<br/>1   0   0   0
/// 0   0   1   0
/// 0   1   0   0
/// 0   0   0   1
/// </pre></div><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
/// id: 5a23c84252665b21eecc7efb
