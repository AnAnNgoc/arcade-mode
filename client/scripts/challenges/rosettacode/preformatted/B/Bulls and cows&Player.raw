
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Bulls and cows/Player
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Write a <span class="rosetta__text--italic">player</span> of the <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Bulls and cows" title="Bulls and cows">Bulls and Cows game</a>, rather than a scorer. The player should give intermediate answers that respect the scores to previous attempts.</p><br/><p class="rosetta__paragraph">One method is to generate a list of all possible numbers that could be the answer, then to prune the list by keeping only those numbers that would give an equivalent score to how your last guess was scored. Your next guess can be any number from the pruned list.<br></p>
/// <p class="rosetta__paragraph">Either you guess correctly or run out of numbers to guess, which indicates a problem with the scoring.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Related tasks:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"> <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Bulls and cows" title="Bulls and cows">Bulls and cows</a></li>
/// <li class="rosetta__list-item--unordered"> <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Guess the number" title="Guess the number">Guess the number</a></li>
/// <li class="rosetta__list-item--unordered"> <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Guess the number/With Feedback (Player)" title="Guess the number/With Feedback (Player)">Guess the number/With Feedback (Player)</a></li></ul><br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
