
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Sequence of non-squares
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Show that the following remarkable formula gives the <a class="rosetta__link--wiki" href="http://www.research.att.com/~njas/sequences/A000037" title="link: http://www.research.att.com/~njas/sequences/A000037">sequence</a> of non-square <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Natural_number" title="wp: Natural_number">natural numbers</a>:</p>
/// <p class="rosetta__paragraph">n + floor(1/2 + sqrt(n))</p>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">Print out the values for  <big> n </big>  in the range  <span class="rosetta__text--bold">1</span>  to  <span class="rosetta__text--bold">22</span></li>
/// <li class="rosetta__list-item--unordered">Show that no squares occur for  <big> n </big>  less than one million</li></ul><br/><p class="rosetta__paragraph">This sequence is also known as  <a class="rosetta__link--wiki" href="http://oeis.org/A000037" title="link: http://oeis.org/A000037">A000037</a>  in the <span class="rosetta__text--bold">OEIS</span> database.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var a = [];
for (var i = 1; i < 23; i++) a[i] = i + Math.floor(1/2 + Math.sqrt(i));
console.log(a);

for (i = 1; i < 1000000; i++) if (Number.isInteger(i + Math.floor(1/2 + Math.sqrt(i))) === false) {
    console.log("The ",i,"th element of the sequence is a square");
}

/// rawSolutions:
=={{header|JavaScript}}==

===ES5===

Iterative

<lang javascript>var a = [];
for (var i = 1; i < 23; i++) a[i] = i + Math.floor(1/2 + Math.sqrt(i));
console.log(a);

for (i = 1; i < 1000000; i++) if (Number.isInteger(i + Math.floor(1/2 + Math.sqrt(i))) === false) {
    console.log("The ",i,"th element of the sequence is a square");
}</lang>

===ES6===


By functional composition

<lang JavaScript>(() => {

    // nonSquare :: Int -> Int
    let nonSquare = n =>
        n + floor(1 / 2 + sqrt(n));



    // floor :: Num -> Int
    let floor = Math.floor,

        // sqrt :: Num -> Num
        sqrt = Math.sqrt,

        // isSquare :: Int -> Bool
        isSquare = n => {
            let root = sqrt(n);

            return root === floor(root);
        };


    // TEST
    return {
        first22: Array.from({
            length: 22
        }, (_, i) => nonSquare(i + 1)),

        firstMillionNotSquare: Array.from({
                length: 10E6
            }, (_, i) => nonSquare(i + 1))
            .filter(isSquare)
            .length === 0
    };

})();</lang>

{{Out}}
<lang JavaScript>{
    "first22":[2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15,
               17, 18, 19, 20, 21, 22, 23, 24, 26, 27], 
    "firstMillionNotSquare":true
}</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
