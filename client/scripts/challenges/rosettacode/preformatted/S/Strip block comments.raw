
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Strip block comments
/// type: rosetta-code

/// categories:
/// String manipulation

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/><p class="rosetta__paragraph">A block comment begins with a  <span class="rosetta__text--italic">beginning delimiter</span>  and ends with a  <span class="rosetta__text--italic">ending delimiter</span>,  including the delimiters.  These delimiters are often multi-character sequences.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Strip block comments from program text (of a programming language much like classic <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/C" title="C">C</a>).</p><br/><p class="rosetta__paragraph">Your demos should at least handle simple, non-nested and multi-line block comment delimiters.</p><br/><p class="rosetta__paragraph">The block comment delimiters are the two-character sequence:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::*   <big><big> <span class="rosetta__text--bold">/*</span> </big></big>   (beginning delimiter)</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::*   <big><big> <span class="rosetta__text--bold">*/</span> </big></big>   (ending delimiter)</span></p>
/// <br/><p class="rosetta__paragraph">Sample text for stripping:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
///   /**
///    * Some comments
///    * longer comments here that we can parse.
///    *
///    * Rahoo 
///    */
///    function subroutine() {
///     a = /* inline comment */ b + c ;
///    }
///    /*/ <-- tricky comments */<br/>   /**
///     * Another comment.
///     */
///     function something() {
///     }
/// </pre></div><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Extra credit:</dt></dl>
/// <p class="rosetta__paragraph">Ensure that the stripping code is not hard-coded to the particular delimiters described above, but instead allows the caller to specify them.  (If your language supports them,  <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Optional parameters" title="Optional parameters">optional parameters</a>  may be useful for this.)</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Related task:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"> <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Strip comments from a string" title="Strip comments from a string">Strip comments from a string</a></li></ul><br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
