
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Horner's rule for polynomial evaluation
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <p class="rosetta__paragraph">A fast scheme for evaluating a polynomial such as:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented"> $-19+7x-4x^2+6x^3\,$</span></p>
/// <p class="rosetta__paragraph">when</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented"> $x=3\;$.</span></p>
/// <p class="rosetta__paragraph">is to arrange the computation as follows:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented"> $((((0) x + 6) x + (-4)) x + 7) x + (-19)\;$</span></p>
/// <p class="rosetta__paragraph">And compute the result from the innermost brackets outwards as in this pseudocode:</p>
/// <p class="rosetta__paragraph">coefficients <span class="rosetta__text--bold">:=</span> [-19, 7, -4, 6] <span class="rosetta__text--italic"># list coefficients of all x^0..x^n in order</span></p>
/// <p class="rosetta__paragraph">x <span class="rosetta__text--bold">:=</span> 3</p>
/// <p class="rosetta__paragraph">accumulator <span class="rosetta__text--bold">:=</span> 0</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--bold">for</span> i <span class="rosetta__text--bold">in</span> <span class="rosetta__text--italic">length</span>(coefficients) <span class="rosetta__text--bold">downto</span> 1 <span class="rosetta__text--bold">do</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--italic"># Assumes 1-based indexing for arrays</span></p>
/// <p class="rosetta__paragraph">accumulator <span class="rosetta__text--bold">:=</span> ( accumulator * x ) + coefficients[i]</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--bold">done</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--italic"># accumulator now has the answer</span></p><br/><p class="rosetta__paragraph"><span class="rosetta__text--bold">Task Description</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">Create a routine that takes a list of coefficients of a polynomial in order of increasing powers of x; together with a value of x to compute its value at, and return the value of the polynomial at that value using <a class="rosetta__link--wiki" href="http://www.physics.utah.edu/~detar/lessons/c++/array/node1.html" title="link: http://www.physics.utah.edu/~detar/lessons/c++/array/node1.html">Horner's rule</a>.</span></p><br/><p class="rosetta__paragraph">Cf. <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Formal power series" title="Formal power series">Formal power series</a></p><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
function horner(coeffs, x) {
    return coeffs.reduceRight( function(acc, coeff) { return(acc * x + coeff) }, 0);
}
console.log(horner([-19,7,-4,6],3));  // ==> 128


/// rawSolutions:
=={{header|JavaScript}}==
{{works with|JavaScript|1.8}} which includes {{works with|Firefox|3}}

{{trans|Haskell}}
<lang javascript>function horner(coeffs, x) {
    return coeffs.reduceRight( function(acc, coeff) { return(acc * x + coeff) }, 0);
}
console.log(horner([-19,7,-4,6],3));  // ==> 128
</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
