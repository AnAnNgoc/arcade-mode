
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Hello world/Web server
/// type: rosetta-code

/// categories:
/// Web

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/>
/// <br/>
/// <br/>
/// <p class="rosetta__paragraph">The browser is the new <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/GUI" title="GUI">GUI</a> !</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Serve our standard text  <big><big><code>Goodbye, World!</code></big></big>  to  http://localhost:8080/  so that it can be viewed with a web browser.</p><br/><p class="rosetta__paragraph">The provided solution must start or implement a server that accepts multiple client connections and serves text as requested.</p><br/><p class="rosetta__paragraph">Note that starting a web browser or opening a new window with this URL</p>
/// <p class="rosetta__paragraph">is not part of the task.</p><br/><p class="rosetta__paragraph">Additionally, it is permissible to serve the provided page as a plain text file (there is no requirement to serve properly formatted <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/HTML" title="HTML">HTML</a> here).</p><br/><p class="rosetta__paragraph">The browser will generally do the right thing with simple text like this.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var http = require('http');

http.createServer(function (req, res) {
    res.writeHead(200, {'Content-Type': 'text/plain'});
    res.end('Goodbye, World!\n');
}).listen(8080, '127.0.0.1');

/// rawSolutions:
=={{header|JavaScript}}==

{{works with|Node.js}}

<lang javascript>var http = require('http');

http.createServer(function (req, res) {
    res.writeHead(200, {'Content-Type': 'text/plain'});
    res.end('Goodbye, World!\n');
}).listen(8080, '127.0.0.1');</lang>

It scales:

 $ curl http://localhost:8080/
 Goodbye, World!
 # httperf --port=8080 --num-conns=10000
 Request rate: 1813.1 req/s (0.6 ms/req)
 # httperf --port=8080 --num-conns=10000 --num-calls=10
 Request rate: 4869.1 req/s (0.2 ms/req)
 # httperf --port=8080 --num-conns=10000 --num-calls=100
 Request rate: 5689.0 req/s (0.2 ms/req)

with no errors.



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
