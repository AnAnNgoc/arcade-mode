
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Formatted numeric output
/// type: rosetta-code

/// categories:
/// Text processing
/// Simple

/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Express a number in decimal as a fixed-length string with leading zeros.</p>
/// <br/><p class="rosetta__paragraph">For example, the number  <span class="rosetta__text--bold">7.125</span>  could be expressed as  <span class="rosetta__text--bold">00007.125</span>.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var n = 123;
var str = ("00000" + n).slice(-5);
alert(str);

/// rawSolutions:
=={{header|JavaScript}}==
<lang javascript>var n = 123;
var str = ("00000" + n).slice(-5);
alert(str);</lang>

or, put in browser URL: javascript:n=123;alert(("00000"+n).slice(-5));

Also, a 60-line implementation of <code>sprintf</code> can be found [http://code.google.com/p/sprintf/ here].



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
/// id: 5a23c84252665b21eecc7e6b
