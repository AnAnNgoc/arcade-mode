
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: First-class functions/Use numbers analogously
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <p class="rosetta__paragraph">In <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/First-class functions" title="First-class functions">First-class functions</a>, a language is showing how its manipulation of functions is similar to its manipulation of other types.</p><br/><p class="rosetta__paragraph">This tasks aim is to compare and contrast a language's implementation of first class functions, with its normal handling of numbers.</p>
/// <br/><p class="rosetta__paragraph">Write a program to create an ordered collection of a mixture of literally typed and expressions producing a real number, together with another ordered collection of their multiplicative inverses. Try and use the following pseudo-code to generate the numbers for the ordered collections:</p>
/// <p class="rosetta__paragraph">x  = 2.0</p>
/// <p class="rosetta__paragraph">xi = 0.5</p>
/// <p class="rosetta__paragraph">y  = 4.0</p>
/// <p class="rosetta__paragraph">yi = 0.25</p>
/// <p class="rosetta__paragraph">z  = x + y</p>
/// <p class="rosetta__paragraph">zi = 1.0 / ( x + y )</p><br/><p class="rosetta__paragraph">Create a function <span class="rosetta__text--italic">multiplier</span>, that given two numbers as arguments returns a function that when called with one argument, returns the result of multiplying the two arguments to the call to multiplier that created it and the argument in the call:</p>
/// <p class="rosetta__paragraph">new_function = multiplier(n1,n2)</p>
/// <p class="rosetta__paragraph"># where new_function(m) returns the result of n1 * n2 * m</p><br/><p class="rosetta__paragraph">Applying the multiplier of a number and its inverse from the two ordered collections of numbers in pairs, show that the result in each case is one.<br></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--bold">Compare and contrast the resultant program with the corresponding entry in <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/First-class functions" title="First-class functions">First-class functions</a>.</span> They should be close.</p><br/><p class="rosetta__paragraph"><small>To paraphrase the task description: Do what was done before, but with numbers rather than functions</small></p><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
/// id: 5a23c84252665b21eecc7e60
