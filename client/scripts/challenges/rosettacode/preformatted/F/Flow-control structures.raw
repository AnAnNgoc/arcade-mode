
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Flow-control structures
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Document common flow-control structures.</p><br/><p class="rosetta__paragraph">One common example of a flow-control structure is the  <big><code> goto </code></big>  construct.</p><br/><p class="rosetta__paragraph">Note that  <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Conditional Structures" title="Conditional Structures">Conditional Structures</a>  and  <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Iteration" title="Iteration">Loop Structures</a>  have their own articles/categories.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Related tasks:</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"> <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Conditional Structures" title="Conditional Structures">Conditional Structures</a></li>
/// <li class="rosetta__list-item--unordered"> <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Iteration" title="Iteration">Loop Structures</a> </li></ul><br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
null

/// rawSolutions:
=={{header|JavaScript}}==
* <code>'''return'''</code> from a function ([http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/return])
* loop control with <code>'''break''' [label]</code> ([http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/break]) and <code>'''continue''' [label]</code> ([http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/continue])
* exceptions with <code>'''throw'''</code> ([http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/throw]) and <code>'''try ... catch ... finally ...'''</code>  ([http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/try...catch])



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
