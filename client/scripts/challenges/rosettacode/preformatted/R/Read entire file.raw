
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Read entire file
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <br/>
/// <br/>
/// <dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Load the entire contents of some text file as a single string variable.</p><br/><p class="rosetta__paragraph">If applicable, discuss: encoding selection, the possibility of memory-mapping.</p><br/><p class="rosetta__paragraph">Of course, in practice one should avoid reading an entire file at once</p>
/// <p class="rosetta__paragraph">if the file is large and the task can be accomplished incrementally instead</p>
/// <p class="rosetta__paragraph">(in which case check <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/File IO" title="File IO">File IO</a>);</p>
/// <p class="rosetta__paragraph">this is for those cases where having the entire file is actually what is wanted.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var fso=new ActiveXObject("Scripting.FileSystemObject");
var f=fso.OpenTextFile("c:\\myfile.txt",1);
var s=f.ReadAll();
f.Close();
try{alert(s)}catch(e){WScript.Echo(s)}

/// rawSolutions:
=={{header|JavaScript}}==
This works in IExplorer or a standalone js file. Note the similarity to the VBScript code.
<lang javascript>var fso=new ActiveXObject("Scripting.FileSystemObject");
var f=fso.OpenTextFile("c:\\myfile.txt",1);
var s=f.ReadAll();
f.Close();
try{alert(s)}catch(e){WScript.Echo(s)}</lang>

The following works in all browsers, including IE10.
<lang javascript>var file = document.getElementById("fileInput").files.item(0); //a file input element
if (file) {
	var reader = new FileReader();
	reader.readAsText(file, "UTF-8");
	reader.onload = loadedFile;
	reader.onerror = errorHandler;
}
function loadedFile(event) {
	var fileString = event.target.result;
	alert(fileString);
}
function errorHandler(event) {
	alert(event);
}
</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
