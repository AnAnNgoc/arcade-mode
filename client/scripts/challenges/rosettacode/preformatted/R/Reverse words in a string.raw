
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Reverse words in a string
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Reverse the order of all tokens in each of a number of strings and display the result;  the order of characters within a token should not be modified.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Example:</dt></dl>
/// <p class="rosetta__paragraph"><big><big><code>Hey you, Bub! </code></big></big>  would be shown reversed as:  <big><big><code> Bub! you, Hey </code></big></big></p>
/// <br/><p class="rosetta__paragraph">Tokens are any non-space characters separated by spaces (formally, white-space);  the visible punctuation form part of the word within which it is located and should not be modified.</p><br/><p class="rosetta__paragraph">You may assume that there are no significant non-visible characters in the input.  Multiple or superfluous spaces may be compressed into a single space.</p><br/><p class="rosetta__paragraph">Some strings have no tokens, so an empty string  (or one just containing spaces)  would be the result.</p><br/><p class="rosetta__paragraph"><span class="rosetta__text--bold">Display</span> the strings in order  (1<sup>st</sup>, 2<sup>nd</sup>, 3<sup>rd</sup>, ···),  and one string per line.</p><br/><p class="rosetta__paragraph">(You can consider the ten strings as ten lines, and the tokens as words.)</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Input data</dt></dl>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
///              (ten lines within the box)
///  line
///      ╔════════════════════════════════════════╗
///    1 ║  ---------- Ice and Fire ------------  ║
///    2 ║                                        ║  ◄─── a blank line here.
///    3 ║  fire, in end will world the say Some  ║
///    4 ║  ice. in say Some                      ║
///    5 ║  desire of tasted I've what From       ║
///    6 ║  fire. favor who those with hold I     ║
///    7 ║                                        ║  ◄─── a blank line here.
///    8 ║  ... elided paragraph last ...         ║
///    9 ║                                        ║  ◄─── a blank line here.
///   10 ║  Frost Robert -----------------------  ║
///      ╚════════════════════════════════════════╝
/// </pre></div><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Cf.</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"><a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/Phrase reversals" title="Phrase reversals">Phrase reversals</a></li></ul><br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
var strReversed =
"---------- Ice and Fire ------------\n\
\n\
fire, in end will world the say Some\n\
ice. in say Some\n\
desire of tasted I've what From\n\
fire. favor who those with hold I\n\
\n\
... elided paragraph last ...\n\
\n\
Frost Robert -----------------------";
    
function reverseString(s) {
  return s.split('\n').map(
    function (line) {
      return line.split(/\s/).reverse().join(' ');
    }
  ).join('\n');
}
  
console.log(
  reverseString(strReversed)
);

/// rawSolutions:
=={{header|JavaScript}}==
<lang javascript>var strReversed =
"---------- Ice and Fire ------------\n\
\n\
fire, in end will world the say Some\n\
ice. in say Some\n\
desire of tasted I've what From\n\
fire. favor who those with hold I\n\
\n\
... elided paragraph last ...\n\
\n\
Frost Robert -----------------------";
    
function reverseString(s) {
  return s.split('\n').map(
    function (line) {
      return line.split(/\s/).reverse().join(' ');
    }
  ).join('\n');
}
  
console.log(
  reverseString(strReversed)
);</lang>

Output:
<pre>------------ Fire and Ice ----------

Some say the world will end in fire,
Some say in ice.
From what I've tasted of desire
I hold with those who favor fire.

... last paragraph elided ...

----------------------- Robert Frost</pre>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
