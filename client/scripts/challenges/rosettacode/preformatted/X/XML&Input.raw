
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: XML/Input
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><p class="rosetta__paragraph">Given the following XML fragment, extract the list of <span class="rosetta__text--italic">student names</span> using whatever means desired. If the only viable method is to use XPath, refer the reader to the task <a class="rosetta__link--rosetta" href="http://rosettacode.org/wiki/XML and XPath" title="XML and XPath">XML and XPath</a>.</p><br/><p class="rosetta__paragraph"><lang xml><Students></p>
/// <p class="rosetta__paragraph"><Student Name="April" Gender="F" DateOfBirth="1989-01-02" /></p>
/// <p class="rosetta__paragraph"><Student Name="Bob" Gender="M"  DateOfBirth="1990-03-04" /></p>
/// <p class="rosetta__paragraph"><Student Name="Chad" Gender="M"  DateOfBirth="1991-05-06" /></p>
/// <p class="rosetta__paragraph"><Student Name="Dave" Gender="M"  DateOfBirth="1992-07-08"></p>
/// <p class="rosetta__paragraph"><Pet Type="dog" Name="Rover" /></p>
/// <p class="rosetta__paragraph"></Student></p>
/// <p class="rosetta__paragraph"><Student DateOfBirth="1993-09-10" Gender="F" Name="&#x00C9;mily" /></p>
/// </Students></lang><br/><p class="rosetta__paragraph">Expected Output</p><br/><p class="rosetta__paragraph">April</p>
/// <p class="rosetta__paragraph">Bob</p>
/// <p class="rosetta__paragraph">Chad</p>
/// <p class="rosetta__paragraph">Dave</p>
/// <p class="rosetta__paragraph">Ã‰mily</p><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:

var xmlstr = '<Students>' + 
  '<Student Name="April" Gender="F" DateOfBirth="1989-01-02" />' +
  '<Student Name="Bob" Gender="M"  DateOfBirth="1990-03-04" />' +
  '<Student Name="Chad" Gender="M"  DateOfBirth="1991-05-06" />' +
  '<Student Name="Dave" Gender="M"  DateOfBirth="1992-07-08">' +
    '<Pet Type="dog" Name="Rover" />' +
  '</Student>' +
  '<Student DateOfBirth="1993-09-10" Gender="F" Name="&#x00C9;mily" />' +
'</Students>';

if (window.DOMParser)
  {
  parser=new DOMParser();
  xmlDoc=parser.parseFromString(xmlstr,"text/xml");
  }
else // Internet Explorer
  {
  xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
  xmlDoc.async=false;
  xmlDoc.loadXML(xmlstr); 
  }

var students=xmlDoc.getElementsByTagName('Student');
for(var e=0; e<=students.length-1; e++) {
  console.log(students[e].attributes.Name.value);
}


/// rawSolutions:
=={{header|JavaScript}}==

=== Browser version ===
This version tested against Chrome 37, Firefox 32, and IE 11:
<lang JavaScript>
var xmlstr = '<Students>' + 
  '<Student Name="April" Gender="F" DateOfBirth="1989-01-02" />' +
  '<Student Name="Bob" Gender="M"  DateOfBirth="1990-03-04" />' +
  '<Student Name="Chad" Gender="M"  DateOfBirth="1991-05-06" />' +
  '<Student Name="Dave" Gender="M"  DateOfBirth="1992-07-08">' +
    '<Pet Type="dog" Name="Rover" />' +
  '</Student>' +
  '<Student DateOfBirth="1993-09-10" Gender="F" Name="&#x00C9;mily" />' +
'</Students>';

if (window.DOMParser)
  {
  parser=new DOMParser();
  xmlDoc=parser.parseFromString(xmlstr,"text/xml");
  }
else // Internet Explorer
  {
  xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
  xmlDoc.async=false;
  xmlDoc.loadXML(xmlstr); 
  }

var students=xmlDoc.getElementsByTagName('Student');
for(var e=0; e<=students.length-1; e++) {
  console.log(students[e].attributes.Name.value);
}
</lang>
{{works with|Mozilla Firefox|32}}

=== Node.js version ===
<lang JavaScript>
var parseString = require('xml2js').parseString;
var xmlstr = '<Students>' +
  '<Student Name="April" Gender="F" DateOfBirth="1989-01-02" />' +
  '<Student Name="Bob" Gender="M"  DateOfBirth="1990-03-04" />' +
  '<Student Name="Chad" Gender="M"  DateOfBirth="1991-05-06" />' +
  '<Student Name="Dave" Gender="M"  DateOfBirth="1992-07-08">' +
    '<Pet Type="dog" Name="Rover" />' +
  '</Student>' +
  '<Student DateOfBirth="1993-09-10" Gender="F" Name="&#x00C9;mily" />' +
'</Students>';

parseString(xmlstr, function (err, result) {
   if (!err) {
      result.Students.Student.forEach( function(student) {
         console.log(student.$.Name);
      } );
   }
});
</lang>

=== E4X version ===
Alternatively, use the E4X featureset (currently only in Firefox):
<lang JavaScript>
var xmlstr = '<Students>' + 
  '<Student Name="April" Gender="F" DateOfBirth="1989-01-02" />' +
  '<Student Name="Bob" Gender="M"  DateOfBirth="1990-03-04" />' +
  '<Student Name="Chad" Gender="M"  DateOfBirth="1991-05-06" />' +
  '<Student Name="Dave" Gender="M"  DateOfBirth="1992-07-08">' +
    '<Pet Type="dog" Name="Rover" />' +
  '</Student>' +
  '<Student DateOfBirth="1993-09-10" Gender="F" Name="&#x00C9;mily" />' +
'</Students>';
var xml = XML(xmlstr);
var list = xml.Student.@Name;
var output = '';
for (var i = 0; i < list.length(); i++) {
  if (i > 0) {
    output += ', ';
  }
  output += list[i];
}

alert(output);
</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
