
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Menu
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Given a prompt and a list containing a number of strings of which one is to be selected, create a function that:</p><br/><ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">prints a textual menu formatted as an index value followed by its corresponding string for each item in the list;</li>
/// <li class="rosetta__list-item--unordered">prompts the user to enter a number;</li>
/// <li class="rosetta__list-item--unordered">returns the string corresponding to the selected index number.</li></ul>
/// <br>
/// <p class="rosetta__paragraph">The function should reject input that is not an integer or is out of range by redisplaying the whole menu before asking again for a number. The function should return an empty string if called with an empty list.</p><br/><p class="rosetta__paragraph">For test purposes use the following four phrases in a list:</p>
/// <p class="rosetta__paragraph">fee fie</p>
/// <p class="rosetta__paragraph">huff and puff</p>
/// <p class="rosetta__paragraph">mirror mirror</p>
/// <p class="rosetta__paragraph">tick tock</p><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Note:</dt></dl>
/// <p class="rosetta__paragraph">This task is fashioned after the action of the <a class="rosetta__link--wiki" href="http://www.softpanorama.org/Scripting/Shellorama/Control_structures/select_statements.shtml" title="link: http://www.softpanorama.org/Scripting/Shellorama/Control_structures/select_statements.shtml">Bash select statement</a>.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:
function select(question, choices) {
    var prompt = "";
    for (var i in choices) 
        prompt += i + ". " + choices[i] + "\n";
    prompt += question;

    var input;
    while (1) {
        WScript.Echo(prompt);
        input = parseInt( WScript.StdIn.readLine() );
        if (0 <= input && input < choices.length)
            break;
        WScript.Echo("\nTry again.");
    }
    return input;
}

var choices = ['fee fie', 'huff and puff', 'mirror mirror', 'tick tock'];
var choice = select("Which is from the three pigs?", choices);
WScript.Echo("you selected: " + choice + " -> " + choices[choice]);

/// rawSolutions:
=={{header|JavaScript}}==
{{works with|JScript}} for the I/O.
<lang javascript>function select(question, choices) {
    var prompt = "";
    for (var i in choices) 
        prompt += i + ". " + choices[i] + "\n";
    prompt += question;

    var input;
    while (1) {
        WScript.Echo(prompt);
        input = parseInt( WScript.StdIn.readLine() );
        if (0 <= input && input < choices.length)
            break;
        WScript.Echo("\nTry again.");
    }
    return input;
}

var choices = ['fee fie', 'huff and puff', 'mirror mirror', 'tick tock'];
var choice = select("Which is from the three pigs?", choices);
WScript.Echo("you selected: " + choice + " -> " + choices[choice]);</lang>



/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
/// id: 5a23c84252665b21eecc7f18
