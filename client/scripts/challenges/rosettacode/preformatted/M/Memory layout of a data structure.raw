
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Memory layout of a data structure
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <p class="rosetta__paragraph">It is often useful to control the memory layout of fields in a data structure to match an interface control definition, or to interface with hardware. Define a data structure matching the RS-232 Plug Definition. Use the 9-pin definition for brevity.</p>
/// <p class="rosetta__paragraph">Pin Settings for Plug</p>
/// <p class="rosetta__paragraph">(Reverse order for socket.)</p>
/// <p class="rosetta__paragraph">__________________________________________</p>
/// <p class="rosetta__paragraph">1  2  3  4  5  6  7  8  9  10 11 12 13</p>
/// <p class="rosetta__paragraph">14 15 16 17 18 19 20 21 22 23 24 25</p>
/// <p class="rosetta__paragraph">_________________</p>
/// <p class="rosetta__paragraph">1  2  3  4  5</p>
/// <p class="rosetta__paragraph">6  7  8  9</p>
/// <p class="rosetta__paragraph">25 pin                        9 pin</p>
/// <p class="rosetta__paragraph">1 - PG   Protective ground</p>
/// <p class="rosetta__paragraph">2 - TD   Transmitted data     3</p>
/// <p class="rosetta__paragraph">3 - RD   Received data        2</p>
/// <p class="rosetta__paragraph">4 - RTS  Request to send      7</p>
/// <p class="rosetta__paragraph">5 - CTS  Clear to send        8</p>
/// <p class="rosetta__paragraph">6 - DSR  Data set ready       6</p>
/// <p class="rosetta__paragraph">7 - SG   Signal ground        5</p>
/// <p class="rosetta__paragraph">8 - CD   Carrier detect       1</p>
/// <p class="rosetta__paragraph">9 - + voltage (testing)</p>
/// <p class="rosetta__paragraph">10 - - voltage (testing)</p>
/// <p class="rosetta__paragraph">11 -</p>
/// <p class="rosetta__paragraph">12 - SCD  Secondary CD</p>
/// <p class="rosetta__paragraph">13 - SCS  Secondary CTS</p>
/// <p class="rosetta__paragraph">14 - STD  Secondary TD</p>
/// <p class="rosetta__paragraph">15 - TC   Transmit clock</p>
/// <p class="rosetta__paragraph">16 - SRD  Secondary RD</p>
/// <p class="rosetta__paragraph">17 - RC   Receiver clock</p>
/// <p class="rosetta__paragraph">18 -</p>
/// <p class="rosetta__paragraph">19 - SRS  Secondary RTS</p>
/// <p class="rosetta__paragraph">20 - DTR  Data terminal ready      4</p>
/// <p class="rosetta__paragraph">21 - SQD  Signal quality detector</p>
/// <p class="rosetta__paragraph">22 - RI   Ring indicator           9</p>
/// <p class="rosetta__paragraph">23 - DRS  Data rate select</p>
/// <p class="rosetta__paragraph">24 - XTC  External clock</p>
/// <p class="rosetta__paragraph">25 -</p><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
