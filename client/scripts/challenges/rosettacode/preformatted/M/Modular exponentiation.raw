
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Modular exponentiation
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta">
/// <p class="rosetta__paragraph">Find the last 40 decimal digits of $a^b$, where</p><br/><ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered">$a = 2988348162058574136915891421498819466320163312926952423791023078876139$</li>
/// <li class="rosetta__list-item--unordered">$b = 2351399303373464486466122544523690094744975233415544072992656881240319$</li></ul>
/// <br>
/// <p class="rosetta__paragraph">A computer is too slow to find the entire value of $a^b$.</p><br/><p class="rosetta__paragraph">Instead, the program must use a fast algorithm for <a class="rosetta__link--wiki" href="https://en.wikipedia.org/wiki/Modular exponentiation" title="wp: Modular exponentiation">modular exponentiation</a>: $a^b \mod m$.</p><br/><p class="rosetta__paragraph">The algorithm must work for any integers $a, b, m$ <br>where $b \ge 0$ and $m > 0$.</p>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
