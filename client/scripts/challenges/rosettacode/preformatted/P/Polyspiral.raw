
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Polyspiral
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><p class="rosetta__paragraph">A <a class="rosetta__link--wiki" href="http://www.otherwise.com/Jurtle/screenshots_win/assets/DisplayWindow_Full.png" title="link: http://www.otherwise.com/Jurtle/screenshots_win/assets/DisplayWindow_Full.png">Polyspiral</a> is a spiral made of multiple line segments, whereby each segment is larger (or smaller) than the previous one by a given amount. Each segment also changes direction at a given angle.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task</dt></dl>
/// <p class="rosetta__paragraph">Animate a series of polyspirals, by drawing a complete spiral then incrementing the angle, and (after clearing the background) drawing the next, and so on. Every spiral will be a frame of the animation. The animation may stop as it goes full circle or continue indefinitely. The given input values may be varied.</p><br/><p class="rosetta__paragraph">If animation is not practical in your programming environment, you may show a single frame instead.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Pseudo code</dt></dl>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
///     set incr to 0.0<br/>    // animation loop
///     WHILE true <br/>        incr = (incr + 0.05) MOD 360
///         x = width / 2
///         y = height / 2
///         length = 5
///         angle = incr<br/>        // spiral loop
///         FOR 1 TO 150
///             drawline
///             change direction by angle
///             length = length + 3
///             angle = (angle + incr) MOD 360
///         ENDFOR

/// </pre></div><br/><br><br>
/// </div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
