
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Pathological floating point problems
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><p class="rosetta__paragraph">Most programmers are familiar with the inexactness of floating point calculations in a binary processor.</p><br/><p class="rosetta__paragraph">The classic example being:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
/// 0.1 + 0.2 =  0.30000000000000004
/// </pre></div><br/><p class="rosetta__paragraph">In many situations the amount of error in such calculations is very small and can be overlooked or eliminated with rounding.</p><br/><p class="rosetta__paragraph">There are pathological problems however, where seemingly simple, straight-forward calculations are extremely sensitive to even tiny amounts of imprecision.</p><br/><p class="rosetta__paragraph">This task's purpose is to show how your language deals with such classes of problems.</p>
/// <br/><p class="rosetta__paragraph"><span class="rosetta__text--bold">A sequence that seems to converge to a wrong limit.</span></p><br/><p class="rosetta__paragraph">Consider the sequence:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::::: <big><big>  v<sub>1</sub> =  2                                                                     </big></big></span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::::: <big><big>  v<sub>2</sub> = -4                                                                     </big></big></span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::::: <big><big>  v<sub>n</sub> = 111  -  1130  /  v<sub>n-1</sub>  +  3000 /  (v<sub>n-1</sub> * v<sub>n-2</sub>)    </big></big></span></p>
/// <br/><p class="rosetta__paragraph">As  <span class="rosetta__text--bold">n</span>  grows larger, the series should converge to  <span class="rosetta__text--bold">6</span>  but small amounts of error will cause it to approach  <span class="rosetta__text--bold">100</span>.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task 1:</dt></dl>
/// <p class="rosetta__paragraph">Display the values of the sequence where  n =  3, 4, 5, 6, 7, 8, 20, 30, 50 & 100  to at least <span class="rosetta__text--bold">16</span> decimal places.</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
///     n = 3     18.5
///     n = 4      9.378378
///     n = 5      7.801153
///     n = 6      7.154414
///     n = 7      6.806785
///     n = 8      6.5926328
///     n = 20     6.0435521101892689
///     n = 30     6.006786093031205758530554
///     n = 50     6.0001758466271871889456140207471954695237
///     n = 100    6.000000019319477929104086803403585715024350675436952458072592750856521767230266
/// </pre></div>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task 2:</dt></dl>
/// <p class="rosetta__paragraph"><span class="rosetta__text--bold">The Chaotic Bank Society</span>  is offering a new investment account to their customers.</p><br/><p class="rosetta__paragraph">You first deposit  $e - 1  where  e  is  2.7182818...  the base of natural logarithms.</p><br/><p class="rosetta__paragraph">After each year, your account balance will be multiplied by the number of years that have passed, and $1 in service charges will be removed.</p><br/><p class="rosetta__paragraph">So ...</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:* after 1 year, your balance will be multiplied by 1 and $1 will be removed for service charges.</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:* after 2 years your balance will be doubled and $1 removed.</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:* after 3 years your balance will be tripled and $1 removed.</span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:* <b> ... </b></span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">:* after 10 years, multiplied by 10 and $1 removed,  and so on. </span></p>
/// <br/><p class="rosetta__paragraph">What will your balance be after  25  years?</p>
/// <p class="rosetta__paragraph">Starting balance: $<i>e</i>-1</p>
/// <p class="rosetta__paragraph">Balance = (Balance * year) - 1 for 25 years</p>
/// <p class="rosetta__paragraph">Balance after 25 years: $0.0399387296732302</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task 3, extra credit:</dt></dl>
/// <p class="rosetta__paragraph"><span class="rosetta__text--bold">Siegfried Rump's example.</span>  Consider the following function, designed by Siegfried Rump in 1988.</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::::: <big><big>  f(a,b) = 333.75b<sup>6</sup> + a<sup>2</sup>( 11a<sup>2</sup>b<sup>2</sup> - b<sup>6</sup> - 121b<sup>4</sup> - 2 ) + 5.5b<sup>8</sup> + a/(2b)          </big></big></span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::::: <big> compute  <big> f(a,b) </big>  where  <big> a=77617.0 </big>  and  <big> b=33096.0  </big></big></span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::::: <big><big>  f(77617.0, 33096.0)  =  -0.827396059946821          </big></big></span></p>
/// <br/><p class="rosetta__paragraph">Demonstrate how to solve at least one of the first two problems, or both, and the third if you're feeling particularly jaunty.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">See also;</dt></dl>
/// <ul class="rosetta__unordered-list"><li class="rosetta__list-item--unordered"> <a class="rosetta__link--wiki" href="https://perso.ens-lyon.fr/jean-michel.muller/chapitre1.pdf" title="link: https://perso.ens-lyon.fr/jean-michel.muller/chapitre1.pdf">Floating-Point Arithmetic</a>  Section 1.3.2 Difficult problems.</li></ul><br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
