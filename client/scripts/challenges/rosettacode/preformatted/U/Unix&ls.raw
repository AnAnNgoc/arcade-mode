
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Unix/ls
/// type: rosetta-code

/// categories:


/// difficulty: ?

/// benchmark:
replaceWithActualFunctionHere;

/// description:
/// <div class="rosetta"><br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Task:</dt></dl>
/// <p class="rosetta__paragraph">Write a program that will list everything in the current folder,  similar to:</p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::*  the Unix utility  “<tt>ls</tt>”  [http://man7.org/linux/man-pages/man1/ls.1.html]    or </span></p>
/// <p class="rosetta__paragraph"><span class="rosetta__text--indented">::*  the Windows terminal command  “<tt>DIR</tt>” </span></p><br/><br>
/// <p class="rosetta__paragraph">The output must be sorted, but printing extended details and producing multi-column output is not required.</p>
/// <br/><dl class="rosetta__description-list"><dt class="rosetta__description-title">Example output</dt></dl>
/// <p class="rosetta__paragraph">For the list of paths:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
/// /foo/bar
/// /foo/bar/1
/// /foo/bar/2
/// /foo/bar/a
/// /foo/bar/b
/// </pre></div>
/// <br/><p class="rosetta__paragraph">When the program is executed in  `/foo`,  it should print:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
/// bar
/// </pre></div>
/// <p class="rosetta__paragraph">and when the program is executed in  `/foo/bar`,  it should print:</p>
/// <div class="rosetta__pre-wrap"><pre class="rosetta__pre">
/// 1
/// 2
/// a
/// b
/// </pre></div>
/// <br><br><br/></div>

/// challengeSeed:
function replaceMe (foo) {
  // Good luck!
  return true;
}

/// solutions:


/// rawSolutions:
null

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof replaceMe === 'function', 'message: <code>replaceMe</code> is a function.');
/// id: 5a23c84352665b21eecc807b
