
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 511: Sequences with nice divisibility properties
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Let Seq(n,k) be the number of positive-integer sequences {ai}1≤i≤n of length n such that:</p>
/// <p class="euler__paragraph">n is divisible by ai for 1 ≤ i ≤ n, and</p>
/// <p class="euler__paragraph">  n + a1 + a2 + ... + an is divisible by k.</p>
/// <p class="euler__paragraph">Examples:</p>
/// <p class="euler__paragraph">Seq(3,4) = 4, and the 4 sequences are:</p>
/// <p class="euler__paragraph">{1, 1, 3}</p>
/// <p class="euler__paragraph">{1, 3, 1}</p>
/// <p class="euler__paragraph">{3, 1, 1}</p>
/// <p class="euler__paragraph">{3, 3, 3}</p>
/// <p class="euler__paragraph">Seq(4,11) = 8, and the 8 sequences are:</p>
/// <p class="euler__paragraph">{1, 1, 1, 4}</p>
/// <p class="euler__paragraph">{1, 1, 4, 1}</p>
/// <p class="euler__paragraph">{1, 4, 1, 1}</p>
/// <p class="euler__paragraph">{4, 1, 1, 1}</p>
/// <p class="euler__paragraph">{2, 2, 2, 1}</p>
/// <p class="euler__paragraph">{2, 2, 1, 2}</p>
/// <p class="euler__paragraph">{2, 1, 2, 2}</p>
/// <p class="euler__paragraph">{1, 2, 2, 2}</p>
/// <p class="euler__paragraph">The last nine digits of Seq(1111,24) are 840643584.</p>
/// <p class="euler__paragraph">Find the last nine digits of Seq(1234567898765,4321).</p></div>

/// challengeSeed:
function euler511() {
  // Good luck!
  return true;
}

euler511();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler511 === 'function', 'message: <code>euler511()</code> is a function.');
assert.strictEqual(euler511(), 935247012, 'message: <code>euler511()</code> should return 935247012.');
/// id: 5900f56b1000cf542c51007e
