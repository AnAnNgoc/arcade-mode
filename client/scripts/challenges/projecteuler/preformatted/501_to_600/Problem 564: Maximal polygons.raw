
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 564: Maximal polygons
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">A line segment of length $2n-3$ is randomly split into $n$ segments of integer length ($n \ge 3$). In the sequence given by this split, the segments are then used as consecutive sides of a convex $n$-polygon, formed in such a way that its area is maximal.  All of the $\binom{2n-4} {n-1}$ possibilities for splitting up the initial line segment occur with the same probability. </p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let $E(n)$ be the expected value of the area that is obtained by this procedure.</p>
/// <p class="euler__paragraph">For example, for $n=3$ the only possible split of the line segment of length $3$ results in three line segments with length $1$, that form an equilateral triangle with an area of $\frac 1 4 \sqrt{3}$. Therefore $E(3)=0.433013$, rounded to $6$ decimal places.</p>
/// <p class="euler__paragraph">For $n=4$ you can find $4$ different possible splits, each of which is composed of three line segments with length $1$ and one line segment with length $2$. All of these splits lead to the same maximal quadrilateral with an area of $\frac 3 4 \sqrt{3}$, thus $E(4)=1.299038$, rounded to $6$ decimal places.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let $S(k)=\displaystyle \sum_{n=3}^k E(n)$.</p>
/// <p class="euler__paragraph">For example, $S(3)=0.433013$, $S(4)=1.732051$, $S(5)=4.604767$ and $S(10)=66.955511$, rounded to $6$ decimal places each.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find $S(50)$, rounded to $6$ decimal places.</p></div>

/// challengeSeed:
function euler564() {
  // Good luck!
  return true;
}

euler564();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler564 === 'function', 'message: <code>euler564()</code> is a function.');
assert.strictEqual(euler564(), TODO: MISSING ANSWER, 'message: <code>euler564()</code> should return TODO: MISSING ANSWER.');
/// id: 5900fef658d9425c70af4f86
