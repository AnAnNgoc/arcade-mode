
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 577: Counting hexagons
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">An equilateral triangle with integer side length $n \ge 3$ is divided into $n^2$ equilateral triangles with side length 1 as shown in the diagram below.</p>
/// <p class="euler__paragraph">The vertices of these triangles constitute a triangular lattice with $\frac{(n+1)(n+2)} 2$ lattice points.</p>
/// <p class="euler__paragraph">Let $H(n)$ be the number of all regular hexagons that can be found by connecting 6 of these points. </p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">For example, $H(3)=1$, $H(6)=12$ and $H(20)=966$.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find $\displaystyle \sum_{n=3}^{12345} H(n)$.</p></div>

/// challengeSeed:
function euler577() {
  // Good luck!
  return true;
}

euler577();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler577 === 'function', 'message: <code>euler577()</code> is a function.');
assert.strictEqual(euler577(), TODO: MISSING ANSWER, 'message: <code>euler577()</code> should return TODO: MISSING ANSWER.');
/// id: 5900ff0358d9425c70af4f93
