
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 560: Coprime Nim
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Coprime Nim is just like ordinary normal play Nim, but the players may only remove a number of stones from a pile  that is coprime with the current size of the pile. Two players remove stones in turn. The player who removes the last stone wins.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let L(n, k) be the number of losing starting positions for the first player, assuming perfect play, when the game is played with k piles, each having between 1 and n - 1 stones inclusively.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">For example, L(5, 2) = 6 since the losing initial positions are (1, 1), (2, 2), (2, 4), (3, 3), (4, 2) and (4, 4).</p>
/// <p class="euler__paragraph">You are also given L(10, 5) = 9964, L(10, 10) = 472400303, L(103, 103) mod 1 000 000 007 = 954021836.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find L(107, 107) mod 1 000 000 007</p></div>

/// challengeSeed:
function euler560() {
  // Good luck!
  return true;
}

euler560();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler560 === 'function', 'message: <code>euler560()</code> is a function.');
assert.strictEqual(euler560(), TODO: MISSING ANSWER, 'message: <code>euler560()</code> should return TODO: MISSING ANSWER.');
/// id: 5900fef258d9425c70af4f82
