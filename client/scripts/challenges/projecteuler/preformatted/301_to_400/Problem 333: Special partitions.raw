
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 333: Special partitions
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">All positive integers can be partitioned in such a way that each and every term of the partition can be expressed as 2ix3j, where i,j â‰¥ 0.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let's consider only those such partitions where none of the terms can divide any of the other terms.</p>
/// <p class="euler__paragraph">For example, the partition of 17 = 2 + 6 + 9 = (21x30 + 21x31 + 20x32) would not be valid since 2 can divide 6. Neither would the partition 17 = 16 + 1 = (24x30 + 20x30) since 1 can divide 16. The only valid partition of 17 would be 8 + 9 = (23x30 + 20x32).</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Many integers have more than one valid partition, the first being 11 having the following two partitions.</p>
/// <p class="euler__paragraph">11 = 2 + 9 = (21x30 + 20x32)</p>
/// <p class="euler__paragraph">11 = 8 + 3 = (23x30 + 20x31)</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let's define P(n) as the number of valid partitions of n. For example, P(11) = 2.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let's consider only the prime integers q which would have a single valid partition such as P(17).</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">The sum of the primes q <100 such that P(q)=1 equals 233.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find the sum of the primes q <1000000 such that P(q)=1.</p></div>

/// challengeSeed:
function euler333() {
  // Good luck!
  return true;
}

euler333();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler333 === 'function', 'message: <code>euler333()</code> is a function.');
assert.strictEqual(euler333(), 3053105, 'message: <code>euler333()</code> should return 3053105.');
/// id: 5900f4b91000cf542c50ffcc
