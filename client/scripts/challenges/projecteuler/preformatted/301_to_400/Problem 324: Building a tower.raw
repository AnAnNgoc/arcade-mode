
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 324: Building a tower
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Let f(n) represent the number of ways one can fill a 3×3×n tower with blocks of 2×1×1. You're allowed to rotate the blocks in any way you like; however, rotations, reflections etc of the tower itself are counted as distinct.</p>
/// <p class="euler__paragraph">For example (with q = 100000007) :f(2) = 229,f(4) = 117805,f(10) mod q = 96149360,f(103) mod q = 24806056,f(106) mod q = 30808124.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find f(1010000) mod 100000007.</p></div>

/// challengeSeed:
function euler324() {
  // Good luck!
  return true;
}

euler324();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler324 === 'function', 'message: <code>euler324()</code> is a function.');
assert.strictEqual(euler324(), 96972774, 'message: <code>euler324()</code> should return 96972774.');
/// id: 5900f4b11000cf542c50ffc3
