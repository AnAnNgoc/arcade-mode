
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 331: Cross flips
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">N×N disks are placed on a square game board. Each disk has a black side and white side.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">At each turn, you may choose a disk and flip all the disks in the same row and the same column as this disk: thus 2×N-1 disks are flipped. The game ends when all disks show their white side. The following example shows a game on a 5×5 board.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">It can be proven that 3 is the minimal number of turns to finish this game.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">The bottom left disk on the N×N board has coordinates (0,0);</p>
/// <p class="euler__paragraph">the bottom right disk has coordinates (N-1,0) and the top left disk has coordinates (0,N-1). </p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let CN be the following configuration of a board with N×N disks:</p>
/// <p class="euler__paragraph">A disk at (x,y) satisfying , shows its black side; otherwise, it shows its white side. C5 is shown above.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let T(N) be the minimal number of turns to finish a game starting from configuration CN or 0 if configuration CN is unsolvable.</p>
/// <p class="euler__paragraph">We have shown that T(5)=3. You are also given that T(10)=29 and T(1 000)=395253.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find .</p></div>

/// challengeSeed:
function euler331() {
  // Good luck!
  return true;
}

euler331();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler331 === 'function', 'message: <code>euler331()</code> is a function.');
assert.strictEqual(euler331(), 467178235146843500, 'message: <code>euler331()</code> should return 467178235146843500.');
/// id: 5900f4b71000cf542c50ffca
