
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 375: Minimum of subsequences
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Let Sn be an integer sequence produced with the following pseudo-random number generator:</p>
/// <p class="euler__paragraph">S0</p>
/// <p class="euler__paragraph">    = </p>
/// <p class="euler__paragraph">    290797 </p>
/// <p class="euler__paragraph">  Sn+1</p>
/// <p class="euler__paragraph">    = </p>
/// <p class="euler__paragraph">    Sn2 mod 50515093</p>
/// <p class="euler__paragraph">  </p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let A(i, j) be the minimum of the numbers Si, Si+1, ... , Sj for i ≤ j.</p>
/// <p class="euler__paragraph">Let M(N) = ΣA(i, j) for 1 ≤ i ≤ j ≤ N.</p>
/// <p class="euler__paragraph">We can verify that M(10) = 432256955 and M(10 000) = 3264567774119.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find M(2 000 000 000).</p></div>

/// challengeSeed:
function euler375() {
  // Good luck!
  return true;
}

euler375();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler375 === 'function', 'message: <code>euler375()</code> is a function.');
assert.strictEqual(euler375(), 7435327983715286000, 'message: <code>euler375()</code> should return 7435327983715286000.');
/// id: 5900f4e41000cf542c50fff5
