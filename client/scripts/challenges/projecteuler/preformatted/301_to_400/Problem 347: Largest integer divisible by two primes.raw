
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 347: Largest integer divisible by two primes
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">The largest integer ≤ 100 that is only divisible by both the primes 2 and 3 is 96, as 96=32*3=25*3.</p>
/// <p class="euler__paragraph">For two distinct primes p and q let M(p,q,N) be the largest positive integer ≤N only divisible</p>
/// <p class="euler__paragraph">by both p and q and M(p,q,N)=0 if such a positive integer does not exist.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">E.g. M(2,3,100)=96. </p>
/// <p class="euler__paragraph">M(3,5,100)=75 and not 90 because 90 is divisible by 2 ,3 and 5.</p>
/// <p class="euler__paragraph">Also M(2,73,100)=0 because there does not exist a positive integer ≤ 100 that is divisible by both 2 and 73.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let S(N) be the sum of all distinct M(p,q,N).</p>
/// <p class="euler__paragraph">S(100)=2262.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find S(10 000 000).</p></div>

/// challengeSeed:
function euler347() {
  // Good luck!
  return true;
}

euler347();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler347 === 'function', 'message: <code>euler347()</code> is a function.');
assert.strictEqual(euler347(), 11109800204052, 'message: <code>euler347()</code> should return 11109800204052.');
/// id: 5900f4c81000cf542c50ffd9
