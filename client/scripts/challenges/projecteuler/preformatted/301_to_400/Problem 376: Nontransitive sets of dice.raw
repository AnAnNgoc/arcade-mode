
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 376: Nontransitive sets of dice
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Consider the following set of dice with nonstandard pips:</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Die A: 1 4 4 4 4 4</p>
/// <p class="euler__paragraph">Die B: 2 2 2 5 5 5</p>
/// <p class="euler__paragraph">Die C: 3 3 3 3 3 6</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">A game is played by two players picking a die in turn and rolling it. The player who rolls the highest value wins.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">If the first player picks die A and the second player picks die B we get</p>
/// <p class="euler__paragraph">P(second player wins) = 7/12 > 1/2</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">If the first player picks die B and the second player picks die C we get</p>
/// <p class="euler__paragraph">P(second player wins) = 7/12 > 1/2</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">If the first player picks die C and the second player picks die A we get</p>
/// <p class="euler__paragraph">P(second player wins) = 25/36 > 1/2</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">So whatever die the first player picks, the second player can pick another die and have a larger than 50% chance of winning.</p>
/// <p class="euler__paragraph">A set of dice having this property is called a nontransitive set of dice.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">We wish to investigate how many sets of nontransitive dice exist. We will assume the following conditions:There are three six-sided dice with each side having between 1 and N pips, inclusive.</p>
/// <p class="euler__paragraph">Dice with the same set of pips are equal, regardless of which side on the die the pips are located.</p>
/// <p class="euler__paragraph">The same pip value may appear on multiple dice; if both players roll the same value neither player wins.</p>
/// <p class="euler__paragraph">The sets of dice {A,B,C}, {B,C,A} and {C,A,B} are the same set.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">For N = 7 we find there are 9780 such sets.</p>
/// <p class="euler__paragraph">How many are there for N = 30 ?</p></div>

/// challengeSeed:
function euler376() {
  // Good luck!
  return true;
}

euler376();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler376 === 'function', 'message: <code>euler376()</code> is a function.');
assert.strictEqual(euler376(), 973059630185670, 'message: <code>euler376()</code> should return 973059630185670.');
/// id: 5900f4e51000cf542c50fff7
