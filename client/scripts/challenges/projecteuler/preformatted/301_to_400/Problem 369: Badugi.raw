
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 369: Badugi
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">In a standard 52 card deck of playing cards, a set of 4 cards is a Badugi if it contains 4 cards with no pairs and no two cards of the same suit.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let f(n) be the number of ways to choose n cards with a 4 card subset that is a Badugi.  For example, there are 2598960 ways to choose five cards from a standard 52 card deck, of which 514800 contain a 4 card subset that is a Badugi, so f(5) = 514800.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find ∑f(n)  for 4 ≤ n ≤ 13.</p></div>

/// challengeSeed:
function euler369() {
  // Good luck!
  return true;
}

euler369();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler369 === 'function', 'message: <code>euler369()</code> is a function.');
assert.strictEqual(euler369(), 862400558448, 'message: <code>euler369()</code> should return 862400558448.');
/// id: 5900f4de1000cf542c50fff0
