
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 310: Nim Square
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Alice and Bob play the game Nim Square.</p>
/// <p class="euler__paragraph">Nim Square is just like ordinary three-heap normal play Nim, but the players may only remove a square number of stones from a heap.</p>
/// <p class="euler__paragraph">The number of stones in the three heaps is represented by the ordered triple (a,b,c).</p>
/// <p class="euler__paragraph">If 0≤a≤b≤c≤29 then the number of losing positions for the next player is 1160.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find the number of losing positions for the next player if 0≤a≤b≤c≤100 000.</p></div>

/// challengeSeed:
function euler310() {
  // Good luck!
  return true;
}

euler310();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler310 === 'function', 'message: <code>euler310()</code> is a function.');
assert.strictEqual(euler310(), 2586528661783, 'message: <code>euler310()</code> should return 2586528661783.');
/// id: 5900f4a21000cf542c50ffb5
