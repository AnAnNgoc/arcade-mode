
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 382: Generating polygons
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">A polygon is a flat shape consisting of straight line segments that are joined to form a closed chain or circuit. A polygon consists of at least three sides and does not self-intersect.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">A set S of positive numbers is said to generate a polygon P if: no two sides of P are the same length,</p>
/// <p class="euler__paragraph"> the length of every side of P is in S, and</p>
/// <p class="euler__paragraph"> S contains no other value.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">For example:</p>
/// <p class="euler__paragraph">The set {3, 4, 5} generates a polygon with sides 3, 4, and 5 (a triangle).</p>
/// <p class="euler__paragraph">The set {6, 9, 11, 24} generates a polygon with sides 6, 9, 11, and 24 (a quadrilateral).</p>
/// <p class="euler__paragraph">The sets {1, 2, 3} and {2, 3, 4, 9} do not generate any polygon at all.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Consider the sequence s, defined as follows:s1 = 1, s2 = 2, s3 = 3</p>
/// <p class="euler__paragraph">sn = sn-1 + sn-3 for n > 3.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let Un be the set {s1, s2, ..., sn}. For example, U10 = {1, 2, 3, 4, 6, 9, 13, 19, 28, 41}.</p>
/// <p class="euler__paragraph">Let f(n) be the number of subsets of Un which generate at least one polygon.</p>
/// <p class="euler__paragraph">For example, f(5) = 7, f(10) = 501 and f(25) = 18635853.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find the last 9 digits of f(1018).</p></div>

/// challengeSeed:
function euler382() {
  // Good luck!
  return true;
}

euler382();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler382 === 'function', 'message: <code>euler382()</code> is a function.');
assert.strictEqual(euler382(), 697003956, 'message: <code>euler382()</code> should return 697003956.');
/// id: 5900f4eb1000cf542c50fffd
