
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 368: A Kempner-like series
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">The  harmonic series  $1 + \dfrac{1}{2} + \dfrac{1}{3} + \dfrac{1}{4} + ...$ is well known to be divergent.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">If we however omit from this series every term where the denominator has a 9 in it, the series remarkably enough converges to approximately 22.9206766193.</p>
/// <p class="euler__paragraph">This modified harmonic series is called the Kempner series.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let us now consider another modified harmonic series by omitting from the harmonic series every term where the denominator has 3 or more equal consecutive digits.</p>
/// <p class="euler__paragraph">One can verify that out of the first 1200 terms of the harmonic series, only 20 terms will be omitted.</p>
/// <p class="euler__paragraph">These 20 omitted terms are:</p>
/// <p class="euler__paragraph">$$\dfrac{1}{111}, \dfrac{1}{222}, \dfrac{1}{333}, \dfrac{1}{444}, \dfrac{1}{555}, \dfrac{1}{666}, \dfrac{1}{777}, \dfrac{1}{888}, \dfrac{1}{999}, \dfrac{1}{1000}, \dfrac{1}{1110}, \\\ \dfrac{1}{1111}, \dfrac{1}{1112}, \dfrac{1}{1113}, \dfrac{1}{1114}, \dfrac{1}{1115}, \dfrac{1}{1116}, \dfrac{1}{1117}, \dfrac{1}{1118}, \dfrac{1}{1119}$$</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">This series converges as well.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find the value the series converges to.</p>
/// <p class="euler__paragraph">Give your answer rounded to 10 digits behind the decimal point.</p></div>

/// challengeSeed:
function euler368() {
  // Good luck!
  return true;
}

euler368();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler368 === 'function', 'message: <code>euler368()</code> is a function.');
assert.strictEqual(euler368(), 253.6135092068, 'message: <code>euler368()</code> should return 253.6135092068.');
/// id: 5900f4dd1000cf542c50ffef
