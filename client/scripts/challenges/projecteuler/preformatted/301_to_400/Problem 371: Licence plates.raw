
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 371: Licence plates
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Oregon licence plates consist of three letters followed by a three digit number (each digit can be from [0..9]).</p>
/// <p class="euler__paragraph">While driving to work Seth plays the following game:</p>
/// <p class="euler__paragraph">Whenever the numbers of two licence plates seen on his trip add to 1000 that's a win.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">E.g. MIC-012 and HAN-988 is a win and RYU-500 and SET-500 too. (as long as he sees them in the same trip). </p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find the expected number of plates he needs to see for a win.</p>
/// <p class="euler__paragraph">Give your answer rounded to 8 decimal places behind the decimal point.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Note: We assume that each licence plate seen is equally likely to have any three digit number on it.</p></div>

/// challengeSeed:
function euler371() {
  // Good luck!
  return true;
}

euler371();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler371 === 'function', 'message: <code>euler371()</code> is a function.');
assert.strictEqual(euler371(), 40.66368097, 'message: <code>euler371()</code> should return 40.66368097.');
/// id: 5900f4e01000cf542c50fff2
