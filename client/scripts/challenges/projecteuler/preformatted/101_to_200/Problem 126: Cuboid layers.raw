
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 126: Cuboid layers
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">The minimum number of cubes to cover every visible face on a cuboid measuring 3 x 2 x 1 is twenty-two.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">If we then add a second layer to this solid it would require forty-six cubes to cover every visible face, the third layer would require seventy-eight cubes, and the fourth layer would require one-hundred and eighteen cubes to cover every visible face.</p>
/// <p class="euler__paragraph">However, the first layer on a cuboid measuring 5 x 1 x 1 also requires twenty-two cubes; similarly the first layer on cuboids measuring 5 x 3 x 1, 7 x 2 x 1, and 11 x 1 x 1 all contain forty-six cubes.</p>
/// <p class="euler__paragraph">We shall define C(n) to represent the number of cuboids that contain n cubes in one of its layers. So C(22) = 2, C(46) = 4, C(78) = 5, and C(118) = 8.</p>
/// <p class="euler__paragraph">It turns out that 154 is the least value of n for which C(n) = 10.</p>
/// <p class="euler__paragraph">Find the least value of n for which C(n) = 1000.</p></div>

/// challengeSeed:
function euler126() {
  // Good luck!
  return true;
}

euler126();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler126 === 'function', 'message: <code>euler126()</code> is a function.');
assert.strictEqual(euler126(), 18522, 'message: <code>euler126()</code> should return 18522.');
/// id: 5900f3ea1000cf542c50fefd
