
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 113: Non-bouncy numbers
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Working from left-to-right if no digit is exceeded by the digit to its left it is called an increasing number; for example, 134468.</p>
/// <p class="euler__paragraph">Similarly if no digit is exceeded by the digit to its right it is called a decreasing number; for example, 66420.</p>
/// <p class="euler__paragraph">We shall call a positive integer that is neither increasing nor decreasing a "bouncy" number; for example, 155349.</p>
/// <p class="euler__paragraph">As n increases, the proportion of bouncy numbers below n increases such that there are only 12951 numbers below one-million that are not bouncy and only 277032 non-bouncy numbers below 1010.</p>
/// <p class="euler__paragraph">How many numbers below a googol (10100) are not bouncy?</p></div>

/// challengeSeed:
function euler113() {
  // Good luck!
  return true;
}

euler113();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler113 === 'function', 'message: <code>euler113()</code> is a function.');
assert.strictEqual(euler113(), 51161058134250, 'message: <code>euler113()</code> should return 51161058134250.');
/// id: 5900f3dd1000cf542c50fef0
