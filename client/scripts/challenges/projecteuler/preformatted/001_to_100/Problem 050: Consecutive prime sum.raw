
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 50: Consecutive prime sum
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">The prime 41, can be written as the sum of six consecutive primes:</p>
/// <p class="euler__paragraph">41 = 2 + 3 + 5 + 7 + 11 + 13</p>
/// <p class="euler__paragraph">This is the longest sum of consecutive primes that adds to a prime below one-hundred.</p>
/// <p class="euler__paragraph">The longest sum of consecutive primes below one-thousand that adds to a prime, contains 21 terms, and is equal to 953.</p>
/// <p class="euler__paragraph">Which prime, below one-million, can be written as the sum of the most consecutive primes?</p></div>

/// challengeSeed:
function euler50() {
  // Good luck!
  return true;
}

euler50();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler50 === 'function', 'message: <code>euler50()</code> is a function.');
assert.strictEqual(euler50(), 997651, 'message: <code>euler50()</code> should return 997651.');
/// id: 5900f39e1000cf542c50feb1
