
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 93: Arithmetic expressions
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">By using each of the digits from the set, {1, 2, 3, 4}, exactly once, and making use of the four arithmetic operations (+, −, *, /) and brackets/parentheses, it is possible to form different positive integer targets.</p>
/// <p class="euler__paragraph">For example,</p>
/// <p class="euler__paragraph">8 = (4 * (1 + 3)) / 2</p>
/// <p class="euler__paragraph">14 = 4 * (3 + 1 / 2)</p>
/// <p class="euler__paragraph">19 = 4 * (2 + 3) − 1</p>
/// <p class="euler__paragraph">36 = 3 * 4 * (2 + 1)</p>
/// <p class="euler__paragraph">Note that concatenations of the digits, like 12 + 34, are not allowed.</p>
/// <p class="euler__paragraph">Using the set, {1, 2, 3, 4}, it is possible to obtain thirty-one different target numbers of which 36 is the maximum, and each of the numbers 1 to 28 can be obtained before encountering the first non-expressible number.</p>
/// <p class="euler__paragraph">Find the set of four distinct digits, a < b < c < d, for which the longest set of consecutive positive integers, 1 to n, can be obtained, giving your answer as a string: abcd.</p></div>

/// challengeSeed:
function euler93() {
  // Good luck!
  return true;
}

euler93();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler93 === 'function', 'message: <code>euler93()</code> is a function.');
assert.strictEqual(euler93(), 1258, 'message: <code>euler93()</code> should return 1258.');
/// id: 5900f3ca1000cf542c50fedc
