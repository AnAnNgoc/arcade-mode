
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 64: Odd period square roots
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">All square roots are periodic when written as continued fractions and can be written in the form:</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">√N = a0 +</p>
/// <p class="euler__paragraph">1</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">a1 +</p>
/// <p class="euler__paragraph">1</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">a2 +</p>
/// <p class="euler__paragraph">1</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">a3 + ...</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">For example, let us consider √23:</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">√23 = 4 + √23 — 4 = 4 + </p>
/// <p class="euler__paragraph">1</p>
/// <p class="euler__paragraph"> = 4 + </p>
/// <p class="euler__paragraph">1</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">1√23—4</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">1 + </p>
/// <p class="euler__paragraph">√23 – 37</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">If we continue we would get the following expansion:</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">√23 = 4 +</p>
/// <p class="euler__paragraph">1</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">1 +</p>
/// <p class="euler__paragraph">1</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">3 +</p>
/// <p class="euler__paragraph">1</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">1 +</p>
/// <p class="euler__paragraph">1</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">8 + ...</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">The process can be summarised as follows:</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">a0 = 4,</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">1√23—4</p>
/// <p class="euler__paragraph"> = </p>
/// <p class="euler__paragraph">√23+47</p>
/// <p class="euler__paragraph"> = 1 + </p>
/// <p class="euler__paragraph">√23—37</p>
/// <p class="euler__paragraph">a1 = 1,</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">7√23—3</p>
/// <p class="euler__paragraph"> = </p>
/// <p class="euler__paragraph">7(√23+3)14</p>
/// <p class="euler__paragraph"> = 3 + </p>
/// <p class="euler__paragraph">√23—32</p>
/// <p class="euler__paragraph">a2 = 3,</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">2√23—3</p>
/// <p class="euler__paragraph"> = </p>
/// <p class="euler__paragraph">2(√23+3)14</p>
/// <p class="euler__paragraph"> = 1 + </p>
/// <p class="euler__paragraph">√23—47</p>
/// <p class="euler__paragraph">a3 = 1,</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">7√23—4</p>
/// <p class="euler__paragraph"> = </p>
/// <p class="euler__paragraph">7(√23+4)7</p>
/// <p class="euler__paragraph"> = 8 + </p>
/// <p class="euler__paragraph">√23—4</p>
/// <p class="euler__paragraph">a4 = 8,</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">1√23—4</p>
/// <p class="euler__paragraph"> = </p>
/// <p class="euler__paragraph">√23+47</p>
/// <p class="euler__paragraph"> = 1 + </p>
/// <p class="euler__paragraph">√23—37</p>
/// <p class="euler__paragraph">a5 = 1,</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">7√23—3</p>
/// <p class="euler__paragraph"> = </p>
/// <p class="euler__paragraph">7(√23+3)14</p>
/// <p class="euler__paragraph"> = 3 + </p>
/// <p class="euler__paragraph">√23—32</p>
/// <p class="euler__paragraph">a6 = 3,</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">2√23—3</p>
/// <p class="euler__paragraph"> = </p>
/// <p class="euler__paragraph">2(√23+3)14</p>
/// <p class="euler__paragraph"> = 1 + </p>
/// <p class="euler__paragraph">√23—47</p>
/// <p class="euler__paragraph">a7 = 1,</p>
/// <p class="euler__paragraph"> </p>
/// <p class="euler__paragraph">7√23—4</p>
/// <p class="euler__paragraph"> = </p>
/// <p class="euler__paragraph">7(√23+4)7</p>
/// <p class="euler__paragraph"> = 8 + </p>
/// <p class="euler__paragraph">√23—4</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">It can be seen that the sequence is repeating. For conciseness, we use the notation √23 = [4;(1,3,1,8)], to indicate that the block (1,3,1,8) repeats indefinitely.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">The first ten continued fraction representations of (irrational) square roots are:</p>
/// <p class="euler__paragraph">√2=[1;(2)], period=1</p>
/// <p class="euler__paragraph">√3=[1;(1,2)], period=2</p>
/// <p class="euler__paragraph">√5=[2;(4)], period=1</p>
/// <p class="euler__paragraph">√6=[2;(2,4)], period=2</p>
/// <p class="euler__paragraph">√7=[2;(1,1,1,4)], period=4</p>
/// <p class="euler__paragraph">√8=[2;(1,4)], period=2</p>
/// <p class="euler__paragraph">√10=[3;(6)], period=1</p>
/// <p class="euler__paragraph">√11=[3;(3,6)], period=2</p>
/// <p class="euler__paragraph">√12= [3;(2,6)], period=2</p>
/// <p class="euler__paragraph">√13=[3;(1,1,1,1,6)], period=5</p>
/// <p class="euler__paragraph">Exactly four continued fractions, for N ≤ 13, have an odd period.</p>
/// <p class="euler__paragraph">How many continued fractions for N ≤ 10000 have an odd period?</p></div>

/// challengeSeed:
function euler64() {
  // Good luck!
  return true;
}

euler64();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler64 === 'function', 'message: <code>euler64()</code> is a function.');
assert.strictEqual(euler64(), 1322, 'message: <code>euler64()</code> should return 1322.');
/// id: 5900f3ac1000cf542c50febf
