
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('assert');

/// title: Problem 466: Distinct terms in a multiplication table
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Let P(m,n) be the number of distinct terms in an m×n multiplication table.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">For example, a 3×4 multiplication table looks like this:</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">× 12341 12342 24683 36912</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">There are 8 distinct terms {1,2,3,4,6,8,9,12}, therefore P(3,4) = 8.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">You are given that:</p>
/// <p class="euler__paragraph">P(64,64) = 1263,</p>
/// <p class="euler__paragraph">P(12,345) = 1998, and</p>
/// <p class="euler__paragraph">P(32,1015) = 13826382602124302.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find P(64,1016).</p></div>

/// challengeSeed:
function euler466() {
  // Good luck!
  return true;
}

euler466();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler466 === 'function', 'message: <code>euler466()</code> is a function.');
assert.strictEqual(euler466(), 258381958195474750, 'message: <code>euler466()</code> should return 258381958195474750.');
/// id: 5900f53e1000cf542c510051
