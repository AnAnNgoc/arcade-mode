
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 288: An enormous factorial
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">For any prime p the number N(p,q) is defined by</p>
/// <p class="euler__paragraph">N(p,q) = âˆ‘n=0 to q Tn*pn with Tn generated by the following random number generator:</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">S0 = 290797</p>
/// <p class="euler__paragraph">Sn+1 = Sn2 mod 50515093</p>
/// <p class="euler__paragraph">Tn = Sn mod p</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let Nfac(p,q) be the factorial of N(p,q).</p>
/// <p class="euler__paragraph">Let NF(p,q) be the number of factors p in Nfac(p,q).</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">You are given that NF(3,10000) mod 320=624955285.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find NF(61,107) mod 6110</p></div>

/// challengeSeed:
function euler288() {
  // Good luck!
  return true;
}

euler288();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler288 === 'function', 'message: <code>euler288()</code> is a function.');
assert.strictEqual(euler288(), 605857431263982000, 'message: <code>euler288()</code> should return 605857431263982000.');
/// id: 5900f48d1000cf542c50ff9f
