
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 265: Binary Circles
/// type: project-euler

/// categories:
math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
<div class="euler"><p class="euler__paragraph">2N binary digits can be placed in a circle so that all the N-digit clockwise subsequences are distinct.</p><p class="euler__paragraph"></p><p class="euler__paragraph">For N=3, two such circular arrangements are possible, ignoring rotations:</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">For the first arrangement, the 3-digit subsequences, in clockwise order, are: 000, 001, 010, 101, 011, 111, 110 and 100.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Each circular arrangement can be encoded as a number by concatenating the binary digits starting with the subsequence of all zeros as the most significant bits and proceeding clockwise. The two arrangements for N=3 are thus represented as 23 and 29:</p><p class="euler__paragraph">00010111 2 = 23</p><p class="euler__paragraph">00011101 2 = 29</p><p class="euler__paragraph"></p><p class="euler__paragraph">Calling S(N) the sum of the unique numeric representations, we can see that S(3) = 23 + 29 = 52.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Find S(5).</p></div>

/// challengeSeed:
function euler265() {
  // Good luck!
  return true;
}

euler265();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler265(), 209110240768, 'message: <code>euler265()</code> should return 209110240768.');
/// id: 5900f4761000cf542c50ff88
