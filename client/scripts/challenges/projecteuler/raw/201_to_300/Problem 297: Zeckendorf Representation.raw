
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 297: Zeckendorf Representation
/// type: project-euler

/// categories:
math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
<div class="euler"><p class="euler__paragraph">Each new term in the Fibonacci sequence is generated by adding the previous two terms.</p><p class="euler__paragraph">Starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Every positive integer can be uniquely written as a sum of nonconsecutive terms of the Fibonacci sequence. For example, 100 = 3 + 8 + 89.</p><p class="euler__paragraph">Such a sum is called the Zeckendorf representation of the number.</p><p class="euler__paragraph"></p><p class="euler__paragraph">For any integer n>0, let z(n) be the number of terms in the Zeckendorf representation of n.</p><p class="euler__paragraph">Thus, z(5) = 1, z(14) = 2, z(100) = 3 etc.</p><p class="euler__paragraph">Also, for 0<n<106, ∑ z(n) = 7894453.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Find ∑ z(n) for 0<n<1017.</p></div>

/// challengeSeed:
function euler297() {
  // Good luck!
  return true;
}

euler297();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler297(), 2252639041804718000, 'message: <code>euler297()</code> should return 2252639041804718000.');
/// id: 5900f4951000cf542c50ffa8
