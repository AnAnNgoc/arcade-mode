
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 436: Unfair wager
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Julie proposes the following wager to her sister Louise.</p>
/// <p class="euler__paragraph">She suggests they play a game of chance to determine who will wash the dishes.</p>
/// <p class="euler__paragraph">For this game, they shall use a generator of independent random numbers uniformly distributed between 0 and 1.</p>
/// <p class="euler__paragraph">The game starts with S = 0.</p>
/// <p class="euler__paragraph">The first player, Louise, adds to S different random numbers from the generator until S > 1 and records her last random number 'x'.</p>
/// <p class="euler__paragraph">The second player, Julie, continues adding to S different random numbers from the generator until S > 2 and records her last random number 'y'.</p>
/// <p class="euler__paragraph">The player with the highest number wins and the loser washes the dishes, i.e. if y > x the second player wins.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">For example, if the first player draws 0.62 and 0.44, the first player turn ends since 0.62+0.44 > 1 and x = 0.44.</p>
/// <p class="euler__paragraph">If the second players draws 0.1, 0.27 and 0.91, the second player turn ends since 0.62+0.44+0.1+0.27+0.91 > 2 and y = 0.91.</p>
/// <p class="euler__paragraph">Since y > x, the second player wins.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Louise thinks about it for a second, and objects: "That's not fair".</p>
/// <p class="euler__paragraph">What is the probability that the second player wins?</p>
/// <p class="euler__paragraph">Give your answer rounded to 10 places behind the decimal point in the form 0.abcdefghij</p></div>

/// challengeSeed:
function euler436() {
  // Good luck!
  return true;
}

euler436();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler436 === 'function', 'message: <code>euler436()</code> is a function.');
assert.strictEqual(euler436(), 0.5276662759, 'message: <code>euler436()</code> should return 0.5276662759.');
/// id: 5900f5221000cf542c510033
