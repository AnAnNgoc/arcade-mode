
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 462: Permutation of 3-smooth numbers
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">A 3-smooth number is an integer which has no prime factor larger than 3. For an integer N, we define S(N) as the set of 3-smooth numbers less than or equal to N . For example, S(20) = { 1, 2, 3, 4, 6, 8, 9, 12, 16, 18 }.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">We define F(N) as the number of permutations of S(N) in which each element comes after all of its proper divisors.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">This is one of the possible permutations for N = 20.</p>
/// <p class="euler__paragraph">- 1, 2, 4, 3, 9, 8, 16, 6, 18, 12.</p>
/// <p class="euler__paragraph">This is not a valid permutation because 12 comes before its divisor 6.</p>
/// <p class="euler__paragraph">- 1, 2, 4, 3, 9, 8, 12, 16, 6, 18.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">We can verify that F(6) = 5, F(8) = 9, F(20) = 450 and F(1000) â‰ˆ 8.8521816557e21.</p>
/// <p class="euler__paragraph">Find F(1018). Give as your answer its scientific notation rounded to ten digits after the decimal point.</p>
/// <p class="euler__paragraph">When giving your answer, use a lowercase e to separate mantissa and exponent. E.g. if the answer is 112,233,445,566,778,899 then the answer format would be 1.1223344557e17.</p></div>

/// challengeSeed:
function euler462() {
  // Good luck!
  return true;
}

euler462();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler462 === 'function', 'message: <code>euler462()</code> is a function.');
assert.strictEqual(euler462(), Infinity, 'message: <code>euler462()</code> should return Infinity.');
/// id: 5900f53b1000cf542c51004d
