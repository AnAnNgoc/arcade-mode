
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 423: Consecutive die throws
/// type: project-euler

/// categories:
math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
<div class="euler"><p class="euler__paragraph">Let n be a positive integer.</p><p class="euler__paragraph">A 6-sided die is thrown n times. Let c be the number of pairs of consecutive throws that give the same value.</p><p class="euler__paragraph"></p><p class="euler__paragraph">For example, if n = 7 and the values of the die throws are (1,1,5,6,6,6,3), then the following pairs of consecutive throws give the same value:</p><p class="euler__paragraph">(1,1,5,6,6,6,3)</p><p class="euler__paragraph">(1,1,5,6,6,6,3)</p><p class="euler__paragraph">(1,1,5,6,6,6,3)</p><p class="euler__paragraph">Therefore, c = 3 for (1,1,5,6,6,6,3).</p><p class="euler__paragraph"></p><p class="euler__paragraph">Define C(n) as the number of outcomes of throwing a 6-sided die n times such that c does not exceed π(n).1</p><p class="euler__paragraph">For example, C(3) = 216, C(4) = 1290, C(11) = 361912500 and C(24) = 4727547363281250000.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Define S(L) as ∑ C(n) for 1 ≤ n ≤ L.</p><p class="euler__paragraph">For example, S(50) mod 1 000 000 007 = 832833871.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Find S(50 000 000) mod 1 000 000 007.</p><p class="euler__paragraph"></p><p class="euler__paragraph">1 π denotes the prime-counting function, i.e. π(n) is the number of primes ≤ n.</p></div>

/// challengeSeed:
function euler423() {
  // Good luck!
  return true;
}

euler423();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler423(), 653972374, 'message: <code>euler423()</code> should return 653972374.');
/// id: 5900f5141000cf542c510027
