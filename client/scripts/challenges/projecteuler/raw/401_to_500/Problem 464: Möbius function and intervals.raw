
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 464: Möbius function and intervals
/// type: project-euler

/// categories:
math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
<div class="euler"><p class="euler__paragraph">The Möbius function, denoted μ(n), is defined as:</p><p class="euler__paragraph">μ(n) = (-1)ω(n) if n is squarefree (where ω(n) is the number of distinct prime factors of n)</p><p class="euler__paragraph">μ(n) = 0 if n is not squarefree.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Let P(a,b) be the number of integers n in the interval [a,b] such that μ(n) = 1.</p><p class="euler__paragraph">Let N(a,b) be the number of integers n in the interval [a,b] such that μ(n) = -1.</p><p class="euler__paragraph">For example, P(2,10) = 2 and N(2,10) = 4.</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">Let C(n) be the number of integer pairs (a,b) such that:</p><p class="euler__paragraph"> 1 ≤ a ≤ b ≤ n,</p><p class="euler__paragraph"> 99·N(a,b) ≤ 100·P(a,b), and</p><p class="euler__paragraph"> 99·P(a,b) ≤ 100·N(a,b).</p><p class="euler__paragraph"></p><p class="euler__paragraph">For example, C(10) = 13, C(500) = 16676 and C(10 000) = 20155319.</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">Find C(20 000 000).</p></div>

/// challengeSeed:
function euler464() {
  // Good luck!
  return true;
}

euler464();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler464(), 198775297232878, 'message: <code>euler464()</code> should return 198775297232878.');
/// id: 5900f53d1000cf542c51004f
