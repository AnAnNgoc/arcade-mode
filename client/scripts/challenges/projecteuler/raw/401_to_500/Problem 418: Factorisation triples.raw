
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 418: Factorisation triples
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Let n be a positive integer. An integer triple (a, b, c) is called a factorisation triple of n if: 1 ≤ a ≤ b ≤ c</p>
/// <p class="euler__paragraph"> a·b·c = n.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Define f(n) to be a + b + c for the factorisation triple (a, b, c) of n which minimises c / a. One can show that this triple is unique.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">For example, f(165) = 19, f(100100) = 142 and f(20!) = 4034872.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find f(43!).</p></div>

/// challengeSeed:
function euler418() {
  // Good luck!
  return true;
}

euler418();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler418 === 'function', 'message: <code>euler418()</code> is a function.');
assert.strictEqual(euler418(), 1177163565297340400, 'message: <code>euler418()</code> should return 1177163565297340400.');
/// id: 5900f50f1000cf542c510021
