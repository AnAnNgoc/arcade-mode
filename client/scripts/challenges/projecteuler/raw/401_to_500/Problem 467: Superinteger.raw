
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 467: Superinteger
/// type: project-euler

/// categories:
math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
<div class="euler"><p class="euler__paragraph">An integer s is called a superinteger of another integer n if the digits of n form a subsequence of the digits of s.</p><p class="euler__paragraph">For example, 2718281828 is a superinteger of 18828, while 314159 is not a superinteger of 151.</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">Let p(n) be the nth prime number, and let c(n) be the nth composite number. For example, p(1) = 2, p(10) = 29, c(1) = 4 and c(10) = 18.</p><p class="euler__paragraph">{p(i) : i ≥ 1} = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, ...}</p><p class="euler__paragraph">{c(i) : i ≥ 1} = {4, 6, 8, 9, 10, 12, 14, 15, 16, 18, ...}</p><p class="euler__paragraph"></p><p class="euler__paragraph">Let PD the sequence of the digital roots of {p(i)} (CD is defined similarly for {c(i)}):</p><p class="euler__paragraph">PD = {2, 3, 5, 7, 2, 4, 8, 1, 5, 2, ...}</p><p class="euler__paragraph">CD = {4, 6, 8, 9, 1, 3, 5, 6, 7, 9, ...}</p><p class="euler__paragraph"></p><p class="euler__paragraph">Let Pn be the integer formed by concatenating the first n elements of PD (Cn is defined similarly for CD).</p><p class="euler__paragraph">P10 = 2357248152</p><p class="euler__paragraph">C10 = 4689135679</p><p class="euler__paragraph"></p><p class="euler__paragraph">Let f(n) be the smallest positive integer that is a common superinteger of Pn and Cn. For example, f(10) = 2357246891352679, and f(100) mod 1 000 000 007 = 771661825.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Find f(10 000) mod 1 000 000 007.</p></div>

/// challengeSeed:
function euler467() {
  // Good luck!
  return true;
}

euler467();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler467(), 775181359, 'message: <code>euler467()</code> should return 775181359.');
/// id: 5900f5411000cf542c510052
