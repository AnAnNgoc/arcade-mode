
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 579: Lattice points in lattice cubes
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">A lattice cube is a cube in which all vertices have integer coordinates. Let C(n) be the number of different lattice cubes in which the coordinates of all vertices range between (and including) 0 and n. Two cubes are hereby considered different if any of their vertices have different coordinates.</p><p class="euler__paragraph">For example, C(1)=1, C(2)=9, C(4)=100, C(5)=229, C(10)=4469 and C(50)=8154671.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Different cubes may contain different numbers of lattice points.</p><p class="euler__paragraph"></p><p class="euler__paragraph">For example, the cube with the vertices</p><p class="euler__paragraph">(0, 0, 0), (3, 0, 0), (0, 3, 0), (0, 0, 3), (0, 3, 3), (3, 0, 3), (3, 3, 0), (3, 3, 3) contains 64 lattice points (56 lattice points on the surface including the 8 vertices and 8 points within the cube). </p><p class="euler__paragraph">In contrast, the cube with the vertices</p><p class="euler__paragraph">(0, 2, 2), (1, 4, 4), (2, 0, 3), (2, 3, 0), (3, 2, 5), (3, 5, 2), (4, 1, 1), (5, 3, 3) contains only 40 lattice points (20 points on the surface and 20 points within the cube), although both cubes have the same side length 3.</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">Let S(n) be the sum of the lattice points contained in the different lattice cubes in which the coordinates of all vertices range between (and including) 0 and n.</p><p class="euler__paragraph"></p><p class="euler__paragraph">For example, S(1)=8, S(2)=91, S(4)=1878, S(5)=5832, S(10)=387003 and S(50)=29948928129.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Find S(5000) mod 109.</p></div>

/// challengeSeed:
function euler579() {
  // Good luck!
  return true;
}

euler579();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler579(), TODO: MISSING ANSWER, 'message: <code>euler579()</code> should return TODO: MISSING ANSWER.');
/// id: 5900ff0558d9425c70af4f95
