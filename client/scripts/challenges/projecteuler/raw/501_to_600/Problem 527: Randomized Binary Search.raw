
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 527: Randomized Binary Search
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">A secret integer t is selected at random within the range 1 ≤ t ≤ n. </p><p class="euler__paragraph"></p><p class="euler__paragraph">The goal is to guess the value of t by making repeated guesses, via integer g. After a guess is made, there are three possible outcomes, in which it will be revealed that either g < t, g = t, or g > t. Then the process can repeat as necessary.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Normally, the number of guesses required on average can be minimized with a binary search: Given a lower bound L and upper bound H (initialized to L = 1 and H = n), let g = ⌊(L+H)/2⌋ where ⌊⋅⌋ is the integer floor function. If g = t, the process ends. Otherwise, if g < t, set L = g+1, but if g > t instead, set H = g−1. After setting the new bounds, the search process repeats, and ultimately ends once t is found. Even if t can be deduced without searching, assume that a search will be required anyway to confirm the value.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Your friend Bob believes that the standard binary search is not that much better than his randomized variant: Instead of setting g = ⌊(L+H)/2⌋, simply let g be a random integer between L and H, inclusive. The rest of the algorithm is the same as the standard binary search. This new search routine will be referred to as a random binary search.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Given that 1 ≤ t ≤ n for random t, let B(n) be the expected number of guesses needed to find t using the standard binary search, and let R(n) be the expected number of guesses needed to find t using the random binary search. For example, B(6) = 2.33333333 and R(6) = 2.71666667 when rounded to 8 decimal places.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Find R(1010) − B(1010) rounded to 8 decimal places.</p></div>

/// challengeSeed:
function euler527() {
  // Good luck!
  return true;
}

euler527();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler527(), TODO: MISSING ANSWER, 'message: <code>euler527()</code> should return TODO: MISSING ANSWER.');
/// id: 5900fed158d9425c70af4f61
