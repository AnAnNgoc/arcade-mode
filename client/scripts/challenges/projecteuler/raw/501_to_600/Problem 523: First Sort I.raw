
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 523: First Sort I
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Consider the following algorithm for sorting a list:</p><p class="euler__paragraph">1. Starting from the beginning of the list, check each pair of adjacent elements in turn.</p><p class="euler__paragraph">2. If the elements are out of order:</p><p class="euler__paragraph">a. Move the smallest element of the pair at the beginning of the list.</p><p class="euler__paragraph">b. Restart the process from step 1.</p><p class="euler__paragraph">3. If all pairs are in order, stop.For example, the list { 4 1 3 2 } is sorted as follows:</p><p class="euler__paragraph">4 1 3 2  (4 and 1 are out of order so move 1 to the front of the list)</p><p class="euler__paragraph">1 4 3 2  (4 and 3 are out of order so move 3 to the front of the list)</p><p class="euler__paragraph">3 1 4 2  (3 and 1 are out of order so move 1 to the front of the list)</p><p class="euler__paragraph">1 3 4 2  (4 and 2 are out of order so move 2 to the front of the list)</p><p class="euler__paragraph">2 1 3 4  (2 and 1 are out of order so move 1 to the front of the list)</p><p class="euler__paragraph">1 2 3 4  (The list is now sorted)Let F(L) be the number of times step 2a is executed to sort list L. For example, F({ 4 1 3 2 }) = 5.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Let E(n) be the expected value of F(P) over all permutations P of the integers {1, 2, ..., n}.</p><p class="euler__paragraph">You are given E(4) = 3.25 and E(10) = 115.725.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Find E(30). Give your answer rounded to two digits after the decimal point.</p></div>

/// challengeSeed:
function euler523() {
  // Good luck!
  return true;
}

euler523();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler523(), TODO: MISSING ANSWER, 'message: <code>euler523()</code> should return TODO: MISSING ANSWER.');
/// id: 5900fe885726495c153991c8
