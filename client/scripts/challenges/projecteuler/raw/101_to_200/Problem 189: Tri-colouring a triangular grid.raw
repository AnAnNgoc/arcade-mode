
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 189: Tri-colouring a triangular grid
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Consider the following configuration of 64 triangles:</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">We wish to colour the interior of each triangle with one of three colours: red, green or blue, so that no two neighbouring triangles have the same colour. Such a colouring shall be called valid. Here, two triangles are said to be neighbouring if they share an edge.</p><p class="euler__paragraph">Note: if they only share a vertex, then they are not neighbours. </p><p class="euler__paragraph"></p><p class="euler__paragraph">For example, here is a valid colouring of the above grid:</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">A colouring C' which is obtained from a colouring C by rotation or reflection is considered distinct from C unless the two are identical.</p><p class="euler__paragraph"></p><p class="euler__paragraph">How many distinct valid colourings are there for the above configuration?</p></div>

/// challengeSeed:
function euler189() {
  // Good luck!
  return true;
}

euler189();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler189(), 10834893628237824, 'message: <code>euler189()</code> should return 10834893628237824.');
/// id: 5900f4291000cf542c50ff3c
