
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 183: Maximum product of parts
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Let N be a positive integer and let N be split into k equal parts, r = N/k, so that N = r + r + ... + r.</p><p class="euler__paragraph">Let P be the product of these parts, P = r × r × ... × r = rk.</p><p class="euler__paragraph"></p><p class="euler__paragraph">For example, if 11 is split into five equal parts, 11 = 2.2 + 2.2 + 2.2 + 2.2 + 2.2, then P = 2.25 = 51.53632.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Let M(N) = Pmax for a given value of N.</p><p class="euler__paragraph"></p><p class="euler__paragraph">It turns out that the maximum for N = 11 is found by splitting eleven into four equal parts which leads to Pmax = (11/4)4; that is, M(11) = 14641/256 = 57.19140625, which is a terminating decimal.</p><p class="euler__paragraph"></p><p class="euler__paragraph">However, for N = 8 the maximum is achieved by splitting it into three equal parts, so M(8) = 512/27, which is a non-terminating decimal.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Let D(N) = N if M(N) is a non-terminating decimal and D(N) = -N if M(N) is a terminating decimal.</p><p class="euler__paragraph"></p><p class="euler__paragraph">For example, ΣD(N) for 5 ≤ N ≤ 100 is 2438.</p><p class="euler__paragraph"></p><p class="euler__paragraph">Find ΣD(N) for 5 ≤ N ≤ 10000.</p></div>

/// challengeSeed:
function euler183() {
  // Good luck!
  return true;
}

euler183();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler183(), 48861552, 'message: <code>euler183()</code> should return 48861552.');
/// id: 5900f4231000cf542c50ff36
