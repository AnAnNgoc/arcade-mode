
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 188: The hyperexponentiation of a number
/// type: project-euler

/// categories:
math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
<div class="euler"><p class="euler__paragraph">The hyperexponentiation or tetration of a number a by a positive integer b, denoted by a↑↑b or ba, is recursively defined by:</p><p class="euler__paragraph">a↑↑1 = a,</p><p class="euler__paragraph">a↑↑(k+1) = a(a↑↑k).</p><p class="euler__paragraph"></p><p class="euler__paragraph">Thus we have e.g. 3↑↑2 = 33 = 27, hence 3↑↑3 = 327 = 7625597484987 and 3↑↑4 is roughly 103.6383346400240996*10^12.</p><p class="euler__paragraph">Find the last 8 digits of 1777↑↑1855.</p></div>

/// challengeSeed:
function euler188() {
  // Good luck!
  return true;
}

euler188();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler188(), 95962097, 'message: <code>euler188()</code> should return 95962097.');
/// id: 5900f4291000cf542c50ff3b
