
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 24: Lexicographic permutations
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of 0, 1 and 2 are:</p><p class="euler__paragraph">012   021   102   120   201   210</p><p class="euler__paragraph">What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?</p></div>

/// challengeSeed:
function euler24() {
  // Good luck!
  return true;
}

euler24();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler24(), 2783915460, 'message: <code>euler24()</code> should return 2783915460.');
/// id: 5900f3841000cf542c50fe97
