
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 57: Square root convergents
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">It is possible to show that the square root of two can be expressed as an infinite continued fraction.</p>
/// <p class="euler__paragraph">âˆš 2 = 1 + 1/(2 + 1/(2 + 1/(2 + ... ))) = 1.414213...</p>
/// <p class="euler__paragraph">By expanding this for the first four iterations, we get:</p>
/// <p class="euler__paragraph">1 + 1/2 = 3/2 = 1.5</p>
/// <p class="euler__paragraph">1 + 1/(2 + 1/2) = 7/5 = 1.4</p>
/// <p class="euler__paragraph">1 + 1/(2 + 1/(2 + 1/2)) = 17/12 = 1.41666...</p>
/// <p class="euler__paragraph">1 + 1/(2 + 1/(2 + 1/(2 + 1/2))) = 41/29 = 1.41379...</p>
/// <p class="euler__paragraph">The next three expansions are 99/70, 239/169, and 577/408, but the eighth expansion, 1393/985, is the first example where the number of digits in the numerator exceeds the number of digits in the denominator.</p>
/// <p class="euler__paragraph">In the first one-thousand expansions, how many fractions contain a numerator with more digits than denominator?</p></div>

/// challengeSeed:
function euler57() {
  // Good luck!
  return true;
}

euler57();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler57 === 'function', 'message: <code>euler57()</code> is a function.');
assert.strictEqual(euler57(), 153, 'message: <code>euler57()</code> should return 153.');
/// id: 5900f3a51000cf542c50feb8
