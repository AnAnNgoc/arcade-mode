
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 25: 1000-digit Fibonacci number
/// type: project-euler

/// categories:
math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
<div class="euler"><p class="euler__paragraph">The Fibonacci sequence is defined by the recurrence relation:</p><p class="euler__paragraph">Fn = Fn−1 + Fn−2, where F1 = 1 and F2 = 1.</p><p class="euler__paragraph">Hence the first 12 terms will be:</p><p class="euler__paragraph">F1 = 1</p><p class="euler__paragraph">F2 = 1</p><p class="euler__paragraph">F3 = 2</p><p class="euler__paragraph">F4 = 3</p><p class="euler__paragraph">F5 = 5</p><p class="euler__paragraph">F6 = 8</p><p class="euler__paragraph">F7 = 13</p><p class="euler__paragraph">F8 = 21</p><p class="euler__paragraph">F9 = 34</p><p class="euler__paragraph">F10 = 55</p><p class="euler__paragraph">F11 = 89</p><p class="euler__paragraph">F12 = 144</p><p class="euler__paragraph">The 12th term, F12, is the first term to contain three digits.</p><p class="euler__paragraph">What is the index of the first term in the Fibonacci sequence to contain 1000 digits?</p></div>

/// challengeSeed:
function euler25() {
  // Good luck!
  return true;
}

euler25();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler25(), 4782, 'message: <code>euler25()</code> should return 4782.');
/// id: 5900f3851000cf542c50fe98
