
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 305: Reflexive Position
/// type: project-euler

/// categories:
math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
<div class="euler"><p class="euler__paragraph">Let's call S the (infinite) string that is made by concatenating the consecutive positive integers (starting from 1)  written down in base 10. </p><p class="euler__paragraph">Thus, S = 1234567891011121314151617181920212223242...</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">It's easy to see that any number will show up an infinite number of times in S.</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">Let's call f(n) the starting position of the nth occurrence of n in S. </p><p class="euler__paragraph">For example, f(1)=1, f(5)=81, f(12)=271 and f(7780)=111111365.</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">Find ∑f(3k) for 1≤k≤13.</p></div>

/// challengeSeed:
function euler305() {
  // Good luck!
  return true;
}

euler305();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler305(), 18174995535140, 'message: <code>euler305()</code> should return 18174995535140.');
/// id: 5900f49d1000cf542c50ffb0
