
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 366: Stone Game III
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">Two players, Anton and Bernhard, are playing the following game.</p>
/// <p class="euler__paragraph">There is one pile of n stones.</p>
/// <p class="euler__paragraph">The first player may remove any positive number of stones, but not the whole pile.</p>
/// <p class="euler__paragraph">Thereafter, each player may remove at most twice the number of stones his opponent took on the previous move.</p>
/// <p class="euler__paragraph">The player who removes the last stone wins.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">E.g. n=5</p>
/// <p class="euler__paragraph">If the first player takes anything more than one stone the next player will be able to take all remaining stones.</p>
/// <p class="euler__paragraph">If the first player takes one stone, leaving four, his opponent will take also one stone, leaving three stones.</p>
/// <p class="euler__paragraph">The first player cannot take all three because he may take at most 2x1=2 stones. So let's say he takes also one stone, leaving 2. The second player can take the two remaining stones and wins.</p>
/// <p class="euler__paragraph">So 5 is a losing position for the first player.</p>
/// <p class="euler__paragraph">For some winning positions there is more than one possible move for the first player.</p>
/// <p class="euler__paragraph">E.g. when n=17 the first player can remove one or four stones.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Let M(n) be the maximum number of stones the first player can take from a winning position at his first turn and M(n)=0 for any other position.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">∑M(n) for n≤100 is 728.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find  ∑M(n) for n≤1018.</p>
/// <p class="euler__paragraph">Give your answer modulo 108.</p></div>

/// challengeSeed:
function euler366() {
  // Good luck!
  return true;
}

euler366();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler366 === 'function', 'message: <code>euler366()</code> is a function.');
assert.strictEqual(euler366(), 88351299, 'message: <code>euler366()</code> should return 88351299.');
/// id: 5900f4da1000cf542c50ffed
