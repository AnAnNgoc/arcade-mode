
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 346: Strong Repunits
/// type: project-euler

/// categories:
/// math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
/// <div class="euler"><p class="euler__paragraph">The number 7 is special, because 7 is 111 written in base 2, and 11 written in base 6 (i.e. 710 = 116 = 1112). In other words, 7 is a repunit in at least two bases b > 1. </p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">We shall call a positive integer with this property a strong repunit. It can be verified that there are 8 strong repunits below 50:  {1,7,13,15,21,31,40,43}. Furthermore, the sum of all strong repunits below 1000 equals 15864.</p>
/// <p class="euler__paragraph"></p>
/// <p class="euler__paragraph">Find the sum of all strong repunits below 1012.</p></div>

/// challengeSeed:
function euler346() {
  // Good luck!
  return true;
}

euler346();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert(typeof euler346 === 'function', 'message: <code>euler346()</code> is a function.');
assert.strictEqual(euler346(), 336108797689259260, 'message: <code>euler346()</code> should return 336108797689259260.');
/// id: 5900f4c71000cf542c50ffd8
