
/* eslint spaced-comment: 0 */
/* eslint no-redeclare: 0 */
/* eslint no-unused-vars: 0 */

const assert = require('chai').assert;

/// title: Problem 361: Subsequence of Thue-Morse sequence
/// type: project-euler

/// categories:
math

/// difficulty: ?

/// benchmark:
//replaceWithActualFunctionHere;

/// description:
<div class="euler"><p class="euler__paragraph">The Thue-Morse sequence {Tn} is a binary sequence satisfying:</p><p class="euler__paragraph">T0 = 0</p><p class="euler__paragraph">T2n = Tn</p><p class="euler__paragraph">T2n+1 = 1 - Tn</p><p class="euler__paragraph"></p><p class="euler__paragraph">The first several terms of {Tn} are given as follows:</p><p class="euler__paragraph">01101001100101101001011001101001....</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">We define {An} as the sorted sequence of integers such that the binary expression of each element appears as a subsequence in {Tn}.</p><p class="euler__paragraph">For example, the decimal number 18 is expressed as 10010 in binary. 10010 appears in {Tn} (T8 to T12), so 18 is an element of {An}.</p><p class="euler__paragraph">The decimal number 14 is expressed as 1110 in binary. 1110 never appears in {Tn}, so 14 is not an element of {An}.</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">The first several terms of An are given as follows:</p><p class="euler__paragraph">n0123456789101112…An012345691011121318…</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">We can also verify that A100 = 3251 and A1000 = 80852364498.</p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph"></p><p class="euler__paragraph">Find the last 9 digits of .</p></div>

/// challengeSeed:
function euler361() {
  // Good luck!
  return true;
}

euler361();

/// solutions:

/// tail:
const replaceThis = 3;

/// tests:
assert.strictEqual(euler361(), 178476944, 'message: <code>euler361()</code> should return 178476944.');
/// id: 5900f4d51000cf542c50ffe8
