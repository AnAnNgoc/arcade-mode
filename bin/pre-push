#!/usr/bin/env perl

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#

my $remote= $ARGV[0];
my $url= $ARGV[1];

print "remote: $remote, url: $url\n";

my $branch = `git branch`;

if ($branch !~ /\*\s+master/) {
    print "Not in master branch. Skipping tests.\n";
    exit 0;
}

print "Running unit tests for the push to master.\n";
my $error = system("npm run test:client >& /dev/null");
if ($error == 0) {
    print "Tests OK. Proceeding to push.\n";
}
else {
    print "Tests FAILED. Aborting push.\n";
}
exit $error;
